dataSources:
  db0: !!org.apache.commons.dbcp.BasicDataSource
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:%s;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
    username: sa
    password: 
    maxActive: 100
  db1: !!org.apache.commons.dbcp.BasicDataSource
    driverClassName: org.h2.Driver
    url: jdbc:h2:mem:%s;DB_CLOSE_DELAY=-1;DATABASE_TO_UPPER=false;MODE=MYSQL
    username: sa
    password: 
    maxActive: 100
    
defaultDataSourceName: db0

defaultKeyGeneratorClass: com.dangdang.ddframe.rdb.sharding.config.yaml.fixture.IncrementKeyGenerator
    
tables:
  config:
    actualTables: config_${0..1}
    dataSourceNames: config
    
  t_order: 
    actualTables: t_order_${0..1}
    databaseStrategy: 
      standard:
        shardingColumn: order_id
        preciseAlgorithmClassName: com.dangdang.ddframe.rdb.sharding.config.yaml.algorithm.SingleAlgorithm
    tableStrategy: 
      inline:
        shardingColumn: id
        algorithmInlineExpression: t_order_${id % 2}
  t_order_item:
    actualTables: t_order_item_${0..1}
    keyGeneratorColumnName: order_item_id
    keyGeneratorClass: com.dangdang.ddframe.rdb.sharding.config.yaml.fixture.DecrementKeyGenerator
    #绑定表中其余的表的策略与第一张表的策略相同
    databaseStrategy: 
      standard:
        shardingColumn: order_id
        preciseAlgorithmClassName: com.dangdang.ddframe.rdb.sharding.config.yaml.algorithm.SingleAlgorithm
    tableStrategy: 
      inline:
        shardingColumn: id
        algorithmInlineExpression: t_order_item_${id % 2}

bindingTables:
  - t_order,t_order_item

#默认数据库分片策略
defaultDatabaseStrategy:
  complex:
      shardingColumns: order_id, user_id
      algorithmClassName: com.dangdang.ddframe.rdb.sharding.config.yaml.algorithm.MultiAlgorithm
defaultTableStrategy:
  complex:
    shardingColumns: id, order_id
    algorithmClassName: com.dangdang.ddframe.rdb.sharding.config.yaml.algorithm.MultiAlgorithm
