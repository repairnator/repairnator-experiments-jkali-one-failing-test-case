#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Text::ASCIITable;
use Perun::Agent;
use Perun::Common qw(printMessage printTable getSortingFunction);

sub help {
	return qq{
	Prints list of Users allowed on Resource. Resource is required field.
	----------------------------------------------------
	Available options:
	--resourceId  | -r  Resource idetifier
	--orderById   | -i  order by numeric ID
	--orderByName | -n  order by name
	--batch       | -b  batch
	--help        | -h  prints this help

	};
}

our $batch;
my ($resourceId, $sortingFunction);
GetOptions("help|h"  => sub {
		print help;
		exit 0;
	},
	"resourceId|r=i" => \$resourceId,
	"orderById|i"    => sub { $sortingFunction = getSortingFunction("getId") },
	"orderByName|n"  => sub {$sortingFunction = getSortingFunction("getSortingName", 1) },
	"batch|b"        => \$batch) || die help;

#options check
unless (defined $sortingFunction) { $sortingFunction = getSortingFunction("getId", 1); }
unless (defined $resourceId) { die "ERROR: resourceId required\n";}

my $agent = Perun::Agent->new();
my $resourcesAgent = $agent->getResourcesAgent;
my @users = $resourcesAgent->getAllowedUsers( resource => $resourceId );
unless (@users) {
	printMessage "No Member found\n", $batch;
	exit 0;
}

#output
printTable($sortingFunction, @users);
