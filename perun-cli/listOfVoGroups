#!/usr/bin/perl

use strict;
use warnings;
use Getopt::Long qw(:config no_ignore_case);
use Text::ASCIITable;
use Perun::Agent;
use Perun::Common qw(printMessage printTable getSortingFunction);


sub help {
	return qq{
	Prints list of Groups in VO. VO is required filed.
	---------------------------
	Available options:
	--voId          | -v VO idetifier
	--voShortName   | -V VO shortName
	--orderById     | -i order by numeric ID (default)
	--orderByName   | -n order by name
	--batch         | -b batch
	--help          | -h prints this help

	};
}

our $batch;
my ($voId, $voShortName, $sortingFunction);
GetOptions("help|h"   => sub {
		print help;
		exit 0;
	},
	"voId|v=i"        => \$voId,
	"voShortName|V=s" => \$voShortName,
	"orderById|i"     => sub { $sortingFunction = getSortingFunction("getId") },
	"orderByName|n"   => sub {$sortingFunction = getSortingFunction("getName", 1) },
	"batch|b"         => \$batch) || die help;

my $agent = Perun::Agent->new();

#options check
unless (defined $sortingFunction) { $sortingFunction = getSortingFunction("getName", 1); }
unless (defined $voId) {
	unless (defined $voShortName) { die "ERROR: VO specification required.\n"; }
	my $vo = $agent->getVosAgent->getVoByShortName( shortName => $voShortName );
	$voId = $vo->getId;
}


my $groupsAgent = $agent->getGroupsAgent;
my @groups = $groupsAgent->getGroups( vo => $voId );

#output
printTable($sortingFunction, @groups);
