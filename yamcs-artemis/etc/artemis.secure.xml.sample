<configuration xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
               xmlns="urn:activemq"
               xsi:schemaLocation="urn:activemq /schema/artemis-server.xsd">
               
<core xmlns="urn:activemq:core">

    <persistence-enabled>false</persistence-enabled>
    <security-enabled>true</security-enabled>
    <security-invalidation-interval>60000</security-invalidation-interval>
    <journal-type>NIO</journal-type>



    <management-notification-address>activemq.notifications</management-notification-address>
    <!-- set these even when no clustering is activated to avoid warnings about security settings -->
    <cluster-user>HORNETQ.CLUSTER.ADMIN.USER</cluster-user>
    <cluster-password>uhchmPeLAcGdo</cluster-password>

   <!-- Connectors -->
	<connectors>
            <connector name="in-vm">vm://0</connector>
            <connector name="netty">tcp://0.0.0.0:5445/</connector>
        </connectors>

        <acceptors>
            <acceptor name="in-vm">vm://0</acceptor>
            <acceptor name="netty">tcp://0.0.0.0:5445</acceptor>
        </acceptors>

    <address-settings>
        <!-- make sure that the deliveries to data addresses don't consume all the memory-->
        <address-setting match="tempDataAddress.#">
            <max-size-bytes>100000</max-size-bytes>
            <address-full-policy>BLOCK</address-full-policy>
        </address-setting>

        <!-- link info queues (TM/TC downlink/upling status) keep only the last value for each link-->
        <address-setting match="linkInfo">
            <last-value-queue>true</last-value-queue>
        </address-setting>

        <!-- channel info queues keep only the last value for each channel-->
        <address-setting match="channelInfo">
            <last-value-queue>true</last-value-queue>
        </address-setting>

        <!-- CommandQueue info queue keep only the last value for each command-->
        <address-setting match="cmdQueueInfo">
            <last-value-queue>true</last-value-queue>
        </address-setting>

    </address-settings>

    <remoting-incoming-interceptors>
       <class-name>org.yamcs.security.ArtemisAuthInterceptor</class-name>
    </remoting-incoming-interceptors>

    <!-- Match an address, determine what roles are required for which queue action. -->
    <!-- The closest matched setting is used exclusively, no inheritance. -->
    <!-- Yamcs server internally has all roles. -->
    <security-settings>
        <!-- Per-instance addresses -->
        <!-- temp data queues -->
        <security-setting match="tempRpcAddress.#">
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="consume" roles="Operator,Administrator,Role1"/>
            <permission type="send" roles="Operator,Administrator,Role1"/>
        </security-setting>
        <security-setting match="tempDataAddress.#">
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="consume" roles="Operator,Administrator,Role1"/>
            <permission type="send" roles="Operator,Administrator,Role1"/>
        </security-setting>
        <!-- Privileged operators can use the realtime stream -->
        <security-setting match="*.tm_realtime">
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="consume" roles="Operator,Administrator,Role1"/>
            <permission type="send" roles="Operator,Administrator,Role1"/>
        </security-setting>
        <security-setting match="*.parameters_realtime">
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1"/>
            <permission type="consume" roles="Operator,Administrator,Role1"/>
            <permission type="send" roles="Operator,Administrator,Role1"/>
        </security-setting>
        <security-setting match="*.tm_dump">
            <permission type="send" roles="yamcs-bridge" />
        </security-setting>
        <!-- PP streams -->
        <security-setting match="*.pp_realtime">
            <permission type="createNonDurableQueue" roles="Operator,Administrator"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator"/>
            <permission type="consume" roles="Operator,Administrator"/>
            <permission type="send" roles="Operator,Administrator"/>
        </security-setting>
        <security-setting match="*.pp_dump">
            <permission type="send" roles="yamcs-bridge" />
        </security-setting>
        <!-- Clients need to request replay for the instance -->
        <security-setting match="*.replayControl">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Administrator"/>
            <permission type="deleteNonDurableQueue" roles="Administrator"/>
            <permission type="consume" roles="Administrator"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>
        <security-setting match="*.events_realtime">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="consume" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>
        <!-- General yamcs addresses -->
        <security-setting match="yamcsControl">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Administrator"/>
            <permission type="deleteNonDurableQueue" roles="Administrator"/>
            <permission type="consume" roles="Administrator"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>

        <security-setting match="channelInfo">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="consume" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>
        <security-setting match="channelStatistics">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="consume" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>
        <security-setting match="channelControl">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="consume" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>

        <security-setting match="linkInfo">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="consume" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>
        <security-setting match="linkControl">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Administrator"/>
            <permission type="deleteNonDurableQueue" roles="Administrator"/>
            <permission type="consume" roles="Administrator"/>
            <permission type="send" roles="Administrator"/>
        </security-setting>

        <security-setting match="cmdQueueInfo">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="deleteNonDurableQueue" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="consume" roles="Operator,Administrator,Role1,Role2"/>
            <permission type="send" roles="Operator,Administrator,Role1,Role2"/>
        </security-setting>
        <security-setting match="cmdQueueControl">
            <permission type="createDurableQueue" roles="Administrator"/>
            <permission type="deleteDurableQueue" roles="Administrator"/>
            <permission type="createNonDurableQueue" roles="Administrator"/>
            <permission type="deleteNonDurableQueue" roles="Administrator"/>
            <permission type="consume" roles="Administrator"/>
            <permission type="send" roles="Administrator"/>
        </security-setting>
    </security-settings>

</core>
</configuration>
