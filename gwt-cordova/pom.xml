<?xml version="1.0" encoding="UTF-8"?>
<project
    xmlns="http://maven.apache.org/POM/4.0.0"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

    <!-- POM file generated with GWT webAppCreator -->
    <modelVersion>4.0.0</modelVersion>
    <groupId>nl.mpi.tg.eg.frinex</groupId>
    <artifactId>frinex-gui</artifactId>
    <packaging>war</packaging>
    <version>0.1-testing-SNAPSHOT</version>
    <name>FRINEX GWT-Cordova Template</name>
    <parent>
        <groupId>nl.mpi.tg.eg.frinex</groupId>
        <artifactId>frinex-parent</artifactId>
        <version>0.1-testing-SNAPSHOT</version>
    </parent>
    <properties>
        <maven.compiler.source>1.7</maven.compiler.source>
        <maven.compiler.target>1.7</maven.compiler.target>
        <java.version>1.7</java.version>
        <!-- Convenience property to set the GWT version -->
        <gwtVersion>2.7.0</gwtVersion>
        <!-- GWT needs at least java 1.5 -->
        <webappDirectory>${project.build.directory}/${project.build.finalName}</webappDirectory>
        <finalName>${experiment.configuration.name}-${project.artifactId}-${project.version}</finalName>
    </properties>
    
    <dependencies>
        <!--        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-servlet</artifactId>
            <version>${gwtVersion}</version>
            <scope>runtime</scope>
        </dependency>-->
        <dependency>
            <groupId>com.google.gwt</groupId>
            <artifactId>gwt-user</artifactId>
            <version>${gwtVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>1.0.0.GA</version>
            <classifier>sources</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.mpi.tg.eg.frinex</groupId>
            <artifactId>common</artifactId>
            <version>0.1-testing-SNAPSHOT</version>
        </dependency>        
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>kinoath-diagram</artifactId>
            <version>1.6.37-pretesting</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>graph-sorter</artifactId>
            <version>1.6.9-pretesting</version>
        </dependency>
        <dependency>
            <groupId>nl.mpi</groupId>
            <artifactId>kin-type-string-parser</artifactId>
            <version>1.6.9-pretesting</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>webjars-locator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>sockjs-client</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>stomp-websocket</artifactId>
            <version>2.3.3-1</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.3.7</version>
        </dependency>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>adaptive-vocabulary-assessment-module</artifactId>
            <version>0.1-testing-SNAPSHOT</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${finalName}</finalName>
        <!-- Generate compiled stuff in the folder used for developing mode -->
        <outputDirectory>${webappDirectory}/WEB-INF/classes</outputDirectory>
        <resources>
            <resource>
                <directory>${project.build.sourceDirectory}/../resources</directory>
                <filtering>false</filtering>
            </resource>
            <resource>
                <directory>${project.build.sourceDirectory}/../resources</directory>
                <filtering>true</filtering>                
                <includes>
                    <include>**/Version.properties</include>
                    <include>**/ServiceLocations.properties</include>
                    <include>**/Messages.properties</include>
                </includes>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.7</version>
                <executions>
                    <execution>
                        <id>copy-app-specific-resources</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${webappDirectory}/static</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>/srv/experiments/${experiment.configuration.name}</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                        <include>**/*.ogg</include>
                                        <include>**/*.ogv</include>
                                        <include>**/*.mp4</include>
                                        <include>**/*.mp3</include>
                                    </includes>
<!--                                    <excludes>
                                        <exclude>**/*.xlsx</exclude>
                                        <exclude>**/*.docx</exclude>
                                        <exclude>**/*.mov</exclude>
                                        <exclude>**/*.wav</exclude>
                                        <exclude>**/*.avi</exclude>
                                        <exclude>**/*.mpeg</exclude>
                                        <exclude>**/*.zip</exclude>
                                        <exclude>**/*.tar</exclude>
                                        <exclude>**/*.txt</exclude>
                                        <exclude>**/*.sh</exclude>
                                    </excludes>            -->
                                </resource>
                                <resource>
                                    <directory>/srv/ladd/${experiment.configuration.name}</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                        <include>**/*.ogg</include>
                                        <include>**/*.ogv</include>
                                        <include>**/*.mp4</include>
                                        <include>**/*.mp3</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>/srv/ronald/${experiment.configuration.name}</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                        <include>**/*.ogg</include>
                                        <include>**/*.ogv</include>
                                        <include>**/*.mp4</include>
                                        <include>**/*.mp3</include>
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>src/main/static/${experiment.configuration.name}</directory>
                                    <includes>
                                        <include>**/*.jpg</include>
                                        <include>**/*.png</include>
                                        <include>**/*.ogg</include>
                                        <include>**/*.ogv</include>
                                        <include>**/*.mp4</include>
                                        <include>**/*.mp3</include>
                                    </includes>
                                </resource>
                            </resources>              
                        </configuration>                                                    
                    </execution>                   
                    <execution>
                        <id>copy-setup-cordova-electron-scripts</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target/</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${basedir}/src/main/cordova</directory>
                                    <includes>
                                        <include>setup-cordova.sh</include>
                                    </includes>  
                                    <filtering>true</filtering>
                                </resource>
                                <resource>
                                    <directory>${basedir}/src/main/electron</directory>
                                    <includes>
                                        <include>setup-electron.sh</include>
                                    </includes>  
                                    <filtering>true</filtering>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>                                      
                    <execution>
                        <id>copy-configuration-xml</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${webappDirectory}/</outputDirectory>
                            <resources>          
                                <resource>
                                    <directory>${experiment.configuration.path}</directory>
                                    <includes>
                                        <include>${experiment.configuration.name}.xml</include>        
                                    </includes>
                                </resource>
                                <resource>
                                    <directory>${basedir}/src/main/html</directory>
                                    <includes>
                                        <include>ExperimentTemplate.html</include>        
                                    </includes>
                                    <filtering>true</filtering>
                                </resource>
                            </resources>              
                        </configuration>                  
                    </execution>                                      
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>xml-maven-plugin</artifactId>
                <version>1.0</version>
                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>transform</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <transformationSets>
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../svg/mapdata</dir>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/map2properties.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.properties</targetExtension>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/ru/languageininteraction/language/client</outputDir>
                        </transformationSet>-->
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../svg/graphics</dir>
                            <includes>
                                <include>*.svg</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/graphics2properties.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.FileExtensionMapper">
                                    <targetExtension>.properties</targetExtension>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/ru/languageininteraction/language/client</outputDir>
                        </transformationSet>-->
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../svg/graphics</dir>
                            <includes>
                                <include>*.svg</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/svg2java.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>\.svg$</pattern>
                                    <replacement>Builder.java</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</outputDir>
                        </transformationSet>-->
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2java.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>${experiment.configuration.name}\.xml$</pattern>
                                    <replacement>ApplicationController.java</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</outputDir>
                            <parameters>
                                <parameter>
                                    <name>targetClientDirectory</name>
                                    <value>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</value>
                                </parameter>
                            </parameters>
                        </transformationSet>
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2stimuli.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>${experiment.configuration.name}\.xml$</pattern>
                                    <replacement>GeneratedStimulus.java</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client/model</outputDir>
                            <parameters>
                                <parameter>
                                    <name>targetClientDirectory</name>
                                    <value>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</value>
                                </parameter>
                            </parameters>
                        </transformationSet>
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2stimuli-sh.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>${experiment.configuration.name}\.xml$</pattern>
                                    <replacement>generateStimulus.sh</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/bash</outputDir>
                        </transformationSet>
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2metadata.xsl</stylesheet>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</outputDir>
                            <parameters>
                                <parameter>
                                    <name>targetClientDirectory</name>
                                    <value>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</value>
                                </parameter>
                            </parameters>
                        </transformationSet>
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2properties.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>${experiment.configuration.name}\.xml$</pattern>
                                    <replacement>Messages.properties</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</outputDir>
                            <parameters>
                                <parameter>
                                    <name>targetClientDirectory</name>
                                    <value>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</value>
                                </parameter>
                            </parameters>
                        </transformationSet>
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2css.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>${experiment.configuration.name}\.xml$</pattern>
                                    <replacement>_customisations.scss</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/scss</outputDir>
                        </transformationSet>
                        <transformationSet>
                            <dir>${experiment.configuration.path}</dir>
                            <includes>
                                <include>${experiment.configuration.name}.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/config2icons.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>${experiment.configuration.name}\.xml$</pattern>
                                    <replacement>generate-icons.sh</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${basedir}/target/</outputDir>
                        </transformationSet>
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../csv</dir>
                            <includes>
                                <include>*.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/csv2java.xsl</stylesheet>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>\.xml$</pattern>
                                    <replacement>Provider.java</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</outputDir>
                        </transformationSet>-->
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../csv</dir>
                            <includes>
                                <include>*.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/csv2properties.xsl</stylesheet>
                            <parameters>
                                <parameter>
                                    <name>nameField</name>
                                    <value>1</value>
                                </parameter>
                            </parameters>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>\.xml$</pattern>
                                    <replacement>.properties</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/mpi/tg/eg/experiment/client</outputDir>
                        </transformationSet>-->
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../csv</dir>
                            <includes>
                                <include>*.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/csv2properties.xsl</stylesheet>
                            <parameters>
                                <parameter>
                                    <name>nameField</name>
                                    <value>8</value>
                                </parameter>
                            </parameters>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>\.xml$</pattern>
                                    <replacement>_de.properties</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/ru/languageininteraction/language/client</outputDir>
                        </transformationSet>-->
                        <!--                        <transformationSet>
                            <dir>${project.build.sourceDirectory}/../csv</dir>
                            <includes>
                                <include>*.xml</include>
                            </includes>
                            <stylesheet>${project.build.sourceDirectory}/../xsl/csv2properties.xsl</stylesheet>
                            <parameters>
                                <parameter>
                                    <name>nameField</name>
                                    <value>16</value>
                                </parameter>
                            </parameters>
                            <fileMappers>
                                <fileMapper implementation="org.codehaus.plexus.components.io.filemappers.RegExpFileMapper">
                                    <pattern>\.xml$</pattern>
                                    <replacement>_nl.properties</replacement>
                                </fileMapper>
                            </fileMappers>
                            <outputDir>${project.build.directory}/generated-sources/gwt/nl/ru/languageininteraction/language/client</outputDir>
                        </transformationSet>-->
                    </transformationSets>
                </configuration>
                <dependencies>
                    <dependency>
                        <!--this dependancy is  required to get a version 2 parser so that string replace is available-->
                        <groupId>net.sf.saxon</groupId>
                        <artifactId>saxon</artifactId>
                        <version>8.7</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>nl.geodienstencentrum.maven</groupId>
                <artifactId>sass-maven-plugin</artifactId>
                <version>2.12</version>
                <executions>
                    <execution>
                        <phase>process-sources</phase>
                        <goals>
                            <goal>update-stylesheets</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <resources>
                        <resource>
                            <source>
                                <directory>${project.build.directory}/generated-sources/scss</directory>
                                <directory>${basedir}/src/main/webapp/scss</directory>
                                <includes>
                                    <include>*.scss</include>
                                </includes>
                                <excludes />
                            </source>
                            <destination>${webappDirectory}/css</destination>
                        </resource>
                    </resources>
                    <sassOptions>
                        <always_update>true</always_update>
                    </sassOptions>
                </configuration>
            </plugin>
            <!-- GWT Maven Plugin -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>gwt-maven-plugin</artifactId>
                <version>${gwtVersion}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>compile</goal>
                            <goal>test</goal>
                            <goal>i18n</goal>
                            <goal>generateAsync</goal>
                        </goals>
                    </execution>
                </executions>
                <!-- Plugin configuration. There are many available options, see 
                gwt-maven-plugin documentation at codehaus.org -->
                <configuration>
                    <extraJvmArgs>-Xmx1g</extraJvmArgs>
                    <runTarget>ExperimentTemplate.html</runTarget>
                    <hostedWebapp>${webappDirectory}</hostedWebapp>
                    <i18nMessagesBundles>
                        <i18nMessagesBundle>nl.mpi.tg.eg.experiment.client.Messages</i18nMessagesBundle>
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.Messages</i18nMessagesBundle>-->
                        <i18nMessagesBundle>nl.mpi.tg.eg.experiment.client.MetadataFields</i18nMessagesBundle>
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.Stimuli</i18nMessagesBundle>-->
                        <i18nMessagesBundle>nl.mpi.tg.eg.experiment.client.ServiceLocations</i18nMessagesBundle>
                        <i18nMessagesBundle>nl.mpi.tg.eg.experiment.client.Version</i18nMessagesBundle>
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.AutotypRegions</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.MatchLanguage</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.GuessRound</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.GuessRound_Tutorial</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.ScorePage</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.mpi.tg.eg.experiment.client.LanguageData</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.InfoScreen</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.UserDetails</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.ChoosePlayerScreen</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.StartScreen</i18nMessagesBundle>-->
                        <!--<i18nMessagesBundle>nl.ru.languageininteraction.language.client.ExplainDataSharingScreen</i18nMessagesBundle>-->
                    </i18nMessagesBundles>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>                                   
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
                <inherited>false</inherited>
                <configuration>
                    <encoding>UTF-8</encoding>
                    <finalName>${project.build.finalName}</finalName>
                    <descriptors>
                        <descriptor>${project.build.sourceDirectory}/../cordova/cordova-assembly.xml</descriptor>
                        <descriptor>${project.build.sourceDirectory}/../electron/electron-assembly.xml</descriptor>
                        <!--<descriptor>${project.build.sourceDirectory}/../chromeapp/chromeapp-assembly.xml</descriptor>-->
                    </descriptors>
                    <runOnlyAtExecutionRoot>true</runOnlyAtExecutionRoot>
                </configuration>              
                <executions>
                    <execution>
                        <id>standalone</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>          
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <configuration>
                    <path>/${experiment.configuration.name}</path>
                </configuration>
            </plugin>  
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <webResources>
                        <resource>
                            <directory>${project.build.sourceDirectory}/../resources</directory>
                            <filtering>true</filtering>                
                            <includes>
                                <include>**/context.xml</include>
                            </includes>
                        </resource>
                    </webResources>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
