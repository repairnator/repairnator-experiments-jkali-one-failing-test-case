#
# Copyright (C) 2015-2018 Philip Helger (www.helger.com)
# philip[at]helger[dot]com
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

---
# First the tasks that need a priviledged user
- name: Installation of prerequisistes (Bootstrapping)
  hosts: all
  become: yes
  remote_user: ubuntu
    
  tasks:

    - name: Update the APT Repository Cache (once a day)
      apt:
        update_cache: yes
        cache_valid_time: 86400
        
    - name: Add Java 8 using apt
      apt:
        name: openjdk-8-jdk-headless
        state: present
        
    - name: Setup JAVA_HOME Environment Variable
      lineinfile: dest=/etc/environment state=present regexp='^JAVA_HOME' line='JAVA_HOME=/usr/lib/jvm/java-8-openjdk-amd64'
      
    - name: Add Maven 3 using apt
      apt:
        name: maven
        state: present       
 
    - name: Add Git Latest using apt
      apt:
        name: git
        state: present
        
    - name: Add Unzip Git Latest using apt
      apt:
        name: unzip
        state: present
 
- name: Installation of SMP Software
  hosts: all
  remote_user: ubuntu

  vars_files:
  # File containing the information of the SMP keystore
    - provision/keystore/keystore_vars.yml  
  vars:
   
    tomcat_user: "{{ansible_user_id}}"
    tomcat_group: "{{ansible_user_id}}"
    tomcat_port: 8080

    home_dir: "/home/{{ansible_user_id}}"    
    sources_dir: "{{ home_dir }}/sources"
#    tomcat_ver: "8.0.41"
#    tomcat_md5: "ae4cedb59d6dd66bcbcd4e3822ebcfab"
    tomcat_ver: "8.5.11"
    tomcat_md5: "56839d68e04d02f7e832978d27633b96"
    tomcat_dir: "{{home_dir}}/apache-tomcat-{{tomcat_ver}}"
    smp_data: "{{tomcat_dir}}/smp-data"
    smp_keystore_path: "{{tomcat_dir}}/conf/smpKeystore.jks"
    
  tasks:
      
  - name: Create Downloads Directory
    file: path="{{home_dir}}/Downloads" state=directory

  - name: Download Tomcat {{tomcat_ver}}
    get_url: 
      url: "http://www-eu.apache.org/dist/tomcat/tomcat-8/v{{tomcat_ver}}/bin/apache-tomcat-{{tomcat_ver}}.tar.gz"
      dest: "{{home_dir}}/Downloads/apache-tomcat-{{tomcat_ver}}.tar.gz"
      checksum: md5:{{tomcat_md5}}
  
  - name: Deploy Tomcat {{tomcat_ver}}
    unarchive:
    args:
      src: "{{home_dir}}/Downloads/apache-tomcat-{{tomcat_ver}}.tar.gz"
      dest: "{{home_dir}}"
      remote_src: yes
      creates: "{{tomcat_dir}}"
    register: tomcat_deploy_result

  - name: Remove default ROOT webapp
    file: path="{{tomcat_dir}}/webapps/{{item}}" state=absent
    with_items:
      - ROOT
      - ROOT.war
    when: tomcat_deploy_result | changed 
    
  - name: Configure Tomcat Port
    template: src=server.xml.j2 dest="{{tomcat_dir}}/conf/server.xml" mode=600 backup=yes
  
  - name: Configure Catalina classpath (required for config files)
    lineinfile: dest="{{tomcat_dir}}/conf/catalina.properties" regexp="^shared.loader=" line="shared.loader=${catalina.base}/conf"  

  - name: Configure smp.webapp.properties.path (required for config files)
    lineinfile: dest="{{tomcat_dir}}/conf/catalina.properties" regexp="^peppol.smp.webapp.properties.path=" line="peppol.smp.webapp.properties.path={{tomcat_dir}}/conf/webapp.properties"

  - name: Configure smp-server.properties.path (required for config files)
    lineinfile: dest="{{tomcat_dir}}/conf/catalina.properties" regexp="^peppol.smp.server.properties.path=" line="peppol.smp.server.properties.path={{tomcat_dir}}/conf/smpserver.properties"    

  - name: Configure pd-client.properties.path (required for config files)
    lineinfile: dest="{{tomcat_dir}}/conf/catalina.properties" regexp="^peppol.pd.client.properties.path=" line="peppol.pd.client.properties.path={{tomcat_dir}}/conf/pdclient.properties"    

  - name: Clone the phoss SMP Server in {{ sources_dir }}/peppol-smp-server
#   git: repo=https://github.com/phax/peppol-smp-server.git dest={{ sources_dir }}/peppol-smp-server version=peppol-smp-server-parent-pom-4.1.2
    git: repo=https://github.com/phax/peppol-smp-server.git dest={{ sources_dir }}/peppol-smp-server version=peppol-smp-server-parent-pom-5.0.6
    register: smp_result

  - name: Build SMP Server from {{ sources_dir }}/peppol-smp-server 
    when: smp_result | changed
    command: "mvn clean install -DskipTests"
#    command: 'mvn clean install -DskipTests -Dhttp.proxyHost=1.2.3.4 -Dhttp.proxyPort=8080 -Dhttps.proxyHost=1.2.3.4 -Dhttps.proxyPort=8080 -Dhttp.nonProxyHosts="localhost|127.0.0.1"'
    args:
      chdir: "{{ sources_dir }}/peppol-smp-server"

  - name: Deploy SMP Server to tomcat
#    copy: src="{{ sources_dir }}/peppol-smp-server/peppol-smp-server-webapp/target/peppol-smp-server-webapp-4.1.2.war" dest="{{tomcat_dir}}/webapps/ROOT.war"
    copy: src="{{ sources_dir }}/peppol-smp-server/peppol-smp-server-webapp-xml/target/peppol-smp-server-webapp-xml-5.0.6.war" dest="{{tomcat_dir}}/webapps/ROOT.war"

  - name: Copy SMP Keystore to tomcat
    copy: src="{{smp_keystore}}" dest="{{smp_keystore_path}}" mode=0600 backup=yes

  - name: Configure SMP Server (smp-server.properties)
    template: src=smp-server-xml.properties.j2 dest="{{tomcat_dir}}/conf/smpserver.properties" mode=600 backup=yes

  - name: Configure SMP Server (webapp.properties)
    template: src=webapp.properties.j2 dest="{{tomcat_dir}}/conf/webapp.properties" mode=600 backup=yes

  - name: Configure SMP Server (pd-client.properties)
    template: src=pd-client.properties.j2 dest="{{tomcat_dir}}/conf/pdclient.properties" mode=600 backup=yes
    
  - name: Create systemd service for tomcat
    template: src=tomcat.service.j2 dest=/etc/systemd/system/tomcat.service mode=600 backup=yes
    become: yes
    notify:
      - reload systemd
    
  - name: restart tomcat
    service: name=tomcat enabled=yes state=restarted
    become: yes
    
  handlers:
    - name: reload systemd
      command: systemctl daemon-reload
      become: yes
