#!/bin/bash
set -e
set -o pipefail

usage() {
cat << EOF
    Usage: $SCRIPT_NAME <command>

    Prepare a release commit.

    Commands:
        major - Prepare a release that increments the major version
        minor - Prepare a release that increments the minor version
        patch - Prepare a release that increments the patch/incremental version
        version - Prepare a release that uses the next three arguments for major, minor, and patch
EOF
}


if [ ! -r pom.xml ]; then
    echo "This script must be run in the project's root directory. No pom.xml was found here ($(pwd))." >&2
    exit 1
fi

SCRIPT_DIR=$( dirname "${BASH_SOURCE[0]}" )
BUMP_VERSION_SCRIPT=$SCRIPT_DIR/bump-version
GET_VERSION_SCRIPT=$SCRIPT_DIR/get-version

if [ "$#" -eq 1 -o "$#" -eq 4 ]; then
    if ! $BUMP_VERSION_SCRIPT $@; then
        usage
        exit 1
    fi
else
    echo "Invalid number of arguments" >&2
    usage
    exit 1
fi

VERSION=$($GET_VERSION_SCRIPT)
TAG="v$VERSION"
echo "Version $VERSION -> Tag $TAG"

git add pom.xml
read -p "Press enter to create a git commit." RESPONSE
git commit
git push

read -p "Press enter to create a tag ($TAG) and start the release" RESPONSE
git tag $TAG
git push origin $TAG

