{
  "totalNumberSkippingTests": 0,
  "bugType": "only_fail",
  "totalNumberErroringTests": 0,
  "repo": "FunThomas424242/rades-annotations",
  "bugCommit": "https://github.com/FunThomas424242/rades-annotations/compare/838d053d939a...97afd92b80a1",
  "failingModule": "/root/workspace/FunThomas424242/rades-annotations/363795989",
  "hostname": "spirals-vortex.lille.inria.fr",
  "totalNumberFailingTests": 1,
  "error-types": [
    "com.google.common.truth.Truth$AssertionErrorWithCause"
  ],
  "totalNumberRunningTests": 18,
  "failing-test-cases": [
    {
      "className": "com.github.funthomas424242.rades.annotations.processors.RadesBuilderProcessorTest",
      "failingMethods": [
        "com.github.funthomas424242.rades.annotations.processors.RadesBuilderProcessorTest#processAuto"
      ],
      "erroringMethods": [],
      "failures": [
        {
          "failureName": "com.google.common.truth.Truth$AssertionErrorWithCause",
          "failureDetail": "Not true that \u003c/SOURCE_OUTPUT/com/github/funthomas424242/domain/CarBuilder.java\u003e is equivalent to \u003c/root/workspace/FunThomas424242/rades-annotations/363795989/src/test/expectations/CarBuilder.java\u003e.\n\nDiffs:\n\u003d\u003d\u003d\u003d\u003d\u003d\n\nFound 10 nodes that differed in expected and actual trees. \n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 43 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)\n  Actual node: Line 43 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)\n  Expected method name to be \u003cwithMotor\u003e but was \u003cwithTyp\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 43 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eVARIABLE(motor)\n  Actual node: Line 43 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eVARIABLE(typ)\n  Expected variable name to be \u003cmotor\u003e but was \u003ctyp\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 43 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eVARIABLE(motor)-\u003eMEMBER_SELECT(Object)\n  Actual node: Line 43 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eVARIABLE(typ)-\u003eMEMBER_SELECT(String)\n  Expected member identifier to be \u003cObject\u003e but was \u003cString\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 44 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eMEMBER_SELECT(motor)\n  Actual node: Line 44 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eMEMBER_SELECT(typ)\n  Expected member identifier to be \u003cmotor\u003e but was \u003ctyp\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 44 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eIDENTIFIER(motor)\n  Actual node: Line 44 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eIDENTIFIER(typ)\n  Expected identifier to be \u003cmotor\u003e but was \u003ctyp\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 48 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)\n  Actual node: Line 48 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)\n  Expected method name to be \u003cwithTyp\u003e but was \u003cwithMotor\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 48 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eVARIABLE(typ)\n  Actual node: Line 48 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eVARIABLE(motor)\n  Expected variable name to be \u003ctyp\u003e but was \u003cmotor\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 48 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eVARIABLE(typ)-\u003eMEMBER_SELECT(String)\n  Actual node: Line 48 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eVARIABLE(motor)-\u003eMEMBER_SELECT(Object)\n  Expected member identifier to be \u003cString\u003e but was \u003cObject\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 49 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eMEMBER_SELECT(typ)\n  Actual node: Line 49 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eMEMBER_SELECT(motor)\n  Expected member identifier to be \u003ctyp\u003e but was \u003cmotor\u003e.\n\n\u003e Difference in expected tree and actual tree.\n  Expected node: Line 49 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withTyp)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eIDENTIFIER(typ)\n  Actual node: Line 49 COMPILATION_UNIT-\u003eCLASS(CarBuilder)-\u003eMETHOD(withMotor)-\u003eBLOCK(non-static)-\u003eEXPRESSION_STATEMENT-\u003eASSIGNMENT-\u003eIDENTIFIER(motor)\n  Expected identifier to be \u003ctyp\u003e but was \u003cmotor\u003e.\n\n\nExpected Source:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage com.github.funthomas424242.domain;\nimport javax.annotation.Generated;\nimport org.apache.commons.lang3.StringUtils;\n\nimport javax.validation.ConstraintViolation;\nimport javax.validation.Validation;\nimport javax.validation.ValidationException;\nimport javax.validation.Validator;\n\n@Generated(value\u003d\"com.github.funthomas424242.rades.annotations.processors.RadesBuilderProcessor\"\n        , date\u003d\"2018-04-06T20:36:46.750\"\n        , comments\u003d\"com.github.funthomas424242.domain.Auto\")\npublic class CarBuilder {\n\n    private Auto auto;\n\n    public CarBuilder(){\n        this(new Auto());\n    }\n\n    public CarBuilder( final Auto auto ){\n        this.auto \u003d auto;\n    }\n\n    public Auto build() {\n        final Validator validator \u003d Validation.buildDefaultValidatorFactory().getValidator();\n        final java.util.Set\u003cConstraintViolation\u003cAuto\u003e\u003e constraintViolations \u003d validator.validate(this.auto);\n\n        if (constraintViolations.size() \u003e 0) {\n            java.util.Set\u003cString\u003e violationMessages \u003d new java.util.HashSet\u003cString\u003e();\n\n            for (ConstraintViolation\u003c?\u003e constraintViolation : constraintViolations) {\n                violationMessages.add(constraintViolation.getPropertyPath() + \": \" + constraintViolation.getMessage());\n            }\n\n            throw new ValidationException(\"Auto is not valid:\\n\" + StringUtils.join(violationMessages, \"\\n\"));\n        }\n        final Auto value \u003d this.auto;\n        this.auto \u003d null;\n        return value;\n    }\n\n    public CarBuilder withMotor( final java.lang.Object motor ) {\n        this.auto.motor \u003d motor;\n        return this;\n    }\n\n    public CarBuilder withTyp( final java.lang.String typ ) {\n        this.auto.typ \u003d typ;\n        return this;\n    }\n\n    public CarBuilder withHersteller( final java.lang.String hersteller ) {\n        this.auto.hersteller \u003d hersteller;\n        return this;\n    }\n\n}\n\n\nActual Source:\n\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\n\npackage com.github.funthomas424242.domain;\nimport javax.annotation.Generated;\nimport org.apache.commons.lang3.StringUtils;\n\nimport javax.validation.ConstraintViolation;\nimport javax.validation.Validation;\nimport javax.validation.ValidationException;\nimport javax.validation.Validator;\n\n@Generated(value\u003d\"com.github.funthomas424242.rades.annotations.processors.RadesBuilderProcessor\"\n, date\u003d\"2018-04-06T20:36:46.750\"\n, comments\u003d\"com.github.funthomas424242.domain.Auto\")\npublic class CarBuilder {\n\n    private Auto auto;\n\n    public CarBuilder(){\n        this(new Auto());\n    }\n\n    public CarBuilder( final Auto auto ){\n        this.auto \u003d auto;\n    }\n\n    public Auto build() {\n        final Validator validator \u003d Validation.buildDefaultValidatorFactory().getValidator();\n        final java.util.Set\u003cConstraintViolation\u003cAuto\u003e\u003e constraintViolations \u003d validator.validate(this.auto);\n\n        if (constraintViolations.size() \u003e 0) {\n            java.util.Set\u003cString\u003e violationMessages \u003d new java.util.HashSet\u003cString\u003e();\n\n            for (ConstraintViolation\u003c?\u003e constraintViolation : constraintViolations) {\n                violationMessages.add(constraintViolation.getPropertyPath() + \": \" + constraintViolation.getMessage());\n            }\n\n            throw new ValidationException(\"Auto is not valid:\\n\" + StringUtils.join(violationMessages, \"\\n\"));\n        }\n        final Auto value \u003d this.auto;\n        this.auto \u003d null;\n        return value;\n    }\n\n    public CarBuilder withTyp( final java.lang.String typ ) {\n        this.auto.typ \u003d typ;\n        return this;\n    }\n\n    public CarBuilder withMotor( final java.lang.Object motor ) {\n        this.auto.motor \u003d motor;\n        return this;\n    }\n\n    public CarBuilder withHersteller( final java.lang.String hersteller ) {\n        this.auto.hersteller \u003d hersteller;\n        return this;\n    }\n\n}\n",
          "isError": false
        }
      ],
      "nbFailures": 1,
      "nbErrors": 0
    }
  ]
}