
swagger: '2.0'

info:
  version: "2.0"
  title: <UH Groupings API>

paths:
  /{username}/{adminToAdd}/addAdmin:
    post:
      description: Adds an admin to the group of admins
      parameters:
        -
          name: username
          in: path
          description: username of the user adding the admin
          required: true
          type: string
        -
          name: adminToAdd
          in: path
          description: username of the user becoming an admin
          required: true
          type: string

      responses:
        200:
          description: Successful response, an admin Person object is added to the Admin group
          schema:
            $ref: '#/definitions/Person'
        404:
          description: User with username <adminToAdd> does not exist
        403:
          description: User with username <username> does not exist or does not have permission to add admins

  /{username}/{adminToDelete}/deleteAdmin:
    post:
      description: Deletes an admin from the group of admins
      parameters:
        -
          name: username
          in: path
          description: username of the user doing the deletion
          required: true
          type: string
        -
          name: adminToDelete
          in: path
          description: username of the user being deleted from the admin list
          required: true
          type: string

      responses:
        200:
          description: Successful deleteion
        404:
          description: User with username <adminToDelete> is not in the list of admins
        403:
          description: User with username <username> does not exist or does not have permission to delete admins

  /{grouping}/{username}/{userToAdd}/addMemberToIncludeGroup:
    post:
      description: Adds a member to the include group of a grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user doing the addition
          required: true
          type: string
        -
          name: userToAdd
          in: path
          description: username of the user who is being added
          required: true
          type: string

      responses:
        200:
          description: Successful addition
          schema:
            $ref: '#/definitions/Person'
        404:
          description: user with the username <userToAdd> does not exist
        403:
          description: user with the username <username> does not exist or does not have permission to add users to that Grouping

  /{grouping}/{username}/{userToAdd}/addMemberToExcludeGroup:
    post:
      description: Adds a member to the exclude group of a grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user doing the addition
          required: true
          type: string
        -
          name: userToAdd
          in: path
          description: username of the user who is being added
          required: true
          type: string

      responses:
        200:
          description: Successful addition
          schema:
            $ref: '#/definitions/Person'
        404:
          description: user with the username <userToAdd> does not exist
        403:
          description: user with the username <username> does not exist or does not have permission to add users to that Grouping

  /{grouping}/{username}/{userToDelete}/deleteMemberFromIncludeGroup:
    post:
      description: removes a member from the include group of a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user doing the deletion
          required: true
          type: string
        -
          name: userToDelete
          in: path
          description: username of the user who is being deleted
          required: true
          type: string

      responses:
        200:
          description: successful deletion
        404:
          description: user with the username <userToDelete> is not in the include group
        403:
          description: user with the username <username> does not exist or does not have permission to delete users from that Grouping

  /{grouping}/{username}/{userToDelete}/deleteMemberFromExcludeGroup:
    post:
      description: removes a member from the exclude group of a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user doing the deletion
          required: true
          type: string
        -
          name: userToDelete
          in: path
          description: username of the user who is being deleted
          required: true
          type: string

      responses:
        200:
          description: successful deletion
        404:
          description: user with the username <userToDelete> is not in the include group
        403:
          description: user with the username <username> does not exist or does not have permission to delete users from that Grouping

  /{grouping}/{username}/{newOwner}/assignOwnership:
    post:
      description: add a user to the owners group of a Grouping, giving them owner privelages for that Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user doing the addition
          required: true
          type: string
        -
          name: newOwner
          in: path
          description: username of the user who is being added
          required: true
          type: string

      responses:
        200:
          description: Successful addition
          schema:
            $ref: '#/definitions/Person'
        404:
          description: user with the username <newOwner> does not exist
        403:
          description: user with the username <username> does not exist or does not have permission to add users to that Grouping

  /{grouping}/{username}/{ownerToRemove}/removeOwnership:
    post:
      description: remove a user from the owners group of a Grouping, removing their owner privelages for that Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user doing the removal
          required: true
          type: string
        -
          name: ownerToRemove
          in: path
          description: username of the user who is being removed
          required: true
          type: string

      responses:
        200:
          description: Successful removal
        404:
          description: user with the username <ownerToRemove> is not in the owners group of that Grouping
        403:
          description: user with the username <username> does not exist or does not have permission to remove users from that Grouping

  /{grouping}/{username}/grouping:
    get:
      description: returns a Grouping object
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user getting the Grouping
          required: true
          type: string

      responses:
        200:
          description: Successful retrival
          schema:
            $ref: '#/definitions/Grouping'
        404:
          description: Grouping with the path <grouping> does not exist
        403:
          description: user with the username <username> does not exist or does not have permission to view that Grouping

  /{username}/groupingAssignment:
    get:
      description: get the Groupings that a user is in, owns, can opt into and can opt out of
      parameters:
        -
          name: username
          in: path
          description: username of the user whos Groupings are being retrieved
          required: true
          type: string

      responses:
        200:
          description: Successful retrival
          schema:
            $ref: '#/definitions/Grouping'
        404:
          description: user with the username <username> does not exist

  /{grouping}/{username}/optIn:
    post:
      description: allows a user to become a member of a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who is opting in
          required: true
          type: string

      responses:
        200:
          description: Successful opt-in
        404:
          description: Grouping does not exist
        403:
          description: user does not have permission to opt into the Grouping

  /{grouping}/{username}/optOut:
    post:
      description: allows a user to remove themselves from a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who is opting out
          required: true
          type: string

      responses:
        200:
          description: Successful opt-out
        404:
          description: Grouping does not exist
        403:
          description: user does not have permission to opt out of the Grouping

  /{grouping}/{username}/{listservOn}/setListserv:
    post:
      description: allows an owner to turn the publication destination "listserv" on or off
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who modifying the listserv status
          required: true
          type: string
        -
          name: listservOn
          in: path
          description: true will turn the listserv on false will turn it off
          required: true
          type: boolean

      responses:
        200:
          description: Successful listserv status modification
        404:
          description: Grouping does not exist
        403:
          description: user does not have permission to modify the listserv status

  /{grouping}/{username}/{optInOn}/setOptIn:
    post:
      description: allows an owner to allow/disallow users to opt into a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who modifying the opt-in status
          required: true
          type: string
        -
          name: optInOn
          in: path
          description: true will allow users to opt in, false will make it so users have to be added by owners or admins
          required: true
          type: boolean

      responses:
        200:
          description: Successful opt-in status modification
        404:
          description: Grouping does not exist
        403:
          description: user does not have permission to modify the opt-in status

  /{grouping}/{username}/{optOutOn}/setOptOut:
    post:
      description: allows an owner to allow/disallow users to opt out of a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who modifying the opt-out status
          required: true
          type: string
        -
          name: optOutOn
          in: path
          description: true will allow users to opt out, false will make it so users have to be removed by owners or admins
          required: true
          type: boolean

      responses:
        200:
          description: Successful opt-out status modification
        404:
          description: Grouping does not exist
        403:
          description: user does not have permission to modify the opt-out status

  /{username}/adminLists:
    get:
      description: gets a list of all Groupings and all Admins
      parameters:
        -
          name: username
          in: path
          description: username of the user who is retrieving the adminLists (must be an admin)
          required: true
          type: string

      responses:
        200:
          description: Successful retrieval of adminLists
        403:
          description: user is not an admin

  /{grouping}/{username}/{basis}/{include}/{exclude}/{owners}/addGrouping:
    post:
      description: creates a new Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who is retrieving the adminLists (must be an admin)
          required: true
          type: string
        -
          name: basis
          in: path
          description: the basis Group for the Grouping
          required: true
          type: string
        -
          name: include
          in: path
          description: the include Group for the Grouping
          required: true
          type: string
        -
          name: exclude
          in: path
          description: the exclude Group for the Grouping
          required: true
          type: string
        -
          name: owners
          in: path
          description: the owners Group for the Grouping (all members of this Group will "own" the Grouping)
          required: true
          type: string

      responses:
        200:
          description: Successful creation of Grouping
          schema:
            $ref: '#/definitions/Group'
        403:
          description: user is not allowed to create a Grouping or a Grouping with that path aready exist

  /{grouping}/{username}/deleteGrouping:
    delete:
      description: removes a Grouping
      parameters:
        -
          name: grouping
          in: path
          description: path to the Grouping
          required: true
          type: string
        -
          name: username
          in: path
          description: username of the user who is deleting the Grouping
          required: true
          type: string
      responses:
        200:
          description: successfully deleted the Grouping
        404:
          description: the Grouping did not exist
        403:
          description: the user does not have the permission to delete the Grouping
definitions:
  Person:
    type: object
    properties:
      id:
        type: string
        format: name
      uuid:
        type: string
        format: uuid
      username:
        type: string
        format: name
  Group:
    type: object
    properties:
      path:
        type: string
        format: path
      members:
        type: array
        items:
          $ref: '#/definitions/Person'
      usernames:
        type: array
        items:
          type: string
  Grouping:
    type: object
    properties:
      path:
        type: string
        format: path
      name:
        type: string
        format: name
      listServOn:
        type: boolean
      optInOn:
        type: boolean
      optOutOn:
        type: boolean
      basis:
        $ref: '#/definitions/Group'
      exclude:
        $ref: '#/definitions/Group'
      include:
        $ref: '#/definitions/Group'
      composite:
        $ref: '#/definitions/Group'
      owners:
        $ref: '#/definitions/Group'
  GroupingAssignment:
    type: object
    properties:
      groupingsIn:
        $ref: '#/definitions/Grouping'
      groupingsOwned:
        $ref: '#/definitions/Grouping'
      groupingsOptedOutOf:
        $ref: '#/definitions/Grouping'
      groupingsOptedInTo:
        $ref: '#/definitions/Grouping'
      groupingsToOptOutOf:
        $ref: '#/definitions/Grouping'
      groupingsToOptInTo:
        $ref: '#/definitions/Grouping'
  GroupingServiceResult:
    type: object
    properties:
      action:
        type: string
      resultCode:
        type: string
        format: response
  AdminListsHolder:
    type: object
    properties:
      adminGroup:
        $ref: '#/definitions/Group'
      allGroupings:
        type: array
        items:
          $ref: '#/definitions/Grouping'



