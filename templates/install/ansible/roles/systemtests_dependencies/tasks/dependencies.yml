---
# tasks file for install dependencies for systemtests

######################################################
# Tasks for EPEL
- name: EPEL | Check if EPEL repo is already configured.
  stat: path={{ epel_repofile_path }}
  register: epel_repofile_result

- name: EPEL | Install EPEL repo.
  yum:
    name: "{{ epel_repo_url }}"
    state: present
  register: result
  when: not epel_repofile_result.stat.exists

- name: EPEL | Import EPEL GPG key.
  rpm_key:
    key: "{{ epel_repo_gpg_key_url }}"
    state: present
  when: not epel_repofile_result.stat.exists

######################################################
# Tasks for PIP
- name: PIP | check to see if pip is already installed
  command: "pip --version"
  ignore_errors: true
  register: pip_is_installed
  changed_when: false

- name: PIP | download get-pip.py
  get_url:
    url: https://bootstrap.pypa.io/get-pip.py
    dest: /tmp
  when: pip_is_installed.rc != 0

- name: PIP | install pip
  command: "python /tmp/get-pip.py"
  when: pip_is_installed.rc != 0

- name: PIP | delete get-pip.py
  file:
    state: absent
    path: /tmp/get-pip.py
  when: pip_is_installed.rc != 0


######################################################
# Install dependencies by yum
- name: YUM | Install gcc, redhat-rpm-config, bzip2, unzip, python-devel, openssl
  yum:
    name:
      - gcc
      - redhat-rpm-config
      - bzip2
      - unzip
      - python-devel
      - openssl
      - openssl-devel
    state: installed

- name: YUM | Install nodejs
  yum:
    name: "nodejs-{{ nodejs_version }}.*"
    state: present
    enablerepo: epel


######################################################
# Task for install maven
- name: MAVEN | Check if maven is present
  command: "mvn --version || cd {{ maven_path }}"
  ignore_errors: true
  register: mvn_is_installed
  changed_when: false

- name: MAVEN | Download apache maven
  get_url:
    url: https://archive.apache.org/dist/maven/maven-3/3.5.2/binaries/apache-maven-3.5.2-bin.tar.gz
    dest: "{{ maven_root_path }}"
  when: mvn_is_installed.rc != 0

- name: MAVEN | Extract apache maven
  unarchive:
    src: "{{ maven_root_path }}/apache-maven-3.5.2-bin.tar.gz"
    dest: "{{ maven_root_path }}"
  when: mvn_is_installed.rc != 0

- name: MAVEN | Create symlink
  file:
    force: yes
    src: "{{ maven_root_path }}/apache-maven-3.5.2/bin/mvn"
    dest: '/usr/bin/mvn'
    state: link
  when: mvn_is_installed.rc != 0
