Apr 12, 2020 8:10:46 PM org.springframework.test.context.support.DefaultTestContextBootstrapper buildDefaultMergedContextConfiguration
INFO: Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.importer.validators.ImportDataAndFilesValidationTest], using DelegatingSmartContextLoader
Apr 12, 2020 8:10:46 PM org.springframework.test.context.support.AbstractContextLoader generateDefaultLocations
INFO: Could not detect default resource locations for test class [org.kitodo.mediaserver.importer.validators.ImportDataAndFilesValidationTest]: no resource found for suffixes {-context.xml}.
Apr 12, 2020 8:10:46 PM org.springframework.test.context.support.AnnotationConfigContextLoaderUtils detectDefaultConfigurationClasses
INFO: Could not detect default configuration classes for test class [org.kitodo.mediaserver.importer.validators.ImportDataAndFilesValidationTest]: ImportDataAndFilesValidationTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
Apr 12, 2020 8:10:46 PM org.springframework.test.context.support.DefaultTestContextBootstrapper getDefaultTestExecutionListenerClassNames
INFO: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
Apr 12, 2020 8:10:46 PM org.springframework.test.context.support.DefaultTestContextBootstrapper getTestExecutionListeners
INFO: Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@52feb982, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7a765367, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@76b0bfab, org.springframework.test.context.support.DirtiesContextTestExecutionListener@17d677df, org.springframework.test.context.transaction.TransactionalTestExecutionListener@3043fe0e, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@78e67e0a, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@bd8db5a, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2f943d71, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@80503, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4b553d26, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@69a3d1d]
Apr 12, 2020 8:10:46 PM org.springframework.context.support.GenericApplicationContext prepareRefresh
INFO: Refreshing org.springframework.context.support.GenericApplicationContext@6950e31: startup date [Sun Apr 12 20:10:46 CEST 2020]; root of context hierarchy
Apr 12, 2020 8:10:48 PM org.springframework.boot.test.context.SpringBootTestContextBootstrapper buildDefaultMergedContextConfiguration
INFO: Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest], using SpringBootContextLoader
Apr 12, 2020 8:10:48 PM org.springframework.test.context.support.AbstractContextLoader generateDefaultLocations
INFO: Could not detect default resource locations for test class [org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
Apr 12, 2020 8:10:48 PM org.springframework.boot.test.context.SpringBootTestContextBootstrapper getDefaultTestExecutionListenerClassNames
INFO: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
Apr 12, 2020 8:10:48 PM org.springframework.boot.test.context.SpringBootTestContextBootstrapper getTestExecutionListeners
INFO: Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1d7f7be7, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@42f3156d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@1ddae9b5, org.springframework.test.context.support.DirtiesContextTestExecutionListener@427b5f92, org.springframework.test.context.transaction.TransactionalTestExecutionListener@24bdb479, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7e3f95fe, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@34625ccd, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@2c7d121c, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@65aa6596, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@67389cb8, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@419a20a6]
Apr 12, 2020 8:10:57 PM org.springframework.test.context.support.AbstractContextLoader generateDefaultLocations
INFO: Could not detect default resource locations for test class [org.kitodo.mediaserver.ui.works.WorkControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
Apr 12, 2020 8:10:57 PM org.springframework.boot.test.context.SpringBootTestContextBootstrapper getDefaultTestExecutionListenerClassNames
INFO: Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
Apr 12, 2020 8:10:57 PM org.springframework.boot.test.context.SpringBootTestContextBootstrapper getTestExecutionListeners
INFO: Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@795cd85e, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@59fd97a8, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@f5ac9e4, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@123ef382, org.springframework.test.context.support.DirtiesContextTestExecutionListener@dbf57b3, org.springframework.test.context.transaction.TransactionalTestExecutionListener@384ad17b, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@61862a7f, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@441772e, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@7334aada, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1d9b7cce, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4d9e68d0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@42e99e4a, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@14dd9eb7, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@52e6fdee]
r.core.db.repositories.UserRepositoryTest]
20:10:30.044 [main] DEBUG org.springframework.test.context.support.AbstractDirtiesContextTestExecutionListener - Before test class: context [DefaultTestContext@4c583ecf testClass = UserRepositoryTest, testInstance = [null], testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@692f203f testClass = UserRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.UserRepository, interface org.kitodo.mediaserver.core.db.repositories.UserRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48f2bd5b key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.UserRepository]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]], class annotated with @DirtiesContext [false] with mode [null].
20:10:30.063 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved @ProfileValueSourceConfiguration [null] for test class [org.kitodo.mediaserver.core.db.repositories.UserRepositoryTest]
20:10:30.063 [main] DEBUG org.springframework.test.annotation.ProfileValueUtils - Retrieved ProfileValueSource type [class org.springframework.test.annotation.SystemProfileValueSource] for class [org.kitodo.mediaserver.core.db.repositories.UserRepositoryTest]
20:10:30.068 [main] DEBUG org.springframework.test.context.support.DependencyInjectionTestExecutionListener - Performing dependency injection for test context [[DefaultTestContext@4c583ecf testClass = UserRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.UserRepositoryTest@33d512c1, testMethod = [null], testException = [null], mergedContextConfiguration = [MergedContextConfiguration@692f203f testClass = UserRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.UserRepository, interface org.kitodo.mediaserver.core.db.repositories.UserRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48f2bd5b key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.UserRepository]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]].
20:10:30.156 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'systemProperties' with lowest search precedence
20:10:30.156 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'systemEnvironment' with lowest search precedence
20:10:30.166 [main] DEBUG org.springframework.core.env.StandardEnvironment - Initialized StandardEnvironment with PropertySources [MapPropertySource@198099809 {name='systemProperties', properties={java.runtime.name=Java(TM) SE Runtime Environment, sun.boot.library.path=/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/amd64, java.vm.version=25.202-b08, java.vm.vendor=Oracle Corporation, java.vendor.url=http://java.oracle.com/, skip.gulp=true, path.separator=:, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, file.encoding.pkg=sun.io, findbugs.skip=true, user.country=US, sun.java.launcher=SUN_STANDARD, sun.os.patch.level=unknown, java.vm.specification.name=Java Virtual Machine Specification, user.dir=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core, java.runtime.version=1.8.0_202-b08, skip.npm=true, basedir=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core, java.awt.graphicsenv=sun.awt.X11GraphicsEnvironment, java.endorsed.dirs=/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/endorsed, os.arch=amd64, surefire.real.class.path=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/surefire/surefirebooter2301771766910694549.jar, gpg.skip=true, java.io.tmpdir=/tmp, line.separator=
, cobertura.skip=true, java.vm.specification.vendor=Oracle Corporation, os.name=Linux, sun.jnu.encoding=UTF-8, license.skip=true, java.library.path=/hpc2n/eb/software/Core/Maven/3.6.0/lib:/hpc2n/eb/software/Core/Java/1.8.0_202/lib:/usr/java/packages/lib/amd64:/usr/lib64:/lib64:/lib:/usr/lib, surefire.test.class.path=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/test-classes:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/classes:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-data-jpa/2.0.0.RELEASE/spring-boot-starter-data-jpa-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter/2.0.0.RELEASE/spring-boot-starter-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot/2.0.0.RELEASE/spring-boot-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/2.0.0.RELEASE/spring-boot-autoconfigure-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-logging/2.0.0.RELEASE/spring-boot-starter-logging-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-aop/2.0.0.RELEASE/spring-boot-starter-aop-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-aop/5.0.4.RELEASE/spring-aop-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-jdbc/2.0.0.RELEASE/spring-boot-starter-jdbc-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-jdbc/5.0.4.RELEASE/spring-jdbc-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/hibernate-core/5.2.14.Final/hibernate-core-5.2.14.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/data/spring-data-jpa/2.0.5.RELEASE/spring-data-jpa-2.0.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/data/spring-data-commons/2.0.5.RELEASE/spring-data-commons-2.0.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-orm/5.0.4.RELEASE/spring-orm-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-context/5.0.4.RELEASE/spring-context-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-expression/5.0.4.RELEASE/spring-expression-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-tx/5.0.4.RELEASE/spring-tx-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-aspects/5.0.4.RELEASE/spring-aspects-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/h2database/h2/1.4.196/h2-1.4.196.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/mysql/mysql-connector-java/5.1.45/mysql-connector-java-5.1.45.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-test/2.0.0.RELEASE/spring-boot-starter-test-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-test/2.0.0.RELEASE/spring-boot-test-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-test-autoconfigure/2.0.0.RELEASE/spring-boot-test-autoconfigure-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/mockito/mockito-core/2.15.0/mockito-core-2.15.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.10/byte-buddy-1.7.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.10/byte-buddy-agent-1.7.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-core/5.0.4.RELEASE/spring-core-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-jcl/5.0.4.RELEASE/spring-jcl-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-test/5.0.4.RELEASE/spring-test-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/xmlunit/xmlunit-core/2.5.1/xmlunit-core-2.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-web/5.0.4.RELEASE/spring-web-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-beans/5.0.4.RELEASE/spring-beans-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/validator/hibernate-validator/6.0.7.Final/hibernate-validator-6.0.7.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-io/commons-io/2.6/commons-io-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/im4java/im4java/1.4.0/im4java-1.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/imageio/imageio-tiff/3.3.2/imageio-tiff-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/imageio/imageio-core/3.3.2/imageio-core-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/imageio/imageio-metadata/3.3.2/imageio-metadata-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/common/common-lang/3.3.2/common-lang-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/common/common-io/3.3.2/common-io-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/common/common-image/3.3.2/common-image-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:, java.specification.name=Java Platform API Specification, java.class.version=52.0, skip.bower=true, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, maven.repo.local=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2, os.version=4.15.0-96-generic, user.home=/home/d/dginelli, user.timezone=Europe/Stockholm, java.awt.printerjob=sun.print.PSPrinterJob, file.encoding=UTF-8, java.specification.version=1.8, java.class.path=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/test-classes:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/classes:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-data-jpa/2.0.0.RELEASE/spring-boot-starter-data-jpa-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter/2.0.0.RELEASE/spring-boot-starter-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot/2.0.0.RELEASE/spring-boot-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/2.0.0.RELEASE/spring-boot-autoconfigure-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-logging/2.0.0.RELEASE/spring-boot-starter-logging-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/logging/log4j/log4j-to-slf4j/2.10.0/log4j-to-slf4j-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/logging/log4j/log4j-api/2.10.0/log4j-api-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/slf4j/jul-to-slf4j/1.7.25/jul-to-slf4j-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/javax/annotation/javax.annotation-api/1.3.2/javax.annotation-api-1.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-aop/2.0.0.RELEASE/spring-boot-starter-aop-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-aop/5.0.4.RELEASE/spring-aop-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/aspectj/aspectjweaver/1.8.13/aspectjweaver-1.8.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-jdbc/2.0.0.RELEASE/spring-boot-starter-jdbc-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/zaxxer/HikariCP/2.7.8/HikariCP-2.7.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-jdbc/5.0.4.RELEASE/spring-jdbc-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/hibernate-core/5.2.14.Final/hibernate-core-5.2.14.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/javassist/javassist/3.22.0-GA/javassist-3.22.0-GA.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/jboss/jandex/2.0.3.Final/jandex-2.0.3.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/data/spring-data-jpa/2.0.5.RELEASE/spring-data-jpa-2.0.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/data/spring-data-commons/2.0.5.RELEASE/spring-data-commons-2.0.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-orm/5.0.4.RELEASE/spring-orm-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-context/5.0.4.RELEASE/spring-context-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-expression/5.0.4.RELEASE/spring-expression-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-tx/5.0.4.RELEASE/spring-tx-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-aspects/5.0.4.RELEASE/spring-aspects-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/h2database/h2/1.4.196/h2-1.4.196.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/mysql/mysql-connector-java/5.1.45/mysql-connector-java-5.1.45.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-starter-test/2.0.0.RELEASE/spring-boot-starter-test-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-test/2.0.0.RELEASE/spring-boot-test-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/boot/spring-boot-test-autoconfigure/2.0.0.RELEASE/spring-boot-test-autoconfigure-2.0.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/jayway/jsonpath/json-path/2.4.0/json-path-2.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/assertj/assertj-core/3.9.1/assertj-core-3.9.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/mockito/mockito-core/2.15.0/mockito-core-2.15.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.10/byte-buddy-1.7.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.10/byte-buddy-agent-1.7.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/skyscreamer/jsonassert/1.5.0/jsonassert-1.5.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/vaadin/external/google/android-json/0.0.20131108.vaadin1/android-json-0.0.20131108.vaadin1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-core/5.0.4.RELEASE/spring-core-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-jcl/5.0.4.RELEASE/spring-jcl-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-test/5.0.4.RELEASE/spring-test-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/xmlunit/xmlunit-core/2.5.1/xmlunit-core-2.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-web/5.0.4.RELEASE/spring-web-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/springframework/spring-beans/5.0.4.RELEASE/spring-beans-5.0.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/hibernate/validator/hibernate-validator/6.0.7.Final/hibernate-validator-6.0.7.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/javax/validation/validation-api/2.0.1.Final/validation-api-2.0.1.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/jboss/logging/jboss-logging/3.3.2.Final/jboss-logging-3.3.2.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/fasterxml/classmate/1.3.4/classmate-1.3.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-io/commons-io/2.6/commons-io-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/im4java/im4java/1.4.0/im4java-1.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/imageio/imageio-tiff/3.3.2/imageio-tiff-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/imageio/imageio-core/3.3.2/imageio-core-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/imageio/imageio-metadata/3.3.2/imageio-metadata-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/common/common-lang/3.3.2/common-lang-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/common/common-io/3.3.2/common-io-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/com/twelvemonkeys/common/common-image/3.3.2/common-image-3.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.6/httpclient-4.5.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.9/httpcore-4.4.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2/commons-codec/commons-codec/1.11/commons-codec-1.11.jar:, user.name=dginelli, skipITs=true, java.vm.specification.version=1.8, sun.java.command=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/surefire/surefirebooter2301771766910694549.jar /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core/target/surefire 2020-04-12T20-10-25_996-jvmRun1 surefire1155461146749303567tmp surefire_01465839759883674230tmp, java.home=/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre, sun.arch.data.model=64, user.language=en, java.specification.vendor=Oracle Corporation, dependency-check.skip=true, awt.toolkit=sun.awt.X11.XToolkit, java.vm.info=mixed mode, java.version=1.8.0_202, java.ext.dirs=/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/ext:/usr/java/packages/lib/ext, sun.boot.class.path=/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/resources.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/rt.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/sunrsasign.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/jsse.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/jce.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/charsets.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/lib/jfr.jar:/cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/jre/classes, rat.skip=true, enforcer.skip=true, java.vendor=Oracle Corporation, localRepository=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2, file.separator=/, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, sun.io.unicode.encoding=UnicodeLittle, sun.cpu.endian=little, sun.cpu.isalist=}}, SystemEnvironmentPropertySource@645482568 {name='systemEnvironment', properties={PATH=/hpc2n/eb/software/Core/Maven/3.6.0:/hpc2n/eb/software/Core/Maven/3.6.0/bin:/hpc2n/eb/software/Core/Java/1.8.0_202:/hpc2n/eb/software/Core/Java/1.8.0_202/bin:/home/d/dginelli/Public/bin:/usr/local/bin:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/opt/puppetlabs/bin, SLURM_LAUNCH_NODE_IPADDR=130.239.241.197, SLURM_NTASKS=1, SLURMD_NODENAME=b-cn0837, LMOD_SETTARG_FULL_SUPPORT=yes, SLURM_NODEID=0, _LMFILES_=/hpc2n/eb/modules/all/Core/snicenvironment.lua:/hpc2n/eb/modules/all/Core/systemdefault.lua:/hpc2n/eb/modules/all/Core/Java/1.8.0_202.lua:/hpc2n/eb/modules/all/Core/Maven/3.6.0.lua, SLURM_TOPOLOGY_ADDR=b-isw-top.b-isw0802.b-cn0837, KRB5CCNAME=FILE:/tmp/krb5cc_5133_GI7ugF, _ModuleTable003_=c3RlbWRlZmF1bHQiLFsibG9hZE9yZGVyIl09Mixwcm9wVD17bG1vZD17WyJzdGlja3kiXT0xLH0sfSxbInN0YWNrRGVwdGgiXT0wLFsic3RhdHVzIl09ImFjdGl2ZSIsWyJ1c2VyTmFtZSJdPSJzeXN0ZW1kZWZhdWx0Iix9LH0sbXBhdGhBPXsiL2hwYzJuL2ViL21vZHVsZXMvYWxsL0NvcmUiLCIvaHBjMm4vZWIvbW9kdWxlcy9hbGwvTGludXgiLCIvaHBjMm4vZWIvc29mdHdhcmUvbG1vZC9sbW9kL21vZHVsZWZpbGVzL0NvcmUiLH0sWyJzeXN0ZW1CYXNlTVBBVEgiXT0iL2hwYzJuL2ViL21vZHVsZXMvYWxsL0xpbnV4Oi9ocGMybi9lYi9tb2R1bGVzL2FsbC9Db3JlOi9ocGMybi9lYi9zb2Z0d2FyZS9sbW9kL2xtb2QvbW9kdWxlZmlsZXMvQ29yZSIsfQ==, LD_LIBRARY_PATH=/hpc2n/eb/software/Core/Maven/3.6.0/lib:/hpc2n/eb/software/Core/Java/1.8.0_202/lib, LMOD_DIR=/hpc2n/eb/software/lmod/lmod/libexec, PRINCIPAL=dginelli, TOOLS_JAR=/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar, PWD=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core, SLURM_SRUN_COMM_PORT=45247, LMOD_VERSION=7.8.20, SLURM_PRIO_PROCESS=0, SLURM_JOB_NUM_NODES=1, __LMOD_REF_COUNT_MANPATH=/hpc2n/eb/software/Core/Java/1.8.0_202/man:1;/hpc2n/eb/software/lmod/lmod/share/man:1;/opt/puppetlabs/puppet/share/man:1, SLURM_UMASK=0022, SLURM_SUBMIT_DIR=/pfs/nobackup/home/d/dginelli/development, PAGER=less, _ModuleTable002_=XT00LHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09Ik1hdmVuLzMuNi4wIix9LHNuaWNlbnZpcm9ubWVudD17WyJmbiJdPSIvaHBjMm4vZWIvbW9kdWxlcy9hbGwvQ29yZS9zbmljZW52aXJvbm1lbnQubHVhIixbImZ1bGxOYW1lIl09InNuaWNlbnZpcm9ubWVudCIsWyJsb2FkT3JkZXIiXT0xLHByb3BUPXtsbW9kPXtbInN0aWNreSJdPTEsfSx9LFsic3RhY2tEZXB0aCJdPTEsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09InNuaWNlbnZpcm9ubWVudCIsfSxzeXN0ZW1kZWZhdWx0PXtbImZuIl09Ii9ocGMybi9lYi9tb2R1bGVzL2FsbC9Db3JlL3N5c3RlbWRlZmF1bHQubHVhIixbImZ1bGxOYW1lIl09InN5, SNIC_BACKUP=/home/d/dginelli, LC_ALL=en_US.UTF-8, CPATH=/hpc2n/eb/software/Core/Java/1.8.0_202/include, SHLVL=2, SLURM_CLUSTER_NAME=kebnekaise, SLURM_JOB_NODELIST=b-cn0837, LOADEDMODULES=snicenvironment:systemdefault:Java/1.8.0_202:Maven/3.6.0, SLURM_CPU_BIND_VERBOSE=quiet, SLURM_STEP_ID=0, JAVA_HOME=/hpc2n/eb/software/Core/Java/1.8.0_202, _ModuleTable001_=X01vZHVsZVRhYmxlXz17WyJNVHZlcnNpb24iXT0zLFsiY19yZWJ1aWxkVGltZSJdPTg2NDAwLFsiY19zaG9ydFRpbWUiXT1mYWxzZSxkZXB0aFQ9e30sZmFtaWx5PXt9LG1UPXtKYXZhPXtbImZuIl09Ii9ocGMybi9lYi9tb2R1bGVzL2FsbC9Db3JlL0phdmEvMS44LjBfMjAyLmx1YSIsWyJmdWxsTmFtZSJdPSJKYXZhLzEuOC4wXzIwMiIsWyJsb2FkT3JkZXIiXT0zLHByb3BUPXt9LFsic3RhY2tEZXB0aCJdPTAsWyJzdGF0dXMiXT0iYWN0aXZlIixbInVzZXJOYW1lIl09IkphdmEvMS44LjBfMjAyIix9LE1hdmVuPXtbImZuIl09Ii9ocGMybi9lYi9tb2R1bGVzL2FsbC9Db3JlL01hdmVuLzMuNi4wLmx1YSIsWyJmdWxsTmFtZSJdPSJNYXZlbi8zLjYuMCIsWyJsb2FkT3JkZXIi, TERM=xterm-256color, XDG_SESSION_ID=2904, __LMOD_REF_COUNT_LD_LIBRARY_PATH=/hpc2n/eb/software/Core/Maven/3.6.0/lib:1;/hpc2n/eb/software/Core/Java/1.8.0_202/lib:1, SLURM_JOB_ID=9040130, __LMOD_REF_COUNT_MODULEPATH=/hpc2n/eb/modules/all/Core:3;/hpc2n/eb/modules/all/Linux:1;/hpc2n/eb/software/lmod/lmod/modulefiles/Core:1, _ModuleTable_Sz_=3, SLURM_STEP_TASKS_PER_NODE=1, SLURM_TASK_PID=430242, EBDEVELJAVA=/hpc2n/eb/software/Core/Java/1.8.0_202/easybuild/Core-Java-1.8.0_202-easybuild-devel, SLURM_TASKS_PER_NODE=1, SLURM_SUBMIT_HOST=b-cn0837.hpc2n.umu.se, SLURM_JOB_UID=5133, _=/usr/local/bin/srun, SLURM_MEM_PER_CPU=4460, __LMOD_REF_COUNT_LIBRARY_PATH=/hpc2n/eb/software/Core/Maven/3.6.0/lib:1;/hpc2n/eb/software/Core/Java/1.8.0_202/lib:1, __LMOD_REF_COUNT__LMFILES_=/hpc2n/eb/modules/all/Core/snicenvironment.lua:1;/hpc2n/eb/modules/all/Core/systemdefault.lua:1;/hpc2n/eb/modules/all/Core/Java/1.8.0_202.lua:1;/hpc2n/eb/modules/all/Core/Maven/3.6.0.lua:1, EBDEVELMAVEN=/hpc2n/eb/software/Core/Maven/3.6.0/easybuild/Core-Maven-3.6.0-easybuild-devel, SNIC_NOBACKUP=/pfs/nobackup/home/d/dginelli, SSH_TTY=/dev/pts/21, SSH_CLIENT=213.89.249.182 56309 22, MAVEN_PROJECTBASEDIR=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit, SLURM_NNODES=1, SSH_CONNECTION=213.89.249.182 56309 130.239.243.100 22, SLURM_JOB_PARTITION=single, SLURM_LOCALID=0, SLURM_STEP_RESV_PORTS=12907-12908, EBROOTMAVEN=/hpc2n/eb/software/Core/Maven/3.6.0, SLURM_CPU_BIND_TYPE=mask_cpu:, SLURM_JOB_NAME=script-38.sh, WINDOWNAME=[ dginelli@b-an01.hpc2n.umu.se ]:/home/d/dginelli/pfs/development, MODULEPATH=/hpc2n/eb/modules/all/Core:/hpc2n/eb/modules/all/Linux:/hpc2n/eb/software/lmod/lmod/modulefiles/Core, SLURM_NPROCS=1, __LMOD_REF_COUNT_PATH=/hpc2n/eb/software/Core/Maven/3.6.0:1;/hpc2n/eb/software/Core/Maven/3.6.0/bin:1;/hpc2n/eb/software/Core/Java/1.8.0_202:1;/hpc2n/eb/software/Core/Java/1.8.0_202/bin:1;/home/d/dginelli/Public/bin:1;/usr/local/bin:2;/usr/local/sbin:1;/usr/sbin:1;/usr/bin:1;/sbin:1;/bin:1;/usr/games:1;/usr/local/games:1;/opt/puppetlabs/bin:1, ORIGKRB5CCNAME=FILE:/tmp/krb5cc_5133_GI7ugF, EBROOTJAVA=/hpc2n/eb/software/Core/Java/1.8.0_202, LINES=56, EBVERSIONJAVA=1.8.0_202, MODULEPATH_ROOT=/hpc2n/eb/modules/all, MAIL=/var/mail/dginelli, SLURM_JOB_QOS=normal, SLURM_STEPID=0, SLURM_STEP_NODELIST=b-cn0837, SNIC_RESOURCE=kebnekaise, LOGNAME=dginelli, __LMOD_REF_COUNT_CPATH=/hpc2n/eb/software/Core/Java/1.8.0_202/include:1, SLURM_GTIDS=0, SLURM_JOB_CPUS_PER_NODE=1, EBVERSIONMAVEN=3.6.0, SLURM_NODELIST=b-cn0837, LMOD_CMD=/hpc2n/eb/software/lmod/lmod/libexec/lmod, SHELL=/bin/bash, BASH_ENV=/hpc2n/eb/software/lmod/lmod/init/bash, MAVEN_TERMINATE_CMD=on, GITHUB_TOKEN=CONFIDENTIAL_INFORMATION, OLDPWD=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core, OMP_NUM_THREADS=1, RANDFILE=/dev/urandom, TMPDIR=/scratch, SLURM_STEP_NUM_NODES=1, SLURM_JOB_ACCOUNT=snic2019-3-453, LIBRARY_PATH=/hpc2n/eb/software/Core/Maven/3.6.0/lib:/hpc2n/eb/software/Core/Java/1.8.0_202/lib, SLURM_CPU_BIND=quiet,mask_cpu:0x0000100, SLURM_CPUS_ON_NODE=1, M2_HOME=/usr/share/maven, SLURM_JOB_USER=dginelli, SNIC_SITE=hpc2n, SLURM_DISTRIBUTION=cyclic, SLURM_CHECKPOINT_IMAGE_DIR=/var/slurm/checkpoint, SLURM_TOPOLOGY_ADDR_PATTERN=switch.switch.node, MANPATH=/hpc2n/eb/software/Core/Java/1.8.0_202/man:/hpc2n/eb/software/lmod/lmod/share/man::/opt/puppetlabs/puppet/share/man, ENVIRONMENT=BATCH, SRUN_DEBUG=3, LANG=en_US.UTF-8, LMOD_PKG=/hpc2n/eb/software/lmod/lmod, SLURM_WORKING_CLUSTER=kebnekaise:b-mn01:6775:8448, COLUMNS=204, SLURM_STEP_LAUNCHER_PORT=45247, MAVEN_CMD_LINE_ARGS= -B -e -D enforcer.skip=true -D dependency-check.skip=true -D skipITs=true -D cobertura.skip=true -D maven.repo.local=/scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/.m2 -D rat.skip=true -D findbugs.skip=true -D skip.bower=true -D gpg.skip=true -D skip.gulp=true -D license.skip=true -D skip.npm=true test, SLURM_CPU_BIND_LIST=0x0000100, SLURM_JOB_GID=3001, SLURM_STEP_NUM_TASKS=1, __LMOD_REF_COUNT_LOADEDMODULES=snicenvironment:1;systemdefault:1;Java/1.8.0_202:1;Maven/3.6.0:1, USER=dginelli, SLURM_JOBID=9040130, EDITOR=/usr/bin/vim, PRINTER=SetThePRINTERVariable@your.print.server, HOSTNAME=b-cn0837, MODULESHOME=/hpc2n/eb/software/lmod/lmod, HPC2N_CLUSTER_JOBID=b9040130, LMOD_sys=Linux, SNIC_TMP=/scratch, SLURM_SRUN_COMM_HOST=130.239.241.197, SLURM_PROCID=0, XDG_RUNTIME_DIR=/run/user/5133, HOME=/home/d/dginelli}}]
20:10:30.204 [main] DEBUG org.springframework.test.context.support.TestPropertySourceUtils - Adding inlined properties to environment: {spring.jmx.enabled=false, org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true, server.port=-1}
20:10:30.205 [main] DEBUG org.springframework.core.env.StandardEnvironment - Adding PropertySource 'Inlined Test Properties' with highest search precedence

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:30.782  INFO 436563 --- [           main] o.k.m.c.d.r.UserRepositoryTest           : Starting UserRepositoryTest on b-cn0837.hpc2n.umu.se with PID 436563 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core)
2020-04-12 20:10:30.790  INFO 436563 --- [           main] o.k.m.c.d.r.UserRepositoryTest           : No active profile set, falling back to default profiles: default
2020-04-12 20:10:30.839  INFO 436563 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@26e356f0: startup date [Sun Apr 12 20:10:30 CEST 2020]; root of context hierarchy
2020-04-12 20:10:31.776  INFO 436563 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:10:31.780  INFO 436563 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:10:32.371  INFO 436563 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:9ef4147e-ce38-43b9-a2f6-78a237898223;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:10:33.090  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:33.119  INFO 436563 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:10:33.260  INFO 436563 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.14.Final}
2020-04-12 20:10:33.264  INFO 436563 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-04-12 20:10:33.334  INFO 436563 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-04-12 20:10:33.575  INFO 436563 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:10:34.682  INFO 436563 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5922d3e9'
2020-04-12 20:10:35.225  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:36.325  INFO 436563 --- [           main] o.k.m.c.d.r.UserRepositoryTest           : Started UserRepositoryTest in 6.118 seconds (JVM running for 8.467)
2020-04-12 20:10:36.408  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4c583ecf testClass = UserRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.UserRepositoryTest@33d512c1, testMethod = testGetByUsername@UserRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@692f203f testClass = UserRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.UserRepository, interface org.kitodo.mediaserver.core.db.repositories.UserRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48f2bd5b key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.UserRepository]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@334ebcaa]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
2020-04-12 20:10:36.648  INFO 436563 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:10:36.942  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4c583ecf testClass = UserRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.UserRepositoryTest@33d512c1, testMethod = testGetByUsername@UserRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@692f203f testClass = UserRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.UserRepository, interface org.kitodo.mediaserver.core.db.repositories.UserRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@48f2bd5b key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.UserRepository]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.847 s - in org.kitodo.mediaserver.core.db.repositories.UserRepositoryTest
[INFO] Running org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest
2020-04-12 20:10:37.008  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest], using SpringBootContextLoader
2020-04-12 20:10:37.009  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-12 20:10:37.039  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:37.040  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@35eee641, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@5729b410, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@64518270, org.springframework.test.context.support.DirtiesContextTestExecutionListener@3b7c58e7, org.springframework.test.context.transaction.TransactionalTestExecutionListener@79627d27, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@6371cf2f, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@b5b9333, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@52b959df, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@38588dea, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@553d2579, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2a8f6e6]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:37.121  INFO 436563 --- [           main] o.k.m.c.d.r.WorkRepositoryTest           : Starting WorkRepositoryTest on b-cn0837.hpc2n.umu.se with PID 436563 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core)
2020-04-12 20:10:37.128  INFO 436563 --- [           main] o.k.m.c.d.r.WorkRepositoryTest           : No active profile set, falling back to default profiles: default
2020-04-12 20:10:37.136  INFO 436563 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b97907c: startup date [Sun Apr 12 20:10:37 CEST 2020]; root of context hierarchy
2020-04-12 20:10:37.355  INFO 436563 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:10:37.356  INFO 436563 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:10:37.460  INFO 436563 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:2c601179-bd4d-46ca-b1be-81b47fb0cdab;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:10:37.625  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:37.625  INFO 436563 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:10:37.634  INFO 436563 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:10:37.774  INFO 436563 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5922d3e9'
2020-04-12 20:10:37.775  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:38.159  INFO 436563 --- [           main] o.k.m.c.d.r.WorkRepositoryTest           : Started WorkRepositoryTest in 1.108 seconds (JVM running for 10.301)
2020-04-12 20:10:38.179  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@45037e16 testClass = WorkRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest@2f2e4bde, testMethod = testWorkWithCollections@WorkRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6222391a testClass = WorkRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@538a2f0e key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7e49ded]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
2020-04-12 20:10:38.278  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@45037e16 testClass = WorkRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest@2f2e4bde, testMethod = testWorkWithCollections@WorkRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6222391a testClass = WorkRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@538a2f0e key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:38.290  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@45037e16 testClass = WorkRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest@138f0661, testMethod = testFindById@WorkRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6222391a testClass = WorkRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@538a2f0e key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7e49ded]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: select work0_.id as id1_4_0_, work0_.enabled as enabled2_4_0_, work0_.host_id as host_id3_4_0_, work0_.index_time as index_ti4_4_0_, work0_.path as path5_4_0_, work0_.title as title6_4_0_ from work work0_ where work0_.id=?
2020-04-12 20:10:38.312  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@45037e16 testClass = WorkRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest@138f0661, testMethod = testFindById@WorkRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6222391a testClass = WorkRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@538a2f0e key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:38.327  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@45037e16 testClass = WorkRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest@544e3679, testMethod = testFindByTitleContaining@WorkRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6222391a testClass = WorkRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@538a2f0e key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7e49ded]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
2020-04-12 20:10:38.342  INFO 436563 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ where work0_.title like ?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ where work0_.title like ?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ where work0_.title like ?
2020-04-12 20:10:38.372  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@45037e16 testClass = WorkRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest@544e3679, testMethod = testFindByTitleContaining@WorkRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@6222391a testClass = WorkRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@538a2f0e key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.34 s - in org.kitodo.mediaserver.core.db.repositories.WorkRepositoryTest
[INFO] Running org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest
2020-04-12 20:10:38.374  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest], using SpringBootContextLoader
2020-04-12 20:10:38.374  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-12 20:10:38.402  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:38.414  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@43c7fe8a, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@67f946c3, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@21b51e59, org.springframework.test.context.support.DirtiesContextTestExecutionListener@1785d194, org.springframework.test.context.transaction.TransactionalTestExecutionListener@6b4a4e40, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@46a8c2b4, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@4f664bee, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@76563ae7, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@4fd74223, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@4fea840f, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@32ae8f27]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:38.452  INFO 436563 --- [           main] o.k.m.c.d.r.ActionRepositoryTest         : Starting ActionRepositoryTest on b-cn0837.hpc2n.umu.se with PID 436563 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core)
2020-04-12 20:10:38.455  INFO 436563 --- [           main] o.k.m.c.d.r.ActionRepositoryTest         : No active profile set, falling back to default profiles: default
2020-04-12 20:10:38.456  INFO 436563 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@686cf8ad: startup date [Sun Apr 12 20:10:38 CEST 2020]; root of context hierarchy
2020-04-12 20:10:38.659  INFO 436563 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:10:38.659  INFO 436563 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:10:38.733  INFO 436563 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:fcbc70c4-0263-4232-9fa5-8fb241eb94e6;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:10:38.857  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:38.857  INFO 436563 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:10:38.867  INFO 436563 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:10:38.980  INFO 436563 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5922d3e9'
2020-04-12 20:10:38.984  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:39.323  INFO 436563 --- [           main] o.k.m.c.d.r.ActionRepositoryTest         : Started ActionRepositoryTest in 0.905 seconds (JVM running for 11.466)
2020-04-12 20:10:39.356  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@14b8a751 testClass = ActionRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest@7345f97d, testMethod = findRunningAction@ActionRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@554566a8 testClass = ActionRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.ActionRepository, interface org.kitodo.mediaserver.core.db.repositories.ActionRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66020d69 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.ActionRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@111a7973]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
2020-04-12 20:10:39.386  INFO 436563 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
2020-04-12 20:10:39.429  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@14b8a751 testClass = ActionRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest@7345f97d, testMethod = findRunningAction@ActionRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@554566a8 testClass = ActionRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.ActionRepository, interface org.kitodo.mediaserver.core.db.repositories.ActionRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66020d69 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.ActionRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:39.437  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@14b8a751 testClass = ActionRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest@25533bba, testMethod = findLastFinishedAction@ActionRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@554566a8 testClass = ActionRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.ActionRepository, interface org.kitodo.mediaserver.core.db.repositories.ActionRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66020d69 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.ActionRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@111a7973]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? order by actiondata0_.end_time desc
2020-04-12 20:10:39.484  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@14b8a751 testClass = ActionRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest@25533bba, testMethod = findLastFinishedAction@ActionRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@554566a8 testClass = ActionRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.ActionRepository, interface org.kitodo.mediaserver.core.db.repositories.ActionRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66020d69 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.ActionRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:39.505  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@14b8a751 testClass = ActionRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest@37c1cfa, testMethod = findUnfinishedAction@ActionRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@554566a8 testClass = ActionRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.ActionRepository, interface org.kitodo.mediaserver.core.db.repositories.ActionRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66020d69 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.ActionRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@111a7973]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
2020-04-12 20:10:39.540  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@14b8a751 testClass = ActionRepositoryTest, testInstance = org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest@37c1cfa, testMethod = findUnfinishedAction@ActionRepositoryTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@554566a8 testClass = ActionRepositoryTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.ActionRepository, interface org.kitodo.mediaserver.core.db.repositories.ActionRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@66020d69 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.ActionRepository]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.142 s - in org.kitodo.mediaserver.core.db.repositories.ActionRepositoryTest
[INFO] Running org.kitodo.mediaserver.core.processors.SimpleList2MapParserTest
2020-04-12 20:10:39.563  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.processors.SimpleList2MapParserTest], using DelegatingSmartContextLoader
2020-04-12 20:10:39.564  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.processors.SimpleList2MapParserTest]: no resource found for suffixes {-context.xml}.
2020-04-12 20:10:39.564  INFO 436563 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.kitodo.mediaserver.core.processors.SimpleList2MapParserTest]: SimpleList2MapParserTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-12 20:10:39.566  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:39.567  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@639c7f9c, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@270d5060, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@1815577b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@71567f33, org.springframework.test.context.transaction.TransactionalTestExecutionListener@71369e1a, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3cf55e0c, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@ee96866, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4c04216f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@987a0bb, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1f949ab9, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5a7b6b75]
2020-04-12 20:10:39.569  INFO 436563 --- [           main] o.s.c.support.GenericApplicationContext  : Refreshing org.springframework.context.support.GenericApplicationContext@3855d9b2: startup date [Sun Apr 12 20:10:39 CEST 2020]; root of context hierarchy
[INFO] Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.096 s - in org.kitodo.mediaserver.core.processors.SimpleList2MapParserTest
[INFO] Running org.kitodo.mediaserver.core.processors.PatternExtractorTest
2020-04-12 20:10:39.655  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.processors.PatternExtractorTest], using DelegatingSmartContextLoader
2020-04-12 20:10:39.656  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.processors.PatternExtractorTest]: no resource found for suffixes {-context.xml}.
2020-04-12 20:10:39.656  INFO 436563 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.kitodo.mediaserver.core.processors.PatternExtractorTest]: PatternExtractorTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-12 20:10:39.664  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:39.665  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@733534f9, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@661e279d, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@beabd6b, org.springframework.test.context.support.DirtiesContextTestExecutionListener@38de5daf, org.springframework.test.context.transaction.TransactionalTestExecutionListener@621624b1, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7523d5a1, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@2bfc2f8b, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@61853c7e, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@32e5af53, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@5980fa73, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@13ca16bf]
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 s - in org.kitodo.mediaserver.core.processors.PatternExtractorTest
[INFO] Running org.kitodo.mediaserver.core.processors.WatermarkerTest
2020-04-12 20:10:39.709  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.processors.WatermarkerTest], using DelegatingSmartContextLoader
2020-04-12 20:10:39.710  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.processors.WatermarkerTest]: no resource found for suffixes {-context.xml}.
2020-04-12 20:10:39.710  INFO 436563 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.kitodo.mediaserver.core.processors.WatermarkerTest]: WatermarkerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-12 20:10:39.712  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:39.712  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@1e191150, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@2fbd390, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@166b11e, org.springframework.test.context.support.DirtiesContextTestExecutionListener@5e68be2, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5323999f, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@f18b738, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@3bc20984, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@aca3c85, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@45eab322, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@f017dd0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@2424cb9d]
2020-04-12 20:10:40.545  INFO 436563 --- [           main] o.k.m.core.processors.Watermarker        : Adding watermark to file, using text mode
2020-04-12 20:10:40.986  INFO 436563 --- [           main] o.k.m.core.processors.Watermarker        : Adding watermark to file, using text mode
2020-04-12 20:10:41.214  INFO 436563 --- [           main] o.k.m.core.processors.Watermarker        : Adding watermark to file, using image mode
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.738 s - in org.kitodo.mediaserver.core.processors.WatermarkerTest
[INFO] Running org.kitodo.mediaserver.core.processors.XsltMetsReaderTest
2020-04-12 20:10:41.452  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.processors.XsltMetsReaderTest], using DelegatingSmartContextLoader
2020-04-12 20:10:41.464  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.processors.XsltMetsReaderTest]: no resource found for suffixes {-context.xml}.
2020-04-12 20:10:41.465  INFO 436563 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.kitodo.mediaserver.core.processors.XsltMetsReaderTest]: XsltMetsReaderTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-12 20:10:41.466  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:41.473  INFO 436563 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@37a3ec27, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@283baa39, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@416b1265, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2830315f, org.springframework.test.context.transaction.TransactionalTestExecutionListener@da22aa, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@75452aea, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@6c24f61d, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@4537880f, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@14292d71, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@48e74764, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@338d47b]
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.494 s - in org.kitodo.mediaserver.core.processors.XsltMetsReaderTest
[INFO] Running org.kitodo.mediaserver.core.util.MediaServerUtilsTest
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.034 s - in org.kitodo.mediaserver.core.util.MediaServerUtilsTest
[INFO] Running org.kitodo.mediaserver.core.services.WorkServiceCollectionTest
2020-04-12 20:10:41.988  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.services.WorkServiceCollectionTest], using SpringBootContextLoader
2020-04-12 20:10:41.989  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.services.WorkServiceCollectionTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-12 20:10:42.007  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:42.007  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@22cd8ec2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7d977a20, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@35ab4260, org.springframework.test.context.support.DirtiesContextTestExecutionListener@76134b9b, org.springframework.test.context.transaction.TransactionalTestExecutionListener@38667005, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7ee64b53, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1131aead, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@7d126083, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@76ffc17c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3a8fb023, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@26d73519]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:42.054  INFO 436563 --- [           main] o.k.m.c.s.WorkServiceCollectionTest      : Starting WorkServiceCollectionTest on b-cn0837.hpc2n.umu.se with PID 436563 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core)
2020-04-12 20:10:42.055  INFO 436563 --- [           main] o.k.m.c.s.WorkServiceCollectionTest      : No active profile set, falling back to default profiles: default
2020-04-12 20:10:42.059  INFO 436563 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@1308ef19: startup date [Sun Apr 12 20:10:42 CEST 2020]; root of context hierarchy
2020-04-12 20:10:42.248  INFO 436563 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:10:42.249  INFO 436563 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:10:42.332  INFO 436563 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:d1baca82-0a84-421a-90df-c32eb04b60f7;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:10:42.444  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:42.454  INFO 436563 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:10:42.480  INFO 436563 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:10:42.605  INFO 436563 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5922d3e9'
2020-04-12 20:10:42.606  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:43.018  INFO 436563 --- [           main] o.k.m.c.s.WorkServiceCollectionTest      : Started WorkServiceCollectionTest in 1.007 seconds (JVM running for 15.16)
2020-04-12 20:10:43.038  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@62360a68, testMethod = coll1ShouldContainTwoWorks@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2ac05a33]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
2020-04-12 20:10:43.062  INFO 436563 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
2020-04-12 20:10:43.106  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@62360a68, testMethod = coll1ShouldContainTwoWorks@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:43.120  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@1f4d38f9, testMethod = coll3ShouldContainJustOneWorkWithId2@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2ac05a33]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
2020-04-12 20:10:43.151  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@1f4d38f9, testMethod = coll3ShouldContainJustOneWorkWithId2@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:43.156  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@2047adea, testMethod = workUpdateShouldChangeCollection@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2ac05a33]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
2020-04-12 20:10:43.195  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@2047adea, testMethod = workUpdateShouldChangeCollection@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:43.209  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@688d619c, testMethod = coll2ShouldContainTwoWorks@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2ac05a33]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
2020-04-12 20:10:43.238  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@688d619c, testMethod = coll2ShouldContainTwoWorks@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:43.255  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@4946485c, testMethod = workDeletedShouldChangeCollection@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2ac05a33]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select collection0_.name as name1_2_0_ from collection collection0_ where collection0_.name=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into collection (name) values (?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: insert into work_collection (work_id, collection_name) values (?, ?)
Hibernate: delete from work where id=?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where collection2_.name=?
2020-04-12 20:10:43.297  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@53e4a19e testClass = WorkServiceCollectionTest, testInstance = org.kitodo.mediaserver.core.services.WorkServiceCollectionTest@4946485c, testMethod = workDeletedShouldChangeCollection@WorkServiceCollectionTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@1450ffa3 testClass = WorkServiceCollectionTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@4e756867 key = [@org.springframework.boot.autoconfigure.AutoConfigurationPackage(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.boot.autoconfigure.EnableAutoConfiguration(excludeName=[], exclude=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.AutoConfigurationPackages$Registrar]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.313 s - in org.kitodo.mediaserver.core.services.WorkServiceCollectionTest
[INFO] Running org.kitodo.mediaserver.core.services.ActionServiceTest
2020-04-12 20:10:43.303  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.core.services.ActionServiceTest], using SpringBootContextLoader
2020-04-12 20:10:43.313  INFO 436563 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.core.services.ActionServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-12 20:10:43.319  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:43.320  INFO 436563 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@7286827b, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@1dd64243, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@2ef913a4, org.springframework.test.context.support.DirtiesContextTestExecutionListener@520c3dcb, org.springframework.test.context.transaction.TransactionalTestExecutionListener@145fe8ab, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3b347439, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@5d3634c8, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6e67a8c0, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@5960f17, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@1d1b3620, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@71e7c13f]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:43.362  INFO 436563 --- [           main] o.k.m.core.services.ActionServiceTest    : Starting ActionServiceTest on b-cn0837.hpc2n.umu.se with PID 436563 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-core)
2020-04-12 20:10:43.362  INFO 436563 --- [           main] o.k.m.core.services.ActionServiceTest    : No active profile set, falling back to default profiles: default
2020-04-12 20:10:43.365  INFO 436563 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5896b9f5: startup date [Sun Apr 12 20:10:43 CEST 2020]; root of context hierarchy
2020-04-12 20:10:43.530  INFO 436563 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:10:43.531  INFO 436563 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:10:43.618  INFO 436563 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:b697b253-678c-4f75-adba-d437b3ff64f9;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:10:43.719  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:43.719  INFO 436563 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:10:43.745  INFO 436563 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:10:43.842  INFO 436563 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5922d3e9'
2020-04-12 20:10:43.843  INFO 436563 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:44.141  INFO 436563 --- [           main] o.k.m.core.services.ActionServiceTest    : Started ActionServiceTest in 0.818 seconds (JVM running for 16.284)
2020-04-12 20:10:44.170  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@1b36d248, testMethod = shouldPerformActionImmediately@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
2020-04-12 20:10:44.187  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.187  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.188  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.189  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.190  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.191  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@1b36d248, testMethod = shouldPerformActionImmediately@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.194  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@1e029a04, testMethod = performImmediatelyWithNoWorkThrowsException@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
2020-04-12 20:10:44.195  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.196  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.196  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.196  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.197  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.201  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@1e029a04, testMethod = performImmediatelyWithNoWorkThrowsException@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.203  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@56b704ea, testMethod = performRequestedAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
2020-04-12 20:10:44.215  INFO 436563 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
2020-04-12 20:10:44.246  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.247  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.249  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.252  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@56b704ea, testMethod = performRequestedAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.257  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@515c732d, testMethod = getRunningAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
2020-04-12 20:10:44.280  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@515c732d, testMethod = getRunningAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.293  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@69ab2d6a, testMethod = getUnperformedActionWithActionNameNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and (actiondata0_.action_name is null) and (actiondata0_.end_time is null)
2020-04-12 20:10:44.324  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@69ab2d6a, testMethod = getUnperformedActionWithActionNameNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.327  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@75d7297d, testMethod = requestActionAlreadyRequested@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
2020-04-12 20:10:44.341  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.341  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.342  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.343  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@75d7297d, testMethod = requestActionAlreadyRequested@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.363  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@785ef70f, testMethod = getUnperformedActionWithWorkNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where (work1_.id is null) and actiondata0_.action_name=? and (actiondata0_.end_time is null)
2020-04-12 20:10:44.380  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@785ef70f, testMethod = getUnperformedActionWithWorkNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.383  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@6fefc5ea, testMethod = performImmediatelyWithInvalidActionThrowsException@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
2020-04-12 20:10:44.391  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.391  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.392  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.394  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.395  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.397  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@6fefc5ea, testMethod = performImmediatelyWithInvalidActionThrowsException@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.400  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@4888d1ea, testMethod = getLastPerformedAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? order by actiondata0_.end_time desc
2020-04-12 20:10:44.436  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@4888d1ea, testMethod = getLastPerformedAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.440  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@718ad3a6, testMethod = performRequestedActionWithInvalidActionBean@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
2020-04-12 20:10:44.460  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.460  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.462  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.464  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@718ad3a6, testMethod = performRequestedActionWithInvalidActionBean@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.468  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@3c65f00e, testMethod = performRequestedActionWithInvalidActionName@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
2020-04-12 20:10:44.472  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.473  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.473  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.480  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@3c65f00e, testMethod = performRequestedActionWithInvalidActionName@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.483  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@5e62ca19, testMethod = performImmediatelyWithBeanNotAnActionThrowsException@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
2020-04-12 20:10:44.484  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.484  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.484  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.491  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.492  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.493  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@5e62ca19, testMethod = performImmediatelyWithBeanNotAnActionThrowsException@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.497  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@2a9f8d47, testMethod = performRequestedActionAlreadyRunning@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
2020-04-12 20:10:44.519  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.519  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.525  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.527  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@2a9f8d47, testMethod = performRequestedActionAlreadyRunning@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.534  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@72168258, testMethod = requestAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
2020-04-12 20:10:44.547  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.547  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.547  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
Hibernate: select work_.id, work_.enabled as enabled2_4_, work_.host_id as host_id3_4_, work_.index_time as index_ti4_4_, work_.path as path5_4_, work_.title as title6_4_ from work work_ where work_.id=?
2020-04-12 20:10:44.547  INFO 436563 --- [           main] o.h.e.i.DefaultDeleteEventListener       : HHH000114: Handling transient entity in delete processing
2020-04-12 20:10:44.562  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@72168258, testMethod = requestAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.566  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@4a29fe2e, testMethod = getUnperformedActionWithParameterNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
2020-04-12 20:10:44.576  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@4a29fe2e, testMethod = getUnperformedActionWithParameterNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.579  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@d677be9, testMethod = requestWithNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
2020-04-12 20:10:44.582  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@d677be9, testMethod = requestWithNull@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:44.593  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@48860139, testMethod = getUnperformedAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@56da8847]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
2020-04-12 20:10:44.617  INFO 436563 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@575d48db testClass = ActionServiceTest, testInstance = org.kitodo.mediaserver.core.services.ActionServiceTest@48860139, testMethod = getUnperformedAction@ActionServiceTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@7e94de5f testClass = ActionServiceTest, locations = '{}', classes = '{class org.kitodo.mediaserver.core.TestConfiguration, class org.kitodo.mediaserver.core.TestConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@499c4d61 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, isolation=DEFAULT, transactionManager=, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(excludeAutoConfiguration=[], showSql=true, excludeFilters=[], useDefaultFilters=true, includeFilters=[]), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, entityManagerFactoryRef=entityManagerFactory, queryLookupStrategy=CREATE_IF_NOT_FOUND, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[class org.kitodo.mediaserver.core.TestConfiguration]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, excludeFilters=[], useDefaultFilters=true, scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@1188e820, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@166fa74d, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@32a068d1, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@4148db48, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@874a7922, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@49e202ad], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
[INFO] Tests run: 17, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.323 s - in org.kitodo.mediaserver.core.services.ActionServiceTest
2020-04-12 20:10:44.651  INFO 436563 --- [       Thread-6] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@686cf8ad: startup date [Sun Apr 12 20:10:38 CEST 2020]; root of context hierarchy
2020-04-12 20:10:44.653  INFO 436563 --- [       Thread-6] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:44.653  INFO 436563 --- [       Thread-6] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
2020-04-12 20:10:44.665  INFO 436563 --- [       Thread-4] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@3b97907c: startup date [Sun Apr 12 20:10:37 CEST 2020]; root of context hierarchy
2020-04-12 20:10:44.666  INFO 436563 --- [      Thread-11] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5896b9f5: startup date [Sun Apr 12 20:10:43 CEST 2020]; root of context hierarchy
2020-04-12 20:10:44.673  INFO 436563 --- [       Thread-9] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@1308ef19: startup date [Sun Apr 12 20:10:42 CEST 2020]; root of context hierarchy
2020-04-12 20:10:44.674  INFO 436563 --- [       Thread-7] o.s.c.support.GenericApplicationContext  : Closing org.springframework.context.support.GenericApplicationContext@3855d9b2: startup date [Sun Apr 12 20:10:39 CEST 2020]; root of context hierarchy
2020-04-12 20:10:44.696  INFO 436563 --- [       Thread-4] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:44.697  INFO 436563 --- [       Thread-4] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
2020-04-12 20:10:44.712  INFO 436563 --- [      Thread-11] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:44.712  INFO 436563 --- [      Thread-11] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
2020-04-12 20:10:44.713  INFO 436563 --- [       Thread-9] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:44.713  INFO 436563 --- [       Thread-9] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: drop table work_collection if exists
2020-04-12 20:10:44.720  INFO 436563 --- [       Thread-2] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@26e356f0: startup date [Sun Apr 12 20:10:30 CEST 2020]; root of context hierarchy
2020-04-12 20:10:44.724  INFO 436563 --- [       Thread-2] j.LocalContainerEntityManagerFactoryBean : Closing JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:44.725  INFO 436563 --- [       Thread-2] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 63, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building kitodo-mediaserver-fileserver 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ kitodo-mediaserver-fileserver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ kitodo-mediaserver-fileserver ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ kitodo-mediaserver-fileserver ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-fileserver/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ kitodo-mediaserver-fileserver ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ kitodo-mediaserver-fileserver ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building kitodo-mediaserver-importer 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ kitodo-mediaserver-importer ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 0 resource
[INFO] Copying 3 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ kitodo-mediaserver-importer ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ kitodo-mediaserver-importer ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 8 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ kitodo-mediaserver-importer ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ kitodo-mediaserver-importer ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-importer/target/surefire-reports
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.kitodo.mediaserver.importer.validators.ImportDataAndFilesValidationTest
[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.944 s - in org.kitodo.mediaserver.importer.validators.ImportDataAndFilesValidationTest
[INFO] Running org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:49.098  INFO 436881 --- [           main] o.k.m.i.checks.JpaWorkCheckerTest        : Starting JpaWorkCheckerTest on b-cn0837.hpc2n.umu.se with PID 436881 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-importer)
2020-04-12 20:10:49.104  INFO 436881 --- [           main] o.k.m.i.checks.JpaWorkCheckerTest        : No active profile set, falling back to default profiles: default
2020-04-12 20:10:49.138  INFO 436881 --- [           main] s.c.a.AnnotationConfigApplicationContext : Refreshing org.springframework.context.annotation.AnnotationConfigApplicationContext@5003041b: startup date [Sun Apr 12 20:10:49 CEST 2020]; root of context hierarchy
2020-04-12 20:10:50.671  INFO 436881 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:10:50.673  INFO 436881 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:10:51.135  INFO 436881 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:b248d96f-6f04-44e5-8c6a-aef6bfb15363;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:10:51.782  INFO 436881 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:51.799  INFO 436881 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:10:51.941  INFO 436881 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.14.Final}
2020-04-12 20:10:51.942  INFO 436881 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-04-12 20:10:52.025  INFO 436881 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-04-12 20:10:52.310  INFO 436881 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:10:53.258  INFO 436881 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@3a7c678b'
2020-04-12 20:10:53.262  INFO 436881 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:10:54.418  INFO 436881 --- [           main] o.k.m.i.checks.JpaWorkCheckerTest        : Started JpaWorkCheckerTest in 5.776 seconds (JVM running for 8.9)
2020-04-12 20:10:54.478  INFO 436881 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@175c5c3a testClass = JpaWorkCheckerTest, testInstance = org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest@69a5c6be, testMethod = workReturnedWhenPresent@JpaWorkCheckerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@451e2fa9 testClass = JpaWorkCheckerTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@497ed877 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, queryLookupStrategy=CREATE_IF_NOT_FOUND, entityManagerFactoryRef=entityManagerFactory, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7e0b0338, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2038ae61, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1951b871, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@57ac5227, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ff2603ca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@23e028a9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@740b9a50]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
2020-04-12 20:10:54.680  INFO 436881 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@175c5c3a testClass = JpaWorkCheckerTest, testInstance = org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest@69a5c6be, testMethod = workReturnedWhenPresent@JpaWorkCheckerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@451e2fa9 testClass = JpaWorkCheckerTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@497ed877 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, queryLookupStrategy=CREATE_IF_NOT_FOUND, entityManagerFactoryRef=entityManagerFactory, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7e0b0338, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2038ae61, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1951b871, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@57ac5227, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ff2603ca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@23e028a9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
2020-04-12 20:10:54.684  INFO 436881 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@175c5c3a testClass = JpaWorkCheckerTest, testInstance = org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest@787d1f9c, testMethod = nullReturnedWhenNotPresent@JpaWorkCheckerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@451e2fa9 testClass = JpaWorkCheckerTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@497ed877 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, queryLookupStrategy=CREATE_IF_NOT_FOUND, entityManagerFactoryRef=entityManagerFactory, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7e0b0338, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2038ae61, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1951b871, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@57ac5227, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ff2603ca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@23e028a9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@740b9a50]; rollback [true]
Hibernate: select work0_.id as id1_4_1_, work0_.enabled as enabled2_4_1_, work0_.host_id as host_id3_4_1_, work0_.index_time as index_ti4_4_1_, work0_.path as path5_4_1_, work0_.title as title6_4_1_, collection1_.work_id as work_id1_5_3_, collection2_.name as collecti2_5_3_, collection2_.name as name1_2_0_ from work work0_ left outer join work_collection collection1_ on work0_.id=collection1_.work_id left outer join collection collection2_ on collection1_.collection_name=collection2_.name where work0_.id=?
Hibernate: select work0_.id as id1_4_0_, work0_.enabled as enabled2_4_0_, work0_.host_id as host_id3_4_0_, work0_.index_time as index_ti4_4_0_, work0_.path as path5_4_0_, work0_.title as title6_4_0_ from work work0_ where work0_.id=?
2020-04-12 20:10:54.708  INFO 436881 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@175c5c3a testClass = JpaWorkCheckerTest, testInstance = org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest@787d1f9c, testMethod = nullReturnedWhenNotPresent@JpaWorkCheckerTest, testException = [null], mergedContextConfiguration = [MergedContextConfiguration@451e2fa9 testClass = JpaWorkCheckerTest, locations = '{}', classes = '{interface org.kitodo.mediaserver.core.db.repositories.WorkRepository, interface org.kitodo.mediaserver.core.db.repositories.WorkRepository}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@497ed877 key = [@org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.domain.EntityScanPackages$Registrar]), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[interface org.kitodo.mediaserver.core.db.repositories.WorkRepository]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.data.jpa.repository.config.EnableJpaRepositories(excludeFilters=[], repositoryBaseClass=class org.springframework.data.repository.config.DefaultRepositoryBaseClass, enableDefaultTransactions=true, basePackageClasses=[], includeFilters=[], repositoryFactoryBeanClass=class org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean, queryLookupStrategy=CREATE_IF_NOT_FOUND, entityManagerFactoryRef=entityManagerFactory, namedQueriesLocation=, transactionManagerRef=transactionManager, basePackages=[], repositoryImplementationPostfix=Impl, considerNestedRepositories=false, value=[org.kitodo.mediaserver.core.db.repositories]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.jpa.repository.config.JpaRepositoriesRegistrar]), @org.springframework.boot.autoconfigure.domain.EntityScan(basePackages=[], basePackageClasses=[], value=[org.kitodo.mediaserver.core.db.entities]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false)]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@7e0b0338, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@2038ae61, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@1951b871, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@57ac5227, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@ff2603ca, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@23e028a9], contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map[[empty]]].
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 6.354 s - in org.kitodo.mediaserver.importer.checks.JpaWorkCheckerTest
[INFO] Running org.kitodo.mediaserver.importer.processors.WorkDataReaderTest
2020-04-12 20:10:54.718  INFO 436881 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [org.kitodo.mediaserver.importer.processors.WorkDataReaderTest], using DelegatingSmartContextLoader
2020-04-12 20:10:54.719  INFO 436881 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.importer.processors.WorkDataReaderTest]: no resource found for suffixes {-context.xml}.
2020-04-12 20:10:54.719  INFO 436881 --- [           main] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [org.kitodo.mediaserver.importer.processors.WorkDataReaderTest]: WorkDataReaderTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2020-04-12 20:10:54.722  INFO 436881 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2020-04-12 20:10:54.722  INFO 436881 --- [           main] o.s.t.c.s.DefaultTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@74697863, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@7d7ceca8, org.springframework.test.context.support.DependencyInjectionTestExecutionListener@2bba35ef, org.springframework.test.context.support.DirtiesContextTestExecutionListener@26c7b1c6, org.springframework.test.context.transaction.TransactionalTestExecutionListener@19526f1d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@3d1c933, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@79be91eb, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@626c569b, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@684ce74c, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@65593327, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@68e5c7ae]
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.493 s - in org.kitodo.mediaserver.importer.processors.WorkDataReaderTest
2020-04-12 20:10:55.242  INFO 436881 --- [       Thread-3] s.c.a.AnnotationConfigApplicationContext : Closing org.springframework.context.annotation.AnnotationConfigApplicationContext@5003041b: startup date [Sun Apr 12 20:10:49 CEST 2020]; root of context hierarchy
2020-04-12 20:10:55.272  INFO 436881 --- [       Thread-3] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
[INFO] 
[INFO] Results:
[INFO] 
[INFO] Tests run: 13, Failures: 0, Errors: 0, Skipped: 0
[INFO] 
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building kitodo-mediaserver-cli 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ kitodo-mediaserver-cli ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ kitodo-mediaserver-cli ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ kitodo-mediaserver-cli ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-cli/src/test/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ kitodo-mediaserver-cli ---
[INFO] No sources to compile
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ kitodo-mediaserver-cli ---
[INFO] No tests to run.
[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building kitodo-mediaserver-ui 1.0-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:resources (default-resources) @ kitodo-mediaserver-ui ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] Copying 0 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:compile (default-compile) @ kitodo-mediaserver-ui ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:3.0.1:testResources (default-testResources) @ kitodo-mediaserver-ui ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.7.0:testCompile (default-testCompile) @ kitodo-mediaserver-ui ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.20.1:test (default-test) @ kitodo-mediaserver-ui ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-ui/target/surefire-reports
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.kitodo.mediaserver.ui.works.WorkControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:10:58.591  INFO 436948 --- [           main] o.k.m.ui.works.WorkControllerTest        : Starting WorkControllerTest on b-cn0837.hpc2n.umu.se with PID 436948 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-ui)
2020-04-12 20:10:58.607  INFO 436948 --- [           main] o.k.m.ui.works.WorkControllerTest        : No active profile set, falling back to default profiles: default
2020-04-12 20:10:58.673  INFO 436948 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@3214ee6: startup date [Sun Apr 12 20:10:58 CEST 2020]; root of context hierarchy
2020-04-12 20:11:00.389  INFO 436948 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:11:00.391  INFO 436948 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:11:00.989  INFO 436948 --- [           main] trationDelegate$BeanPostProcessorChecker : Bean 'org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration' of type [org.springframework.transaction.annotation.ProxyTransactionManagementConfiguration$$EnhancerBySpringCGLIB$$ee40d292] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-04-12 20:11:01.183  INFO 436948 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:4e7a7f91-e15c-4d3b-a889-2a50702fee10;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:11:01.839  INFO 436948 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:11:01.870  INFO 436948 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:11:01.990  INFO 436948 --- [           main] org.hibernate.Version                    : HHH000412: Hibernate Core {5.2.14.Final}
2020-04-12 20:11:01.996  INFO 436948 --- [           main] org.hibernate.cfg.Environment            : HHH000206: hibernate.properties not found
2020-04-12 20:11:02.079  INFO 436948 --- [           main] o.hibernate.annotations.common.Version   : HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
2020-04-12 20:11:02.274  INFO 436948 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:11:03.803  INFO 436948 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@16da476c'
2020-04-12 20:11:03.807  INFO 436948 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:11:05.408  INFO 436948 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2bec068b, org.springframework.security.web.context.SecurityContextPersistenceFilter@51e7589f, org.springframework.security.web.header.HeaderWriterFilter@6cbb7a7d, org.springframework.security.web.csrf.CsrfFilter@2589d787, org.springframework.security.web.authentication.logout.LogoutFilter@3fb450d7, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@7a0ab480, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@42c12b3e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@675b18ff, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d59e968, org.springframework.security.web.session.SessionManagementFilter@37606fee, org.springframework.security.web.access.ExceptionTranslationFilter@2fd9fb34, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@12192604]
2020-04-12 20:11:05.464  WARN 436948 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-12 20:11:05.573  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String org.kitodo.mediaserver.ui.IndexController.index()
2020-04-12 20:11:05.589  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[GET]}" onto public java.lang.String org.kitodo.mediaserver.ui.LoginController.login(javax.servlet.http.HttpServletRequest)
2020-04-12 20:11:05.597  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/-new],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.createSubmit(org.springframework.ui.Model,org.kitodo.mediaserver.ui.users.UserDto,org.springframework.validation.BindingResult)
2020-04-12 20:11:05.597  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/{username}],methods=[GET]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.editForm(org.springframework.ui.Model,java.lang.String)
2020-04-12 20:11:05.598  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/-new],methods=[GET]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.createForm(org.springframework.ui.Model)
2020-04-12 20:11:05.599  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/{username}],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.editSubmit(org.springframework.ui.Model,java.lang.String,org.kitodo.mediaserver.ui.users.UserDto,org.springframework.validation.BindingResult,java.security.Principal,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-12 20:11:05.600  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/{username}/delete],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.deleteSubmit(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,java.security.Principal)
2020-04-12 20:11:05.600  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.list(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-04-12 20:11:05.604  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/works/{id}/lockcomment],methods=[GET],produces=[application/json]}" onto public java.util.Map<java.lang.String, java.lang.String> org.kitodo.mediaserver.ui.works.WorkController.getLockComment(java.lang.String) throws org.kitodo.mediaserver.core.exceptions.WorkNotFoundException
2020-04-12 20:11:05.605  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/works],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.works.WorkController.action(java.util.List<java.lang.String>,java.lang.String,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-12 20:11:05.614  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/works]}" onto public java.lang.String org.kitodo.mediaserver.ui.works.WorkController.list(org.springframework.ui.Model,org.springframework.data.domain.Pageable,java.lang.String,java.lang.String,java.lang.String)
2020-04-12 20:11:05.651  INFO 436948 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/login] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-04-12 20:11:05.692  INFO 436948 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-12 20:11:05.821  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@3214ee6: startup date [Sun Apr 12 20:10:58 CEST 2020]; root of context hierarchy
2020-04-12 20:11:05.925  INFO 436948 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in uiErrorController
2020-04-12 20:11:06.350  INFO 436948 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2020-04-12 20:11:06.351  INFO 436948 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2020-04-12 20:11:06.361  INFO 436948 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 9 ms
2020-04-12 20:11:06.480  INFO 436948 --- [           main] o.k.m.ui.works.WorkControllerTest        : Started WorkControllerTest in 8.797 seconds (JVM running for 10.634)
2020-04-12 20:11:06.574  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@43e8f1c testClass = WorkControllerTest, testInstance = org.kitodo.mediaserver.ui.works.WorkControllerTest@66a82a13, testMethod = testSearchWork@WorkControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@675ec28b testClass = WorkControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@11399548 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.data.web.config.EnableSpringDataWebSupport(), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, initializers=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class org.kitodo.mediaserver.ui.config.WebMvcConfiguration], name=, locations=[], value=[], inheritLocations=true), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, secure=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.mockmvc, skip=NO), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector, class org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7f42b194]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
2020-04-12 20:11:06.808  INFO 436948 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select count(*) as col_0_0_ from work work0_
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ cross join collection collection1_ where 1=1 and (0=1 or work0_.id like ? or work0_.title like ? or work0_.host_id like ? or collection1_.name like ?) order by work0_.title asc limit ?

MockHttpServletRequest:
      HTTP Method = GET
      Request URI = /works
       Parameters = {search=[huh]}
          Headers = {}
             Body = <no character encoding set>
    Session Attrs = {SPRING_SECURITY_CONTEXT=org.springframework.security.core.context.SecurityContextImpl@81c98b2: Authentication: org.springframework.security.authentication.UsernamePasswordAuthenticationToken@81c98b2: Principal: org.springframework.security.core.userdetails.User@36ebcb: Username: user; Password: [PROTECTED]; Enabled: true; AccountNonExpired: true; credentialsNonExpired: true; AccountNonLocked: true; Granted Authorities: ROLE_ADMIN; Credentials: [PROTECTED]; Authenticated: true; Details: null; Granted Authorities: ROLE_ADMIN}

Handler:
             Type = org.kitodo.mediaserver.ui.works.WorkController
           Method = public java.lang.String org.kitodo.mediaserver.ui.works.WorkController.list(org.springframework.ui.Model,org.springframework.data.domain.Pageable,java.lang.String,java.lang.String,java.lang.String)

Async:
    Async started = false
     Async result = null

Resolved Exception:
             Type = null

ModelAndView:
        View name = works/works
             View = null
        Attribute = success
            value = 
           errors = []
        Attribute = error
            value = 
           errors = []
        Attribute = search
            value = huh
        Attribute = searchFields
            value = [null=huh]
        Attribute = page
            value = Page 1 of 0 containing UNKNOWN instances
           errors = []
        Attribute = sort
            value = title,asc
        Attribute = sizes
            value = [5, 10, 20, 50, 100, 200]
        Attribute = availableFields
            value = [id, title, enabled]
        Attribute = reduceMets
            value = null

FlashMap:
       Attributes = null

MockHttpServletResponse:
           Status = 200
    Error message = null
          Headers = {Content-Language=[en], X-Content-Type-Options=[nosniff], X-XSS-Protection=[1; mode=block], Cache-Control=[no-cache, no-store, max-age=0, must-revalidate], Pragma=[no-cache], Expires=[0], X-Frame-Options=[DENY]}
     Content type = null
             Body = 
    Forwarded URL = works/works
   Redirected URL = null
          Cookies = []
2020-04-12 20:11:07.438  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@43e8f1c testClass = WorkControllerTest, testInstance = org.kitodo.mediaserver.ui.works.WorkControllerTest@66a82a13, testMethod = testSearchWork@WorkControllerTest, testException = java.lang.AssertionError: Model attribute 'page'
Expected: hasProperty("content", a collection with size <1>)
     but: property 'content' collection size was <0>, mergedContextConfiguration = [WebMergedContextConfiguration@675ec28b testClass = WorkControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@11399548 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.data.web.config.EnableSpringDataWebSupport(), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, initializers=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class org.kitodo.mediaserver.ui.config.WebMvcConfiguration], name=, locations=[], value=[], inheritLocations=true), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, secure=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.mockmvc, skip=NO), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector, class org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:07.467  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@43e8f1c testClass = WorkControllerTest, testInstance = org.kitodo.mediaserver.ui.works.WorkControllerTest@6b8bdcc6, testMethod = testList@WorkControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@675ec28b testClass = WorkControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@11399548 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.data.web.config.EnableSpringDataWebSupport(), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, initializers=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class org.kitodo.mediaserver.ui.config.WebMvcConfiguration], name=, locations=[], value=[], inheritLocations=true), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, secure=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.mockmvc, skip=NO), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector, class org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7f42b194]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from work work0_
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ order by work0_.title asc limit ?
Hibernate: select count(*) as col_0_0_ from work work0_
2020-04-12 20:11:07.524  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@43e8f1c testClass = WorkControllerTest, testInstance = org.kitodo.mediaserver.ui.works.WorkControllerTest@6b8bdcc6, testMethod = testList@WorkControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@675ec28b testClass = WorkControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@11399548 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.data.web.config.EnableSpringDataWebSupport(), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, initializers=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class org.kitodo.mediaserver.ui.config.WebMvcConfiguration], name=, locations=[], value=[], inheritLocations=true), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, secure=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.mockmvc, skip=NO), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector, class org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:07.530  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@43e8f1c testClass = WorkControllerTest, testInstance = org.kitodo.mediaserver.ui.works.WorkControllerTest@17d76ebb, testMethod = testLockWorkWithoutReduceMets@WorkControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@675ec28b testClass = WorkControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@11399548 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.data.web.config.EnableSpringDataWebSupport(), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, initializers=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class org.kitodo.mediaserver.ui.config.WebMvcConfiguration], name=, locations=[], value=[], inheritLocations=true), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, secure=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.mockmvc, skip=NO), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector, class org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@7f42b194]; rollback [true]
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: insert into work (enabled, host_id, index_time, path, title, id) values (?, ?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from work work0_
Hibernate: select work0_.id as id1_4_, work0_.enabled as enabled2_4_, work0_.host_id as host_id3_4_, work0_.index_time as index_ti4_4_, work0_.path as path5_4_, work0_.title as title6_4_ from work work0_ where work0_.id in (?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
Hibernate: insert into action_data (id, action_name, end_time, request_time, start_time, work_id) values (null, ?, ?, ?, ?, ?)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.end_time is null)
Hibernate: select actiondata0_.id as id1_1_, actiondata0_.action_name as action_n2_1_, actiondata0_.end_time as end_time3_1_, actiondata0_.request_time as request_4_1_, actiondata0_.start_time as start_ti5_1_, actiondata0_.work_id as work_id6_1_ from action_data actiondata0_ left outer join work work1_ on actiondata0_.work_id=work1_.id where work1_.id=? and actiondata0_.action_name=? and (actiondata0_.start_time is not null) and (actiondata0_.end_time is null)
Hibernate: update work set enabled=?, host_id=?, index_time=?, path=?, title=? where id=?
Hibernate: update action_data set action_name=?, end_time=?, request_time=?, start_time=?, work_id=? where id=?
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: insert into action_parameter (action_data_id, parameter_key, parameter) values (?, ?, ?)
Hibernate: select count(*) as col_0_0_ from work work0_
2020-04-12 20:11:07.706  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@43e8f1c testClass = WorkControllerTest, testInstance = org.kitodo.mediaserver.ui.works.WorkControllerTest@17d76ebb, testMethod = testLockWorkWithoutReduceMets@WorkControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@675ec28b testClass = WorkControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@11399548 key = [@org.springframework.context.annotation.Import(value=[class org.springframework.boot.autoconfigure.ImportAutoConfigurationImportSelector]), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureDataJpa(), @org.springframework.boot.test.autoconfigure.orm.jpa.AutoConfigureTestEntityManager(), @org.springframework.data.web.config.EnableSpringDataWebSupport(), @org.springframework.test.context.ContextConfiguration(inheritInitializers=true, initializers=[], loader=interface org.springframework.test.context.ContextLoader, classes=[class org.kitodo.mediaserver.ui.config.WebMvcConfiguration], name=, locations=[], value=[], inheritLocations=true), @org.springframework.boot.test.autoconfigure.filter.TypeExcludeFilters(value=[class org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTypeExcludeFilter]), @org.springframework.boot.test.autoconfigure.orm.jpa.DataJpaTest(showSql=true, excludeAutoConfiguration=[], useDefaultFilters=true, excludeFilters=[], includeFilters=[]), @org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc(webDriverEnabled=true, print=DEFAULT, webClientEnabled=true, secure=true, addFilters=true, printOnlyOnFailure=true), @org.springframework.test.context.BootstrapWith(value=class org.springframework.boot.test.context.SpringBootTestContextBootstrapper), @org.springframework.boot.test.autoconfigure.core.AutoConfigureCache(cacheProvider=NONE), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.mockmvc, skip=NO), @org.junit.runner.RunWith(value=class org.springframework.test.context.junit4.SpringRunner), @org.springframework.context.annotation.ComponentScan(scopeResolver=class org.springframework.context.annotation.AnnotationScopeMetadataResolver, lazyInit=false, resourcePattern=**/*.class, useDefaultFilters=true, excludeFilters=[], scopedProxy=DEFAULT, basePackageClasses=[], nameGenerator=interface org.springframework.beans.factory.support.BeanNameGenerator, basePackages=[], includeFilters=[], value=[org.kitodo.mediaserver.core.services]), @org.springframework.boot.autoconfigure.ImportAutoConfiguration(value=[], exclude=[], classes=[]), @org.springframework.boot.test.autoconfigure.properties.PropertyMapping(value=spring.test.database, skip=NO), @org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase(replace=ANY, connection=NONE), @org.springframework.boot.test.context.SpringBootTest(webEnvironment=MOCK, value=[], properties=[], classes=[]), @org.springframework.boot.test.autoconfigure.OverrideAutoConfiguration(enabled=false), @org.springframework.transaction.annotation.Transactional(propagation=REQUIRED, rollbackForClassName=[], readOnly=false, transactionManager=, isolation=DEFAULT, noRollbackFor=[], noRollbackForClassName=[], value=, timeout=-1, rollbackFor=[]), @org.springframework.context.annotation.Import(value=[class org.springframework.data.web.config.EnableSpringDataWebSupport$SpringDataWebConfigurationImportSelector, class org.springframework.data.web.config.EnableSpringDataWebSupport$QuerydslActivator])]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
[ERROR] Tests run: 3, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 10.898 s <<< FAILURE! - in org.kitodo.mediaserver.ui.works.WorkControllerTest
[ERROR] testSearchWork(org.kitodo.mediaserver.ui.works.WorkControllerTest)  Time elapsed: 0.906 s  <<< FAILURE!
java.lang.AssertionError: 
Model attribute 'page'
Expected: hasProperty("content", a collection with size <1>)
     but: property 'content' collection size was <0>
	at org.kitodo.mediaserver.ui.works.WorkControllerTest.testSearchWork(WorkControllerTest.java:131)

[INFO] Running org.kitodo.mediaserver.ui.util.KeyValueParserTest
[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 s - in org.kitodo.mediaserver.ui.util.KeyValueParserTest
[INFO] Running org.kitodo.mediaserver.ui.users.UserControllerTest
2020-04-12 20:11:07.753  INFO 436948 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.ui.users.UserControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-12 20:11:07.778  INFO 436948 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2020-04-12 20:11:07.779  INFO 436948 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@536da29c, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@58fbcb71, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@70cf7d1e, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@72f3f14c, org.springframework.test.context.support.DirtiesContextTestExecutionListener@4cb4c4cc, org.springframework.test.context.transaction.TransactionalTestExecutionListener@4a122e68, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@41be8db9, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@2c2a7d53, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@46524ebe, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@1de85972, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@280ecc33, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@57b1ec84, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@3c27f72, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@5cbe95b1]

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::        (v2.0.0.RELEASE)

2020-04-12 20:11:07.865  INFO 436948 --- [           main] o.k.m.ui.users.UserControllerTest        : Starting UserControllerTest on b-cn0837.hpc2n.umu.se with PID 436948 (started by dginelli in /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-ui)
2020-04-12 20:11:07.866  INFO 436948 --- [           main] o.k.m.ui.users.UserControllerTest        : No active profile set, falling back to default profiles: default
2020-04-12 20:11:07.869  INFO 436948 --- [           main] o.s.w.c.s.GenericWebApplicationContext   : Refreshing org.springframework.web.context.support.GenericWebApplicationContext@55d1f065: startup date [Sun Apr 12 20:11:07 CEST 2020]; root of context hierarchy
2020-04-12 20:11:08.208  INFO 436948 --- [           main] beddedDataSourceBeanFactoryPostProcessor : Replacing 'dataSource' DataSource bean with embedded version
2020-04-12 20:11:08.209  INFO 436948 --- [           main] o.s.b.f.s.DefaultListableBeanFactory     : Overriding bean definition for bean 'dataSource' with a different definition: replacing [Root bean: class [null]; scope=; abstract=false; lazyInit=false; autowireMode=3; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=org.springframework.boot.autoconfigure.jdbc.DataSourceConfiguration$Hikari; factoryMethodName=dataSource; initMethodName=null; destroyMethodName=(inferred); defined in class path resource [org/springframework/boot/autoconfigure/jdbc/DataSourceConfiguration$Hikari.class]] with [Root bean: class [org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration$EmbeddedDataSourceFactoryBean]; scope=; abstract=false; lazyInit=false; autowireMode=0; dependencyCheck=0; autowireCandidate=true; primary=false; factoryBeanName=null; factoryMethodName=null; initMethodName=null; destroyMethodName=null]
2020-04-12 20:11:08.357  INFO 436948 --- [           main] o.s.j.d.e.EmbeddedDatabaseFactory        : Starting embedded database: url='jdbc:h2:mem:a44ef9ec-ff36-4ecf-804d-14ef66487d8e;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=false', username='sa'
2020-04-12 20:11:08.476  INFO 436948 --- [           main] j.LocalContainerEntityManagerFactoryBean : Building JPA container EntityManagerFactory for persistence unit 'default'
2020-04-12 20:11:08.476  INFO 436948 --- [           main] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [
	name: default
	...]
2020-04-12 20:11:08.485  INFO 436948 --- [           main] org.hibernate.dialect.Dialect            : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: create table action_parameter (action_data_id integer not null, parameter varchar(255), parameter_key varchar(255) not null, primary key (action_data_id, parameter_key))
Hibernate: create table action_data (id integer generated by default as identity, action_name varchar(255), end_time timestamp, request_time timestamp, start_time timestamp, work_id varchar(255) not null, primary key (id))
Hibernate: create table collection (name varchar(255) not null, primary key (name))
Hibernate: create table user (username varchar(255) not null, enabled boolean, name varchar(255), password varchar(60), primary key (username))
Hibernate: create table work (id varchar(255) not null, enabled boolean not null, host_id varchar(255), index_time timestamp, path varchar(255), title varchar(255), primary key (id))
Hibernate: create table work_collection (work_id varchar(255) not null, collection_name varchar(255) not null, primary key (work_id, collection_name))
Hibernate: alter table action_parameter add constraint FKmid1stw8u9vpewb5shoj6ltb foreign key (action_data_id) references action_data
Hibernate: alter table action_data add constraint FKhauld9xvs8kr1uwnv0hy6ey0i foreign key (work_id) references work
Hibernate: alter table work_collection add constraint FKgv5rilmal9a0i8l8a7pll9j5v foreign key (collection_name) references collection
Hibernate: alter table work_collection add constraint FK69jg12ae6q7kv80hh5k0h11rk foreign key (work_id) references work
2020-04-12 20:11:08.680  INFO 436948 --- [           main] o.h.t.schema.internal.SchemaCreatorImpl  : HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@16da476c'
2020-04-12 20:11:08.680  INFO 436948 --- [           main] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2020-04-12 20:11:09.202  INFO 436948 --- [           main] o.s.s.web.DefaultSecurityFilterChain     : Creating filter chain: org.springframework.security.web.util.matcher.AnyRequestMatcher@1, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@335b3d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@6ceb11f9, org.springframework.security.web.header.HeaderWriterFilter@45dc7be, org.springframework.security.web.csrf.CsrfFilter@2838eb, org.springframework.security.web.authentication.logout.LogoutFilter@2676d96a, org.springframework.security.web.authentication.UsernamePasswordAuthenticationFilter@1eb6037d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@4d664323, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@27ec0d06, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3a5ce4b8, org.springframework.security.web.session.SessionManagementFilter@2d459bda, org.springframework.security.web.access.ExceptionTranslationFilter@fb5d334, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2444c3df]
2020-04-12 20:11:09.231  WARN 436948 --- [           main] aWebConfiguration$JpaWebMvcConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2020-04-12 20:11:09.271  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/]}" onto public java.lang.String org.kitodo.mediaserver.ui.IndexController.index()
2020-04-12 20:11:09.272  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/login],methods=[GET]}" onto public java.lang.String org.kitodo.mediaserver.ui.LoginController.login(javax.servlet.http.HttpServletRequest)
2020-04-12 20:11:09.277  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/-new],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.createSubmit(org.springframework.ui.Model,org.kitodo.mediaserver.ui.users.UserDto,org.springframework.validation.BindingResult)
2020-04-12 20:11:09.277  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/{username}],methods=[GET]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.editForm(org.springframework.ui.Model,java.lang.String)
2020-04-12 20:11:09.278  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/-new],methods=[GET]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.createForm(org.springframework.ui.Model)
2020-04-12 20:11:09.278  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/{username}],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.editSubmit(org.springframework.ui.Model,java.lang.String,org.kitodo.mediaserver.ui.users.UserDto,org.springframework.validation.BindingResult,java.security.Principal,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-12 20:11:09.279  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users/{username}/delete],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.deleteSubmit(java.lang.String,org.springframework.web.servlet.mvc.support.RedirectAttributes,java.security.Principal)
2020-04-12 20:11:09.279  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/users]}" onto public java.lang.String org.kitodo.mediaserver.ui.users.UserController.list(org.springframework.ui.Model,java.lang.String,java.lang.String)
2020-04-12 20:11:09.284  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/works/{id}/lockcomment],methods=[GET],produces=[application/json]}" onto public java.util.Map<java.lang.String, java.lang.String> org.kitodo.mediaserver.ui.works.WorkController.getLockComment(java.lang.String) throws org.kitodo.mediaserver.core.exceptions.WorkNotFoundException
2020-04-12 20:11:09.284  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/works],methods=[POST]}" onto public java.lang.String org.kitodo.mediaserver.ui.works.WorkController.action(java.util.List<java.lang.String>,java.lang.String,java.util.Map<java.lang.String, java.lang.String>,org.springframework.web.servlet.mvc.support.RedirectAttributes)
2020-04-12 20:11:09.285  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerMapping : Mapped "{[/works]}" onto public java.lang.String org.kitodo.mediaserver.ui.works.WorkController.list(org.springframework.ui.Model,org.springframework.data.domain.Pageable,java.lang.String,java.lang.String,java.lang.String)
2020-04-12 20:11:09.323  INFO 436948 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/login] onto handler of type [class org.springframework.web.servlet.mvc.ParameterizableViewController]
2020-04-12 20:11:09.353  INFO 436948 --- [           main] o.s.w.s.handler.SimpleUrlHandlerMapping  : Mapped URL path [/static/**] onto handler of type [class org.springframework.web.servlet.resource.ResourceHttpRequestHandler]
2020-04-12 20:11:09.401  INFO 436948 --- [           main] s.w.s.m.m.a.RequestMappingHandlerAdapter : Looking for @ControllerAdvice: org.springframework.web.context.support.GenericWebApplicationContext@55d1f065: startup date [Sun Apr 12 20:11:07 CEST 2020]; root of context hierarchy
2020-04-12 20:11:09.440  INFO 436948 --- [           main] .m.m.a.ExceptionHandlerExceptionResolver : Detected @ExceptionHandler methods in uiErrorController
2020-04-12 20:11:09.705  INFO 436948 --- [           main] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring FrameworkServlet ''
2020-04-12 20:11:09.706  INFO 436948 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization started
2020-04-12 20:11:09.713  INFO 436948 --- [           main] o.s.t.web.servlet.TestDispatcherServlet  : FrameworkServlet '': initialization completed in 6 ms
2020-04-12 20:11:09.800  INFO 436948 --- [           main] o.k.m.ui.users.UserControllerTest        : Started UserControllerTest in 2.012 seconds (JVM running for 13.953)
2020-04-12 20:11:09.827  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@1450ffa3, testMethod = testEditForm@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
2020-04-12 20:11:09.844  INFO 436948 --- [           main] o.h.h.i.QueryTranslatorFactoryInitiator  : HHH000397: Using ASTQueryTranslatorFactory
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select count(*) as col_0_0_ from user user0_
2020-04-12 20:11:09.883  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@1450ffa3, testMethod = testEditForm@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:09.901  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@3d59933, testMethod = testCreateSubmit@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select user0_.username as username1_3_0_, user0_.enabled as enabled2_3_0_, user0_.name as name3_3_0_, user0_.password as password4_3_0_ from user user0_ where user0_.username=?
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
2020-04-12 20:11:10.231  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@3d59933, testMethod = testCreateSubmit@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:10.235  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@9cc0505, testMethod = testList@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ order by user0_.username asc
Hibernate: select count(*) as col_0_0_ from user user0_
2020-04-12 20:11:10.266  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@9cc0505, testMethod = testList@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:10.269  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@60bc308b, testMethod = testEditDisableYourself@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select user0_.username as username1_3_0_, user0_.enabled as enabled2_3_0_, user0_.name as name3_3_0_, user0_.password as password4_3_0_ from user user0_ where user0_.username=?
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:10.494  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@60bc308b, testMethod = testEditDisableYourself@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:10.497  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@1df06ecd, testMethod = testEditSubmit@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select user0_.username as username1_3_0_, user0_.enabled as enabled2_3_0_, user0_.name as name3_3_0_, user0_.password as password4_3_0_ from user user0_ where user0_.username=?
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: update user set enabled=?, name=?, password=? where username=?
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:10.968  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@1df06ecd, testMethod = testEditSubmit@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:10.970  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@56f72909, testMethod = testDelete@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
Hibernate: delete from user where username=?
Hibernate: select count(*) as col_0_0_ from user user0_
2020-04-12 20:11:11.006  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@56f72909, testMethod = testDelete@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:11.009  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@1fa18f87, testMethod = deleteYourself@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from user user0_
Hibernate: select count(*) as col_0_0_ from user user0_
2020-04-12 20:11:11.023  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@62360a68 testClass = UserControllerTest, testInstance = org.kitodo.mediaserver.ui.users.UserControllerTest@1fa18f87, testMethod = deleteYourself@UserControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@4e756867 testClass = UserControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@38ebc866 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
[INFO] Tests run: 7, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.272 s - in org.kitodo.mediaserver.ui.users.UserControllerTest
[INFO] Running org.kitodo.mediaserver.ui.LoginControllerTest
2020-04-12 20:11:11.040  INFO 436948 --- [           main] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [org.kitodo.mediaserver.ui.LoginControllerTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2020-04-12 20:11:11.062  INFO 436948 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener, org.springframework.security.test.context.support.ReactorContextTestExecutionListener]
2020-04-12 20:11:11.062  INFO 436948 --- [           main] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@5eee3da9, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@ace2408, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@3573e19d, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@5c1dd18, org.springframework.test.context.support.DirtiesContextTestExecutionListener@2a6dbb7c, org.springframework.test.context.transaction.TransactionalTestExecutionListener@5178345d, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@7b2d58e6, org.springframework.security.test.context.support.WithSecurityContextTestExecutionListener@708f7386, org.springframework.security.test.context.support.ReactorContextTestExecutionListener@377e90b0, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@27b490de, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@36cf16a6, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@3dd750ba, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@7eefaca0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7d5ef1c3]
2020-04-12 20:11:11.073  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@4f4d05b3, testMethod = loginWithWrongPassword@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:11.561  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@4f4d05b3, testMethod = loginWithWrongPassword@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:11.572  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@69c1ea07, testMethod = loginWithOtherUsersPassword@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:11.856  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@69c1ea07, testMethod = loginWithOtherUsersPassword@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:11.873  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@3b25709e, testMethod = loginSuccessfully@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:12.427  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@3b25709e, testMethod = loginSuccessfully@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:12.439  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@4583b617, testMethod = loginWithUnknownUser@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:12.940  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@4583b617, testMethod = loginWithUnknownUser@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
2020-04-12 20:11:12.945  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@3df04fa1, testMethod = loginWithEmptyPassword@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@16f4a3c0]; rollback [true]
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: insert into user (enabled, name, password, username) values (?, ?, ?, ?)
Hibernate: select user0_.username as username1_3_, user0_.enabled as enabled2_3_, user0_.name as name3_3_, user0_.password as password4_3_ from user user0_ where user0_.username=?
2020-04-12 20:11:13.358  INFO 436948 --- [           main] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@11309dd4 testClass = LoginControllerTest, testInstance = org.kitodo.mediaserver.ui.LoginControllerTest@3df04fa1, testMethod = loginWithEmptyPassword@LoginControllerTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@2bd4780c testClass = LoginControllerTest, locations = '{}', classes = '{class org.kitodo.mediaserver.ui.config.WebMvcConfiguration}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[[ImportsContextCustomizer@2c154508 key = [org.springframework.boot.test.autoconfigure.web.servlet.MockMvcAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcSecurityAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebClientAutoConfiguration, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcWebDriverAutoConfiguration, org.springframework.boot.autoconfigure.cache.CacheAutoConfiguration, org.springframework.boot.autoconfigure.data.jpa.JpaRepositoriesAutoConfiguration, org.springframework.boot.autoconfigure.flyway.FlywayAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.DataSourceTransactionManagerAutoConfiguration, org.springframework.boot.autoconfigure.jdbc.JdbcTemplateAutoConfiguration, org.springframework.boot.autoconfigure.liquibase.LiquibaseAutoConfiguration, org.springframework.boot.autoconfigure.orm.jpa.HibernateJpaAutoConfiguration, org.springframework.boot.autoconfigure.transaction.TransactionAutoConfiguration, org.springframework.boot.test.autoconfigure.jdbc.TestDatabaseAutoConfiguration, org.springframework.boot.test.autoconfigure.orm.jpa.TestEntityManagerAutoConfiguration]], org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@262b2c86, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@50d0686, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0, org.springframework.boot.test.web.client.TestRestTemplateContextCustomizer@2db7a79b, org.springframework.boot.test.autoconfigure.OverrideAutoConfigurationContextCustomizerFactory$DisableAutoConfigurationContextCustomizer@52f759d7, org.springframework.boot.test.autoconfigure.filter.TypeExcludeFiltersContextCustomizer@351584c0, org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@e72492d2, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@18bf3d14], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]], attributes = map['org.springframework.test.context.web.ServletTestExecutionListener.activateListener' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.populatedRequestContextHolder' -> true, 'org.springframework.test.context.web.ServletTestExecutionListener.resetRequestContextHolder' -> true]].
[INFO] Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.328 s - in org.kitodo.mediaserver.ui.LoginControllerTest
2020-04-12 20:11:13.366  INFO 436948 --- [       Thread-3] o.s.w.c.s.GenericWebApplicationContext   : Closing org.springframework.web.context.support.GenericWebApplicationContext@3214ee6: startup date [Sun Apr 12 20:10:58 CEST 2020]; root of context hierarchy
2020-04-12 20:11:13.416  INFO 436948 --- [       Thread-5] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
2020-04-12 20:11:13.420  INFO 436948 --- [       Thread-3] .SchemaDropperImpl$DelayedDropActionImpl : HHH000477: Starting delayed drop of schema as part of SessionFactory shut-down'
Hibernate: drop table action_parameter if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
Hibernate: drop table action_data if exists
Hibernate: drop table collection if exists
Hibernate: drop table user if exists
Hibernate: drop table work if exists
Hibernate: drop table work_collection if exists
[INFO] 
[INFO] Results:
[INFO] 
[ERROR] Failures: 
[ERROR]   WorkControllerTest.testSearchWork:131 Model attribute 'page'
Expected: hasProperty("content", a collection with size <1>)
     but: property 'content' collection size was <0>
[INFO] 
[ERROR] Tests run: 17, Failures: 1, Errors: 0, Skipped: 0
[INFO] 
[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] kitodo-mediaserver ................................. SUCCESS [  0.009 s]
[INFO] kitodo-mediaserver-core ............................ SUCCESS [ 21.574 s]
[INFO] kitodo-mediaserver-fileserver ...................... SUCCESS [  0.202 s]
[INFO] kitodo-mediaserver-importer ........................ SUCCESS [ 10.114 s]
[INFO] kitodo-mediaserver-cli ............................. SUCCESS [  0.081 s]
[INFO] kitodo-mediaserver-ui .............................. FAILURE [ 18.307 s]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 51.444 s
[INFO] Finished at: 2020-04-12T20:11:13+02:00
[INFO] Final Memory: 31M/75M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project kitodo-mediaserver-ui: There are test failures.
[ERROR] 
[ERROR] Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-ui/target/surefire-reports for the individual test results.
[ERROR] Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
[ERROR] -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.20.1:test (default-test) on project kitodo-mediaserver-ui: There are test failures.

Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-ui/target/surefire-reports for the individual test results.
Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.MojoFailureException: There are test failures.

Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-ponchofiesta-kitodo-mediaserver-415465074-20180813-160957-firstCommit/kitodo-mediaserver-ui/target/surefire-reports for the individual test results.
Please refer to dump files (if any exist) [date]-jvmRun[N].dump, [date].dumpstream and [date]-jvmRun[N].dumpstream.
	at org.apache.maven.plugin.surefire.SurefireHelper.throwException(SurefireHelper.java:240)
	at org.apache.maven.plugin.surefire.SurefireHelper.reportExecution(SurefireHelper.java:112)
	at org.apache.maven.plugin.surefire.SurefirePlugin.handleSummary(SurefirePlugin.java:354)
	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:984)
	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:832)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
	... 20 more
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :kitodo-mediaserver-ui
