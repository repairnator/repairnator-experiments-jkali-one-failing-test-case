[main] INFO org.knowm.xchange.anx.v2.ANXExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.anx.v2.ANXExchange - No remote initialization implemented for ANXPRO. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.anx.v2.ANXExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.anx.v2.ANXExchange - No remote initialization implemented for ANXPRO. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bitmarket.BitMarketExchange - No remote initialization implemented for Bitmarket. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] WARN org.knowm.xchange.dto.account.Balance - 15.49843675 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 13.98901996
[main] WARN org.knowm.xchange.dto.account.Balance - 15.49843675 = total != available + frozen - borrowed + loaned + withdrawing + depositing = 13.98901996
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.bleutrade.BleutradeExchange - Calling Remote Init...
[main] WARN org.knowm.xchange.btce.v3.ExchangeUtils - No v3/exchangeConfiguration.json file found. Returning null exchange.
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - Calling Remote Init...
[main] INFO org.knowm.xchange.btcmarkets.BTCMarketsExchange - No remote initialization implemented for BTCMarkets. The exchange meta data for this exchange is loaded from a json file containing hard-coded exchange meta-data. This may or may not be OK for you, and you should understand exactly how this works. Each exchange can either 1) rely on the hard-coded json file that comes packaged with XChange's jar, 2) provide your own override json file, 3) properly implement the `remoteInit()` method for the exchange (please submit a pull request so the whole community can benefit) or 4) a combination of hard-coded JSON and remote API calls. For more info see: https://github.com/timmolter/XChange/wiki/Design-Notes#exchange-metadata
                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building XChange Blockchain 4.2.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ xchange-blockchain ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ xchange-blockchain ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ xchange-blockchain ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ xchange-blockchain ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ xchange-blockchain ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-blockchain/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.knowm.xchange.blockchain.AddressJSONTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.576 sec - in org.knowm.xchange.blockchain.AddressJSONTest

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building XChange BTC38 4.2.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ xchange-btc38 ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ xchange-btc38 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ xchange-btc38 ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ xchange-btc38 ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ xchange-btc38 ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btc38/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.knowm.xchange.btc38.Btc38AdapterTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.515 sec - in org.knowm.xchange.btc38.Btc38AdapterTest

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building XChange BTCC 4.2.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ xchange-btcc ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] skip non existing resourceDirectory /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcc/src/main/resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ xchange-btcc ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ xchange-btcc ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ xchange-btcc ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ xchange-btcc ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcc/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.knowm.xchange.btcc.MarketDataTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.507 sec - in org.knowm.xchange.btcc.MarketDataTest

Results :

Tests run: 1, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building XChange BTC China 4.2.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ xchange-btcchina ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 2 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ xchange-btcchina ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ xchange-btcchina ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 20 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ xchange-btcchina ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ xchange-btcchina ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcchina/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.knowm.xchange.btcchina.dto.account.response.BTCChinaGetWalletResponseTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.53 sec - in org.knowm.xchange.btcchina.dto.account.response.BTCChinaGetWalletResponseTest
Running org.knowm.xchange.btcchina.dto.account.request.BTCChinaRequestWithdrawalRequestTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.knowm.xchange.btcchina.dto.account.request.BTCChinaRequestWithdrawalRequestTest
Running org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetMarketDepthResponseTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec - in org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetMarketDepthResponseTest
Running org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetIcebergOrderResponseTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec - in org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetIcebergOrderResponseTest
Running org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetOrdersResponseTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.037 sec - in org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetOrdersResponseTest
Running org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetOrderResponseTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.019 sec - in org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetOrderResponseTest
Running org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetIcebergOrdersResponseTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec - in org.knowm.xchange.btcchina.dto.trade.response.BTCChinaGetIcebergOrdersResponseTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaGetOrdersRequestTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaGetOrdersRequestTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaTransactionsRequestTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaTransactionsRequestTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaOrderRequestTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaOrderRequestTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaBuyOrderRequestTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.009 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaBuyOrderRequestTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaGetOrderRequestTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaGetOrderRequestTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaSellOrderRequestTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaSellOrderRequestTest
Running org.knowm.xchange.btcchina.dto.trade.request.BTCChinaGetMarketDepthRequestTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.004 sec - in org.knowm.xchange.btcchina.dto.trade.request.BTCChinaGetMarketDepthRequestTest
Running org.knowm.xchange.btcchina.dto.marketdata.BTCChinaTickerTest
Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.013 sec - in org.knowm.xchange.btcchina.dto.marketdata.BTCChinaTickerTest
Running org.knowm.xchange.btcchina.service.fix.BTCChinaFIXAdaptersTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.057 sec - in org.knowm.xchange.btcchina.service.fix.BTCChinaFIXAdaptersTest
Running org.knowm.xchange.btcchina.BTCChinaAdaptersTest
Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.083 sec - in org.knowm.xchange.btcchina.BTCChinaAdaptersTest

Results :

Tests run: 30, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building XChange BTCE 4.2.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ xchange-btce ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ xchange-btce ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ xchange-btce ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 19 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ xchange-btce ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ xchange-btce ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btce/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.knowm.xchange.btce.v3.service.TransHistoryFetchIntegrationTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.448 sec - in org.knowm.xchange.btce.v3.service.TransHistoryFetchIntegrationTest
Running org.knowm.xchange.btce.v3.dto.trade.BTCETradeDataJSONTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.139 sec - in org.knowm.xchange.btce.v3.dto.trade.BTCETradeDataJSONTest
Running org.knowm.xchange.btce.v3.dto.trade.BTCETransHistoryJSONTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.011 sec - in org.knowm.xchange.btce.v3.dto.trade.BTCETransHistoryJSONTest
Running org.knowm.xchange.btce.v3.dto.trade.BTCETradeHistoryJSONTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec - in org.knowm.xchange.btce.v3.dto.trade.BTCETradeHistoryJSONTest
Running org.knowm.xchange.btce.v3.dto.marketdata.BTCETradesJSONTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.045 sec - in org.knowm.xchange.btce.v3.dto.marketdata.BTCETradesJSONTest
Running org.knowm.xchange.btce.v3.dto.marketdata.BTCEDepthJSONTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.015 sec - in org.knowm.xchange.btce.v3.dto.marketdata.BTCEDepthJSONTest
Running org.knowm.xchange.btce.v3.dto.marketdata.BTCETickerJSONTest
2013-11-23 11:13:39
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.544 sec - in org.knowm.xchange.btce.v3.dto.marketdata.BTCETickerJSONTest
Running org.knowm.xchange.btce.v3.dto.account.BTCEWalletJSONTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.039 sec - in org.knowm.xchange.btce.v3.dto.account.BTCEWalletJSONTest
Running org.knowm.xchange.btce.v3.BTCEExchangeTest
Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.004 sec - in org.knowm.xchange.btce.v3.BTCEExchangeTest
Running org.knowm.xchange.btce.v3.BTCEAdapterTest
Tests run: 5, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.077 sec - in org.knowm.xchange.btce.v3.BTCEAdapterTest

Results :

Tests run: 18, Failures: 0, Errors: 0, Skipped: 0

[INFO]                                                                         
[INFO] ------------------------------------------------------------------------
[INFO] Building XChange BTCMarkets 4.2.2-SNAPSHOT
[INFO] ------------------------------------------------------------------------
[INFO] 
[INFO] --- maven-resources-plugin:2.6:resources (default-resources) @ xchange-btcmarkets ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 1 resource
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:compile (default-compile) @ xchange-btcmarkets ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-resources-plugin:2.6:testResources (default-testResources) @ xchange-btcmarkets ---
[INFO] Using 'UTF-8' encoding to copy filtered resources.
[INFO] Copying 16 resources
[INFO] 
[INFO] --- maven-compiler-plugin:3.6.1:testCompile (default-testCompile) @ xchange-btcmarkets ---
[INFO] Nothing to compile - all classes are up to date
[INFO] 
[INFO] --- maven-surefire-plugin:2.17:test (default-test) @ xchange-btcmarkets ---
[INFO] Surefire report directory: /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcmarkets/target/surefire-reports

-------------------------------------------------------
 T E S T S
-------------------------------------------------------
Running org.knowm.xchange.btcmarkets.dto.BTCMarketsAdaptersTest
Tests run: 5, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.665 sec <<< FAILURE! - in org.knowm.xchange.btcmarkets.dto.BTCMarketsAdaptersTest
shouldAdaptTradeHistory(org.knowm.xchange.btcmarkets.dto.BTCMarketsAdaptersTest)  Time elapsed: 0.026 sec  <<< FAILURE!
org.junit.ComparisonFailure: expected:<[AUD]> but was:<[BTC]>
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at org.knowm.xchange.btcmarkets.dto.BTCMarketsAdaptersTest.shouldAdaptTradeHistory(BTCMarketsAdaptersTest.java:92)

Running org.knowm.xchange.btcmarkets.dto.BTCMarketsDtoTest
Tests run: 13, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.067 sec - in org.knowm.xchange.btcmarkets.dto.BTCMarketsDtoTest
Running org.knowm.xchange.btcmarkets.service.BTCMarketsTradeServiceTest
Tests run: 4, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.678 sec - in org.knowm.xchange.btcmarkets.service.BTCMarketsTradeServiceTest
Running org.knowm.xchange.btcmarkets.service.BTCMarketsAccountServiceTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.408 sec - in org.knowm.xchange.btcmarkets.service.BTCMarketsAccountServiceTest
Running org.knowm.xchange.btcmarkets.service.BTCMarketsTradeServiceHistoryParamsTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.003 sec - in org.knowm.xchange.btcmarkets.service.BTCMarketsTradeServiceHistoryParamsTest
Running org.knowm.xchange.btcmarkets.service.BTCMarketsDigestTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.896 sec - in org.knowm.xchange.btcmarkets.service.BTCMarketsDigestTest
Running org.knowm.xchange.btcmarkets.service.BTCMarketsMarketDataServiceTest
Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.258 sec - in org.knowm.xchange.btcmarkets.service.BTCMarketsMarketDataServiceTest
Running org.knowm.xchange.btcmarkets.BTCMarketsExchangeTest
Tests run: 8, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.177 sec - in org.knowm.xchange.btcmarkets.BTCMarketsExchangeTest

Results :

Failed tests: 
  BTCMarketsAdaptersTest.shouldAdaptTradeHistory:92 expected:<[AUD]> but was:<[BTC]>

Tests run: 42, Failures: 1, Errors: 0, Skipped: 0

[INFO] ------------------------------------------------------------------------
[INFO] Reactor Summary:
[INFO] 
[INFO] XChange ............................................ SUCCESS [  0.270 s]
[INFO] XChange Core ....................................... SUCCESS [  4.902 s]
[INFO] XChange ANX ........................................ SUCCESS [  2.700 s]
[INFO] XChange Bitbay ..................................... SUCCESS [  1.840 s]
[INFO] XChange BitcoinAverage ............................. SUCCESS [  1.533 s]
[INFO] XChange Bitcoin Charts ............................. SUCCESS [  0.075 s]
[INFO] XChange Bitcoin Core ............................... SUCCESS [  1.311 s]
[INFO] XChange Bitcoin.de ................................. SUCCESS [  1.447 s]
[INFO] XChange Bitcoinium ................................. SUCCESS [  1.398 s]
[INFO] XChange Bitcurex ................................... SUCCESS [  1.538 s]
[INFO] XChange BitFinex ................................... SUCCESS [  1.496 s]
[INFO] XChange Bitcoin Bitmarket .......................... SUCCESS [  7.360 s]
[INFO] XChange Bitso ...................................... SUCCESS [  0.045 s]
[INFO] XChange Bitstamp ................................... SUCCESS [  1.686 s]
[INFO] XChange Bittrex .................................... SUCCESS [  0.063 s]
[INFO] XChange Bleutrade .................................. SUCCESS [ 40.234 s]
[INFO] XChange Blockchain ................................. SUCCESS [  1.634 s]
[INFO] XChange BTC38 ...................................... SUCCESS [  1.478 s]
[INFO] XChange BTCC ....................................... SUCCESS [  1.390 s]
[INFO] XChange BTC China .................................. SUCCESS [  2.922 s]
[INFO] XChange BTCE ....................................... SUCCESS [  5.378 s]
[INFO] XChange BTCMarkets ................................. FAILURE [  8.229 s]
[INFO] XChange BtcTrade ................................... SKIPPED
[INFO] XChange BTER ....................................... SKIPPED
[INFO] XChange CampBX ..................................... SKIPPED
[INFO] XChange C-Cex ...................................... SKIPPED
[INFO] XChange Cex.io ..................................... SKIPPED
[INFO] XChange CHBTC ...................................... SKIPPED
[INFO] XChange Coinbase ................................... SKIPPED
[INFO] XChange Coinfloor .................................. SKIPPED
[INFO] XChange Coinmate ................................... SKIPPED
[INFO] XChange CryptoFacilities ........................... SKIPPED
[INFO] XChange Cryptonit .................................. SKIPPED
[INFO] XChange EmpoEX ..................................... SKIPPED
[INFO] XChange Open Exchange Rates ........................ SKIPPED
[INFO] XChange Kraken ..................................... SKIPPED
[INFO] XChange GDAX ....................................... SKIPPED
[INFO] XChange ItBit ...................................... SKIPPED
[INFO] XChange Independent Reserve ........................ SKIPPED
[INFO] XChange LakeBTC .................................... SKIPPED
[INFO] XChange Hitbtc ..................................... SKIPPED
[INFO] XChange Paymium .................................... SKIPPED
[INFO] XChange Poloniex ................................... SKIPPED
[INFO] XChange OKCoin ..................................... SKIPPED
[INFO] XChange Mercado Bitcoin ............................ SKIPPED
[INFO] XChange Jubi ....................................... SKIPPED
[INFO] XChange taurus ..................................... SKIPPED
[INFO] XChange Quoine ..................................... SKIPPED
[INFO] XChange Ripple ..................................... SKIPPED
[INFO] XChange The Rock Trading ........................... SKIPPED
[INFO] XChange Gatecoin ................................... SKIPPED
[INFO] XChange BitVC ...................................... SKIPPED
[INFO] XChange Vircurex ................................... SKIPPED
[INFO] XChange Livecoin ................................... SKIPPED
[INFO] XChange YoBit ...................................... SKIPPED
[INFO] XChange DSX ........................................ SKIPPED
[INFO] XChange Cryptopia .................................. SKIPPED
[INFO] XChange Examples ................................... SKIPPED
[INFO] XChange Gemini ..................................... SKIPPED
[INFO] XChange Luno ....................................... SKIPPED
[INFO] XChange QuadrigaCx ................................. SKIPPED
[INFO] XChange Bitcoin Core ............................... SKIPPED
[INFO] XChange Vaultoro ................................... SKIPPED
[INFO] ------------------------------------------------------------------------
[INFO] BUILD FAILURE
[INFO] ------------------------------------------------------------------------
[INFO] Total time: 01:30 min
[INFO] Finished at: 2020-02-16T18:35:31+01:00
[INFO] Final Memory: 22M/67M
[INFO] ------------------------------------------------------------------------
[ERROR] Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.17:test (default-test) on project xchange-btcmarkets: There are test failures.
[ERROR] 
[ERROR] Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcmarkets/target/surefire-reports for the individual test results.
[ERROR] -> [Help 1]
org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-surefire-plugin:2.17:test (default-test) on project xchange-btcmarkets: There are test failures.

Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcmarkets/target/surefire-reports for the individual test results.
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:212)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
	at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
	at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
	at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:128)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:307)
	at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:193)
	at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:106)
	at org.apache.maven.cli.MavenCli.execute(MavenCli.java:863)
	at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:288)
	at org.apache.maven.cli.MavenCli.main(MavenCli.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
	at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
	at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
	at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: org.apache.maven.plugin.MojoFailureException: There are test failures.

Please refer to /scratch/dginelli/workspace/repairnator-repairnator-experiments-timmolter-XChange-264292127-20170814-113805_bugonly-firstCommit/xchange-btcmarkets/target/surefire-reports for the individual test results.
	at org.apache.maven.plugin.surefire.SurefireHelper.reportExecution(SurefireHelper.java:82)
	at org.apache.maven.plugin.surefire.SurefirePlugin.handleSummary(SurefirePlugin.java:195)
	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.executeAfterPreconditionsChecked(AbstractSurefireMojo.java:861)
	at org.apache.maven.plugin.surefire.AbstractSurefireMojo.execute(AbstractSurefireMojo.java:729)
	at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:134)
	at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:207)
	... 20 more
[ERROR] 
[ERROR] Re-run Maven using the -X switch to enable full debug logging.
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoFailureException
[ERROR] 
[ERROR] After correcting the problems, you can resume the build with the command
[ERROR]   mvn <goals> -rf :xchange-btcmarkets
