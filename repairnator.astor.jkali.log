[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 22
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/1.4.1.RELEASE/spring-boot-starter-thymeleaf-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter/1.4.1.RELEASE/spring-boot-starter-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot/1.4.1.RELEASE/spring-boot-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/1.4.1.RELEASE/spring-boot-autoconfigure-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-logging/1.4.1.RELEASE/spring-boot-starter-logging-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.7/logback-classic-1.1.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ch/qos/logback/logback-core/1.1.7/logback-core-1.1.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/jul-to-slf4j/1.7.21/jul-to-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/log4j-over-slf4j/1.7.21/log4j-over-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-core/4.3.3.RELEASE/spring-core-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-web/1.4.1.RELEASE/spring-boot-starter-web-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-validator/5.2.4.Final/hibernate-validator-5.2.4.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-web/4.3.3.RELEASE/spring-web-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-webmvc/4.3.3.RELEASE/spring-webmvc-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/thymeleaf/thymeleaf-spring4/2.1.5.RELEASE/thymeleaf-spring4-2.1.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/thymeleaf/thymeleaf/2.1.5.RELEASE/thymeleaf-2.1.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ognl/ognl/3.0.8/ognl-3.0.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/unbescape/unbescape/1.1.0.RELEASE/unbescape-1.1.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/1.4.0/thymeleaf-layout-dialect-1.4.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/codehaus/groovy/groovy/2.4.7/groovy-2.4.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-data-jpa/1.4.1.RELEASE/spring-boot-starter-data-jpa-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-aop/1.4.1.RELEASE/spring-boot-starter-aop-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/aspectj/aspectjweaver/1.8.9/aspectjweaver-1.8.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-jdbc/1.4.1.RELEASE/spring-boot-starter-jdbc-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/tomcat-jdbc/8.5.5/tomcat-jdbc-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/tomcat-juli/8.5.5/tomcat-juli-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-jdbc/4.3.3.RELEASE/spring-jdbc-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-core/5.0.11.Final/hibernate-core-5.0.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-entitymanager/5.0.11.Final/hibernate-entitymanager-5.0.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/data/spring-data-jpa/1.10.3.RELEASE/spring-data-jpa-1.10.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/data/spring-data-commons/1.12.3.RELEASE/spring-data-commons-1.12.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-orm/4.3.3.RELEASE/spring-orm-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-context/4.3.3.RELEASE/spring-context-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-tx/4.3.3.RELEASE/spring-tx-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-beans/4.3.3.RELEASE/spring-beans-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.21/jcl-over-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-aspects/4.3.3.RELEASE/spring-aspects-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-security/1.4.1.RELEASE/spring-boot-starter-security-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-aop/4.3.3.RELEASE/spring-aop-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-config/4.1.3.RELEASE/spring-security-config-4.1.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-core/4.1.3.RELEASE/spring-security-core-4.1.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-web/4.1.3.RELEASE/spring-security-web-4.1.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-expression/4.3.3.RELEASE/spring-expression-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/webjars-locator/0.32/webjars-locator-0.32.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/webjars-locator-core/0.30/webjars-locator-core-0.30.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/commons/commons-compress/1.9/commons-compress-1.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.3/jackson-databind-2.8.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.3/jackson-annotations-2.8.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.3/jackson-core-2.8.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/jquery/3.2.1/jquery-3.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hsqldb/hsqldb/2.3.3/hsqldb-2.3.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-tomcat/1.4.1.RELEASE/spring-boot-starter-tomcat-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.5/tomcat-embed-core-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.5/tomcat-embed-el-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.5/tomcat-embed-websocket-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/opengis/cite/xerces/xercesImpl-xsd11/2.12-beta-r1667115/xercesImpl-xsd11-2.12-beta-r1667115.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/opengis/cite/eclipse/webtools/sse/org.eclipse.wst.xml.xpath2.processor/1.1.5-738bb7b85d/org.eclipse.wst.xml.xpath2.processor-1.1.5-738bb7b85d.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/edu/princeton/cup/java-cup/10k/java-cup-10k.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 228200 milliseconds (228 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/1.4.1.RELEASE/spring-boot-starter-thymeleaf-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter/1.4.1.RELEASE/spring-boot-starter-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot/1.4.1.RELEASE/spring-boot-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/1.4.1.RELEASE/spring-boot-autoconfigure-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-logging/1.4.1.RELEASE/spring-boot-starter-logging-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.7/logback-classic-1.1.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ch/qos/logback/logback-core/1.1.7/logback-core-1.1.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/jul-to-slf4j/1.7.21/jul-to-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/log4j-over-slf4j/1.7.21/log4j-over-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-core/4.3.3.RELEASE/spring-core-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-web/1.4.1.RELEASE/spring-boot-starter-web-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-validator/5.2.4.Final/hibernate-validator-5.2.4.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-web/4.3.3.RELEASE/spring-web-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-webmvc/4.3.3.RELEASE/spring-webmvc-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/thymeleaf/thymeleaf-spring4/2.1.5.RELEASE/thymeleaf-spring4-2.1.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/thymeleaf/thymeleaf/2.1.5.RELEASE/thymeleaf-2.1.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ognl/ognl/3.0.8/ognl-3.0.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/unbescape/unbescape/1.1.0.RELEASE/unbescape-1.1.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/1.4.0/thymeleaf-layout-dialect-1.4.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/codehaus/groovy/groovy/2.4.7/groovy-2.4.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-data-jpa/1.4.1.RELEASE/spring-boot-starter-data-jpa-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-aop/1.4.1.RELEASE/spring-boot-starter-aop-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/aspectj/aspectjweaver/1.8.9/aspectjweaver-1.8.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-jdbc/1.4.1.RELEASE/spring-boot-starter-jdbc-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/tomcat-jdbc/8.5.5/tomcat-jdbc-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/tomcat-juli/8.5.5/tomcat-juli-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-jdbc/4.3.3.RELEASE/spring-jdbc-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-core/5.0.11.Final/hibernate-core-5.0.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-entitymanager/5.0.11.Final/hibernate-entitymanager-5.0.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/data/spring-data-jpa/1.10.3.RELEASE/spring-data-jpa-1.10.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/data/spring-data-commons/1.12.3.RELEASE/spring-data-commons-1.12.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-orm/4.3.3.RELEASE/spring-orm-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-context/4.3.3.RELEASE/spring-context-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-tx/4.3.3.RELEASE/spring-tx-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-beans/4.3.3.RELEASE/spring-beans-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.21/jcl-over-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-aspects/4.3.3.RELEASE/spring-aspects-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-security/1.4.1.RELEASE/spring-boot-starter-security-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-aop/4.3.3.RELEASE/spring-aop-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-config/4.1.3.RELEASE/spring-security-config-4.1.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-core/4.1.3.RELEASE/spring-security-core-4.1.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-web/4.1.3.RELEASE/spring-security-web-4.1.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-expression/4.3.3.RELEASE/spring-expression-4.3.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/webjars-locator/0.32/webjars-locator-0.32.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/webjars-locator-core/0.30/webjars-locator-core-0.30.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/commons/commons-compress/1.9/commons-compress-1.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.3/jackson-databind-2.8.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.3/jackson-annotations-2.8.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.3/jackson-core-2.8.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/jquery/3.2.1/jquery-3.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hsqldb/hsqldb/2.3.3/hsqldb-2.3.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-tomcat/1.4.1.RELEASE/spring-boot-starter-tomcat-1.4.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.5/tomcat-embed-core-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.5/tomcat-embed-el-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.5/tomcat-embed-websocket-8.5.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/opengis/cite/xerces/xercesImpl-xsd11/2.12-beta-r1667115/xercesImpl-xsd11-2.12-beta-r1667115.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/opengis/cite/eclipse/webtools/sse/org.eclipse.wst.xml.xpath2.processor/1.1.5-738bb7b85d/org.eclipse.wst.xml.xpath2.processor-1.1.5-738bb7b85d.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/edu/princeton/cup/java-cup/10k/java-cup-10k.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 110
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 722
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 722,  706
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 706
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 706, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 228200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-thymeleaf/1.4.1.RELEASE/spring-boot-starter-thymeleaf-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter/1.4.1.RELEASE/spring-boot-starter-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot/1.4.1.RELEASE/spring-boot-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/1.4.1.RELEASE/spring-boot-autoconfigure-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-logging/1.4.1.RELEASE/spring-boot-starter-logging-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.7/logback-classic-1.1.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ch/qos/logback/logback-core/1.1.7/logback-core-1.1.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/jul-to-slf4j/1.7.21/jul-to-slf4j-1.7.21.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/log4j-over-slf4j/1.7.21/log4j-over-slf4j-1.7.21.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-core/4.3.3.RELEASE/spring-core-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-web/1.4.1.RELEASE/spring-boot-starter-web-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-validator/5.2.4.Final/hibernate-validator-5.2.4.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/classmate/1.3.1/classmate-1.3.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-web/4.3.3.RELEASE/spring-web-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-webmvc/4.3.3.RELEASE/spring-webmvc-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/thymeleaf/thymeleaf-spring4/2.1.5.RELEASE/thymeleaf-spring4-2.1.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/thymeleaf/thymeleaf/2.1.5.RELEASE/thymeleaf-2.1.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/ognl/ognl/3.0.8/ognl-3.0.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/unbescape/unbescape/1.1.0.RELEASE/unbescape-1.1.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/slf4j-api/1.7.21/slf4j-api-1.7.21.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/nz/net/ultraq/thymeleaf/thymeleaf-layout-dialect/1.4.0/thymeleaf-layout-dialect-1.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/codehaus/groovy/groovy/2.4.7/groovy-2.4.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-data-jpa/1.4.1.RELEASE/spring-boot-starter-data-jpa-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-aop/1.4.1.RELEASE/spring-boot-starter-aop-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/aspectj/aspectjweaver/1.8.9/aspectjweaver-1.8.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-jdbc/1.4.1.RELEASE/spring-boot-starter-jdbc-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/tomcat-jdbc/8.5.5/tomcat-jdbc-8.5.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/tomcat-juli/8.5.5/tomcat-juli-8.5.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-jdbc/4.3.3.RELEASE/spring-jdbc-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-core/5.0.11.Final/hibernate-core-5.0.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/jboss/logging/jboss-logging/3.3.0.Final/jboss-logging-3.3.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/javax/persistence/hibernate-jpa-2.1-api/1.0.0.Final/hibernate-jpa-2.1-api-1.0.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/antlr/antlr/2.7.7/antlr-2.7.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/jboss/jandex/2.0.0.Final/jandex-2.0.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/dom4j/dom4j/1.6.1/dom4j-1.6.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/common/hibernate-commons-annotations/5.0.1.Final/hibernate-commons-annotations-5.0.1.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hibernate/hibernate-entitymanager/5.0.11.Final/hibernate-entitymanager-5.0.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/javax/transaction/javax.transaction-api/1.2/javax.transaction-api-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/data/spring-data-jpa/1.10.3.RELEASE/spring-data-jpa-1.10.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/data/spring-data-commons/1.12.3.RELEASE/spring-data-commons-1.12.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-orm/4.3.3.RELEASE/spring-orm-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-context/4.3.3.RELEASE/spring-context-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-tx/4.3.3.RELEASE/spring-tx-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-beans/4.3.3.RELEASE/spring-beans-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.21/jcl-over-slf4j-1.7.21.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-aspects/4.3.3.RELEASE/spring-aspects-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-security/1.4.1.RELEASE/spring-boot-starter-security-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-aop/4.3.3.RELEASE/spring-aop-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-config/4.1.3.RELEASE/spring-security-config-4.1.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-core/4.1.3.RELEASE/spring-security-core-4.1.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/security/spring-security-web/4.1.3.RELEASE/spring-security-web-4.1.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/spring-expression/4.3.3.RELEASE/spring-expression-4.3.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/webjars-locator/0.32/webjars-locator-0.32.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/webjars-locator-core/0.30/webjars-locator-core-0.30.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/commons/commons-lang3/3.1/commons-lang3-3.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/commons/commons-compress/1.9/commons-compress-1.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.3/jackson-databind-2.8.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.3/jackson-annotations-2.8.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.3/jackson-core-2.8.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/webjars/jquery/3.2.1/jquery-3.2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hsqldb/hsqldb/2.3.3/hsqldb-2.3.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/postgresql/postgresql/9.1-901-1.jdbc4/postgresql-9.1-901-1.jdbc4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/springframework/boot/spring-boot-starter-tomcat/1.4.1.RELEASE/spring-boot-starter-tomcat-1.4.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-core/8.5.5/tomcat-embed-core-8.5.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-el/8.5.5/tomcat-embed-el-8.5.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/apache/tomcat/embed/tomcat-embed-websocket/8.5.5/tomcat-embed-websocket-8.5.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/opengis/cite/xerces/xercesImpl-xsd11/2.12-beta-r1667115/xercesImpl-xsd11-2.12-beta-r1667115.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/xml-apis/xml-apis/1.4.01/xml-apis-1.4.01.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/org/opengis/cite/eclipse/webtools/sse/org.eclipse.wst.xml.xpath2.processor/1.1.5-738bb7b85d/org.eclipse.wst.xml.xpath2.processor-1.1.5-738bb7b85d.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/.m2/edu/princeton/cup/java-cup/10k/java-cup-10k.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-MPI-ExperimentGroup-ExperimentTemplate-379827691-20180516-193517-firstCommit/ExperimentDesigner
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 358, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `hasMoreStimulusFeature.getPresenterFeatureList().add(labelFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 360, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stimuliFeature = hasMoreStimulusFeature ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 354, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `labelFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.styleName, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 355, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `if (true) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.column, null,[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 355, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `if (false) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.column, null[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 355, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 413, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 409, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setNextWizardScreenData(nextWizardScreenData) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 98, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.freeTextAllowedCharCodes = freeTextAllowedCharCodes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 74, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.ratingLabels = ratingLabels ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 106, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimuliLabelStyle = stimuliLabelStyle ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 66, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.instructions = instructions ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 258, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.getWizardScreenData().setStimulusResponseOptions(stimuliData.getRatingLabels()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (true) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (false) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 238, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastScreen = stimulusInstructionsScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 237, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateScreenToMenuRelations(screenToMenuMap, lastScreen, stimulusInstructionsScreen, true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 235, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lastScreen.setNextWizardScreenData(stimulusInstructionsScreen.getWizardScreenData()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreenData(stimulusInstructionsScreen.getWizardSc[...] ` -topatch--> `if (true) { 	lastScreen.setNextWizardScreenData(stimulusInstructionsScreen.getWizardScreenData()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreenData(stimulusInstructionsScreen.getWizardSc[...] ` -topatch--> `if (false) { 	lastScreen.setNextWizardScreenData(stimulusInstructionsScreen.getWizardScreenData()); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreenData(stimulusInstructionsScreen.getWizardSc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 229, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(stimulusInstructionsScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 228, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimulusInstructionsScreen.setMenuLabel("Terug") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.templateType = templateType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 76, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.showMenuBar = showMenuBar ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 84, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.allowUserRestart = allowUserRestart ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.experimentTitle = experimentTitle ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.showProgress = showProgress ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 108, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.debriefingText1 = debriefingText1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 116, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.debriefingText2 = debriefingText2 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilData line: 92, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.screenData = screenData ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilText line: 61, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.butonLabel = butonLabel ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilText line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.hotkey = hotkey ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilText line: 45, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.title = title ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilText line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.text = text ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilText line: 37, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.menuLabel = menuLabel ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 154, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.randomStimuliTags = randomStimuliTags ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 138, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimuliArray = stimuliArray ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 90, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.freeTextValidationMessage = freeTextValidationMessage ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 82, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.freeTextValidationRegex = freeTextValidationRegex ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilStimuliData line: 50, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimuliName = stimuliName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilScreen line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.agreementScreen = agreementScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilScreen line: 75, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimuliData = stimuliData ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilScreen line: 83, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.metadataScreen = metadataScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilScreen line: 43, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.textScreen = textScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilMetadata line: 51, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.sendData = sendData ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilMetadata line: 35, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.metadataFields = metadataFields ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilMetadata line: 43, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.connectionErrorText = connectionErrorText ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 209, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(4, allowedCharCodes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 80, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStimuliLabelStyle(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setButtonLabel(spacebar) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStimuliSet(stimuliData.getStimuliArray()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("horizontal".equals(stimuliData.getStimuliLayout())) { 	setTableLayout(true); } ` -topatch--> `if (true) { 	setTableLayout(true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("horizontal".equals(stimuliData.getStimuliLayout())) { 	setTableLayout(true); } ` -topatch--> `if (false) { 	setTableLayout(true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("horizontal".equals(stimuliData.getStimuliLayout())) { 	setTableLayout(true); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 70, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setCentreScreen(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 69, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setRandomiseStimuli(true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 72, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setShowProgress(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 71, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setHotkeyButton("SPACE") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 74, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setTableLayout(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 73, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStimulusFreeText(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spacebar == null) { 	throw new java.lang.UnsupportedOperationException("button text cannot be nu[...] ` -topatch--> `if (true) { 	throw new java.lang.UnsupportedOperationException("button text cannot be null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spacebar == null) { 	throw new java.lang.UnsupportedOperationException("button text cannot be nu[...] ` -topatch--> `if (false) { 	throw new java.lang.UnsupportedOperationException("button text cannot be null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (spacebar == null) { 	throw new java.lang.UnsupportedOperationException("button text cannot be nu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 62, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimulusCodeMsDelay(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimulusCodeMatch(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimulusCodeFormat(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 63, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStimulusMsDelay(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimulusResponseLabelLeft(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimuliCount(1000) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 68, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimulusResponseOptions(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 67, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimulusResponseLabelRight(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 58, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.setScreenTitle(stimuliData.getStimuliName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setRandomStimuliTagsField("") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimuliRandomTags(stimuliData.getRandomStimuliTags()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 329, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardAboutScreen.setBackWizardScreen(firstScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 330, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(wizardAboutScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 319, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lastScreen.setNextWizardScreen(completionScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 318, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreen(completionScreen); } ` -topatch--> `if (true) { 	lastScreen.setNextWizardScreen(completionScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 318, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreen(completionScreen); } ` -topatch--> `if (false) { 	lastScreen.setNextWizardScreen(completionScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 318, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreen(completionScreen); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 323, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `completionScreen.setNextWizardScreen(firstScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 263, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.setStimulusFreeText(true,  stimuliData.getFreeTextValidationRegex() == null ? ".{2,}"[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 268, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.setInputKeyErrorMessage("Sorry, dit teken is niet toegestaan.") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 267, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.setAllowedCharCodes(stimuliData.getFreeTextAllowedCharCodes()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 257, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getRatingLabels() != null) { 	list1234Screen.getWizardScreenData().setStimulusRespon[...] ` -topatch--> `if (true) { 	list1234Screen.getWizardScreenData().setStimulusResponseOptions(stimuliData.getRatingLa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 257, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getRatingLabels() != null) { 	list1234Screen.getWizardScreenData().setStimulusRespon[...] ` -topatch--> `if (false) { 	list1234Screen.getWizardScreenData().setStimulusResponseOptions(stimuliData.getRatingL[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 257, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getRatingLabels() != null) { 	list1234Screen.getWizardScreenData().setStimulusRespon[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 255, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (abstractWizardScreen instanceof nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulu[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen list1234S[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 255, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (abstractWizardScreen instanceof nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulu[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen list1234[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 255, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (abstractWizardScreen instanceof nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getStimuliCodes() != null) {  	list1234Screen.getWizardScreenData().setStimulusRespo[...] ` -topatch--> `if (true) {  	list1234Screen.getWizardScreenData().setStimulusResponseOptions(stimuliData.getStimuli[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getStimuliCodes() != null) {  	list1234Screen.getWizardScreenData().setStimulusRespo[...] ` -topatch--> `if (false) {  	list1234Screen.getWizardScreenData().setStimulusResponseOptions(stimuliData.getStimul[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getStimuliCodes() != null) {  	list1234Screen.getWizardScreenData().setStimulusRespo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 245, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (stimuliType) { 	case touch : 		abstractWizardScreen = new nl.mpi.tg.eg.experimentdesigner.mo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 297, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(completionScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wizardUtilData.getFeedbackScreenText() != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.w[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen wizardFeedbackS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wizardUtilData.getFeedbackScreenText() != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.w[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen wizardFeedback[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 300, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (wizardUtilData.getFeedbackScreenText() != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.w[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 298, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `completionScreen.setScreenTag("completion") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 281, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateScreenToMenuRelations(screenToMenuMap, lastScreen, abstractWizardScreen, true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 279, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(abstractWizardScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (true) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (false) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 282, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastScreen = abstractWizardScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 273, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.setStimuliLabelStyle(stimuliData.getStimuliLabelStyle()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 272, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.setRandomStimuliTagsField("item") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 271, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.getWizardScreenData().setStimulusResponseLabelRight("") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 270, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.getWizardScreenData().setStimulusResponseLabelLeft("") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wizardUtilData.isShowProgress()) { 	list1234Screen.setShowProgress(true); } ` -topatch--> `if (true) { 	list1234Screen.setShowProgress(true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wizardUtilData.isShowProgress()) { 	list1234Screen.setShowProgress(true); } ` -topatch--> `if (false) { 	list1234Screen.setShowProgress(true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (wizardUtilData.isShowProgress()) { 	list1234Screen.setShowProgress(true); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 274, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `list1234Screen.setHotkeyButton(stimuliData.getStimuliHotKey()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 70, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lastScreen.setNextWizardScreen(currentScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 77, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.setAppName(wizardUtilData.getExperimentTitle()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!isStimulusScreen) { 	currentScreen.setBackWizardScreen(lastScreen); } ` -topatch--> `if (true) { 	currentScreen.setBackWizardScreen(lastScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!isStimulusScreen) { 	currentScreen.setBackWizardScreen(lastScreen); } ` -topatch--> `if (false) { 	currentScreen.setBackWizardScreen(lastScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 65, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!isStimulusScreen) { 	currentScreen.setBackWizardScreen(lastScreen); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lastScreen != null) && (!isInMenu)) { 	if (!isStimulusScreen) { 		currentScreen.setBackWizardSc[...] ` -topatch--> `if (true) { 	if (!isStimulusScreen) { 		currentScreen.setBackWizardScreen(lastScreen); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((lastScreen != null) && (!isInMenu)) { 	if (!isStimulusScreen) { 		currentScreen.setBackWizardSc[...] ` -topatch--> `if (false) { 	if (!isStimulusScreen) { 		currentScreen.setBackWizardScreen(lastScreen); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((lastScreen != null) && (!isInMenu)) { 	if (!isStimulusScreen) { 		currentScreen.setBackWizardSc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreen(currentScreen); } ` -topatch--> `if (true) { 	lastScreen.setNextWizardScreen(currentScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreen(currentScreen); } ` -topatch--> `if (false) { 	lastScreen.setNextWizardScreen(currentScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.setNextWizardScreen(currentScreen); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `currentScreen.setBackWizardScreen(lastScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wizardUtilData = wizardUtilData ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (introductionText != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen intro[...] ` -topatch--> `if (true) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen introductionScreen = new [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (introductionText != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen intro[...] ` -topatch--> `if (false) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen introductionScreen = new[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (introductionText != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen intro[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 109, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `introductionScreen.setNextHotKey(introductionText.getHotkey()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 108, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (introductionText.getHotkey() != null) { 	introductionScreen.setNextHotKey(introductionText.getHo[...] ` -topatch--> `if (true) { 	introductionScreen.setNextHotKey(introductionText.getHotkey()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 108, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (introductionText.getHotkey() != null) { 	introductionScreen.setNextHotKey(introductionText.getHo[...] ` -topatch--> `if (false) { 	introductionScreen.setNextHotKey(introductionText.getHotkey()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 108, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (introductionText.getHotkey() != null) { 	introductionScreen.setNextHotKey(introductionText.getHo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 107, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `introductionScreen.setMenuLabel(introductionText.getMenuLabel()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 101, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardUtilScreen screenData : wizardUtilData.getSc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 80, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.setObfuscateScreenNames(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.setTextFontSize(17) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.setShowMenuBar(wizardUtilData.isShowMenuBar()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 201, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setScreenTitle(metadataScreen.getTitle()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 200, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setScreenText(metadataScreen.getText()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 205, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setSendData(metadataScreen.isSendData()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 204, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setNextButton(metadataScreen.getButonLabel()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 203, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setScreenTag(metadataScreen.getTitle()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 202, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setMenuLabel(metadataScreen.getMenuLabel()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataScreen != null) {  	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScr[...] ` -topatch--> `if (true) {  	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen wizardEditUser[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataScreen != null) {  	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScr[...] ` -topatch--> `if (false) {  	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen wizardEditUse[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataScreen != null) {  	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getInstructions() != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTex[...] ` -topatch--> `if (true) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen stimulusInstructionsScree[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getInstructions() != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTex[...] ` -topatch--> `if (false) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen stimulusInstructionsScre[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData.getInstructions() != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTex[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData != null) { 	if (stimuliData.getInstructions() != null) { 		nl.mpi.tg.eg.experimentde[...] ` -topatch--> `if (true) { 	if (stimuliData.getInstructions() != null) { 		nl.mpi.tg.eg.experimentdesigner.model.wi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData != null) { 	if (stimuliData.getInstructions() != null) { 		nl.mpi.tg.eg.experimentde[...] ` -topatch--> `if (false) { 	if (stimuliData.getInstructions() != null) { 		nl.mpi.tg.eg.experimentdesigner.model.w[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliData != null) { 	if (stimuliData.getInstructions() != null) { 		nl.mpi.tg.eg.experimentde[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (true) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (false) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 216, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastScreen = wizardEditUserScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 215, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateScreenToMenuRelations(screenToMenuMap, lastScreen, wizardEditUserScreen, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 214, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(wizardEditUserScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 208, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setCustomFields(metadataScreen.getMetadataFields()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 206, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setOn_Error_Text(metadataScreen.getConnectionErrorText()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 212, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardEditUserScreen.setBackWizardScreen(lastScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 211, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lastScreen.getWizardScreenData().setNextWizardScreenData(wizardEditUserScreen.getWizardScreenData()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(wizardEditUserSc[...] ` -topatch--> `if (true) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(wizardEditUserScreen.getWizard[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(wizardEditUserSc[...] ` -topatch--> `if (false) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(wizardEditUserScreen.getWizar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 210, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(wizardEditUserSc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (menuScreenData != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardMenuScreen menuScr[...] ` -topatch--> `if (true) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardMenuScreen menuScreen = new nl.mpi.t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (menuScreenData != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardMenuScreen menuScr[...] ` -topatch--> `if (false) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardMenuScreen menuScreen = new nl.mpi.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (menuScreenData != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardMenuScreen menuScr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 121, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastScreen = introductionScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateScreenToMenuRelations(screenToMenuMap, lastScreen, introductionScreen, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 118, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lastScreen.getWizardScreenData().setNextWizardScreenData(introductionScreen.getWizardScreenData()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (true) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (false) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mainMenuScreen != null) { 	introductionScreen.setBackWizardScreen(mainMenuScreen); } else 	if (l[...] ` -topatch--> `if (true) { 	introductionScreen.setBackWizardScreen(mainMenuScreen); } else { 	if (lastScreen != nul[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mainMenuScreen != null) { 	introductionScreen.setBackWizardScreen(mainMenuScreen); } else 	if (l[...] ` -topatch--> `if (false) { 	introductionScreen.setBackWizardScreen(mainMenuScreen); } else { 	if (lastScreen != nu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mainMenuScreen != null) { 	introductionScreen.setBackWizardScreen(mainMenuScreen); } else 	if (l[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(introductionScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(introductionScre[...] ` -topatch--> `if (true) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(introductionScreen.getWizardSc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(introductionScre[...] ` -topatch--> `if (false) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(introductionScreen.getWizardS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(introductionScre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 115, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `introductionScreen.setBackWizardScreen(lastScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	introductionScreen.setBackWizardScreen(lastScreen); } ` -topatch--> `if (true) { 	introductionScreen.setBackWizardScreen(lastScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	introductionScreen.setBackWizardScreen(lastScreen); } ` -topatch--> `if (false) { 	introductionScreen.setBackWizardScreen(lastScreen); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 114, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	introductionScreen.setBackWizardScreen(lastScreen); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 167, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `firstScreen = lastScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (true) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `if (false) { 	firstScreen = lastScreen; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (firstScreen == null) { 	firstScreen = lastScreen; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (selectParticipantMenu != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardExist[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardExistingUserCheckScreen existi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (selectParticipantMenu != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardExist[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardExistingUserCheckScreen exist[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (selectParticipantMenu != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardExist[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(agreementScreen.[...] ` -topatch--> `if (true) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(agreementScreen.getWizardScree[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(agreementScreen.[...] ` -topatch--> `if (false) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(agreementScreen.getWizardScre[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastScreen != null) { 	lastScreen.getWizardScreenData().setNextWizardScreenData(agreementScreen.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 160, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardData.addScreen(agreementScreen) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 159, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `agreementScreen.setMenuLabel(agreementScreenText.getMenuLabel()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 165, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastScreen = agreementScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 164, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `updateScreenToMenuRelations(screenToMenuMap, lastScreen, agreementScreen, false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (agreementScreenText != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScre[...] ` -topatch--> `if (true) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen agreementScreen = ne[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (agreementScreenText != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScre[...] ` -topatch--> `if (false) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen agreementScreen = n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.SentenceCompletion line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (agreementScreenText != null) { 	nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 201, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(3, inputErrorMessage) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 430, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ratingFooterButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribut[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 429, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ratingFooterButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribut[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 432, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ratingFooterButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribut[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 431, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ratingFooterButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribut[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 434, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nextStimulusFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.repe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 436, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeature.getPresenterFeatureList().add(ratingFooterButtonFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 435, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ratingFooterButtonFeature.getPresenterFeatureList().add(nextStimulusFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `if (true) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.column, "", "[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `if (false) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.column, "", [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 421, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 424, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeature.getPresenterFeatureList().add(stimulusFreeTextFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 416, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 415, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getInputKeyErrorMessage(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAt[...] ` -topatch--> `if (true) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Feat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 415, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getInputKeyErrorMessage(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAt[...] ` -topatch--> `if (false) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Fea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 415, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getInputKeyErrorMessage(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAt[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getHotkeyButton(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAttributes[...] ` -topatch--> `if (true) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Feat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getHotkeyButton(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAttributes[...] ` -topatch--> `if (false) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Fea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 418, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getHotkeyButton(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAttributes[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliLabelStyle != null) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experime[...] ` -topatch--> `if (true) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Feat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliLabelStyle != null) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experime[...] ` -topatch--> `if (false) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Fea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliLabelStyle != null) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experime[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 412, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getAllowedCharCodes(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAttrib[...] ` -topatch--> `if (true) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Feat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 412, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getAllowedCharCodes(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAttrib[...] ` -topatch--> `if (false) { 	stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.Fea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 412, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getAllowedCharCodes(storedWizardScreenData) != null) { 	stimulusFreeTextFeature.addFeatureAttrib[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 411, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimulusFreeTextFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 302, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setFreeTextValidationMessage(freeTextValidationMessage) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 301, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setFreeTextValidationRegex(freeTextValidationRegex) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 300, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStimulusFreeText(stimulusFreeText) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 288, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(1, freeTextValidationRegex) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 280, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(0, freeTextValidationMessage) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 121, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.mpi.tg.eg.exp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 124, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(eraseUserButton) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 125, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `eraseUserButton.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.target, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 403, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `presenterFeature = stimuliFeature ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 446, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeature.getPresenterFeatureList().add(nextButtonFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 445, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nextButtonFeature.getPresenterFeatureList().add(nextStimulusFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getHotkeyButton(storedWizardScreenData) != null) { 	nextButtonFeature.addFeatureAttributes(nl.mp[...] ` -topatch--> `if (true) { 	nextButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAtt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getHotkeyButton(storedWizardScreenData) != null) { 	nextButtonFeature.addFeatureAttributes(nl.mp[...] ` -topatch--> `if (false) { 	nextButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getHotkeyButton(storedWizardScreenData) != null) { 	nextButtonFeature.addFeatureAttributes(nl.mp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 439, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nextButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.eventT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 444, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `nextStimulusFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.repe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 261, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stimulus = new nl.mpi.tg.eg.experimentdesigner.model.Stimulus(substring, null, null, null, splitScre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 254, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimulusLine.endsWith(".png")) { 	tagSet.addAll(java.util.Arrays.asList(stimulusLine.split("/"))[...] ` -topatch--> `if (true) { 	tagSet.addAll(java.util.Arrays.asList(stimulusLine.split("/"))); 	stimulus = new nl.mpi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 254, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimulusLine.endsWith(".png")) { 	tagSet.addAll(java.util.Arrays.asList(stimulusLine.split("/"))[...] ` -topatch--> `if (false) { 	tagSet.addAll(java.util.Arrays.asList(stimulusLine.split("/"))); 	stimulus = new nl.mp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 254, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimulusLine.endsWith(".png")) { 	tagSet.addAll(java.util.Arrays.asList(stimulusLine.split("/"))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 259, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tagSet.addAll(java.util.Arrays.asList(splitScreenText[0].split("/"))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 292, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(2, fieldName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 117, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.mpi.tg.eg.exp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 118, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.mpi.tg.eg.exp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 366, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `imageFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.msToNext, j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 365, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `imageFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.percentOfPa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `if (true) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.column, null,[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `if (false) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.column, null[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 367, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tableFeature != null) { 	tableFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureTy[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 370, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `hasMoreStimulusFeature.getPresenterFeatureList().add(imageFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 372, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stimuliFeature = imageFeature ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.RandomTag line: 50, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.alias = alias ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.RandomTag line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.minCount = minCount ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.RandomTag line: 51, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.tag = tag ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 364, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `imageFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.maxWidth, "[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 363, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `imageFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.maxHeight, [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliLabelStyle != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature label[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature labelFeature = new nl.mpi.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliLabelStyle != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature label[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature labelFeature = new nl.mpi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 352, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliLabelStyle != null) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature label[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 342, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.maxSt[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 341, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.repea[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 343, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeatureList.add(loadStimuliFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 345, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isShowProgress(storedWizardScreenData)) { 	hasMoreStimulusFeature.getPresenterFeatureList().add([...] ` -topatch--> `if (true) { 	hasMoreStimulusFeature.getPresenterFeatureList().add(new nl.mpi.tg.eg.experimentdesigne[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 345, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isShowProgress(storedWizardScreenData)) { 	hasMoreStimulusFeature.getPresenterFeatureList().add([...] ` -topatch--> `if (false) { 	hasMoreStimulusFeature.getPresenterFeatureList().add(new nl.mpi.tg.eg.experimentdesign[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 345, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isShowProgress(storedWizardScreenData)) { 	hasMoreStimulusFeature.getPresenterFeatureList().add([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.RandomTag line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxCount = maxCount ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimulusCodeFormat() != null) { 	final nl.mpi.tg.eg.experimentdesigner[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature nextButtonFeature = new nl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimulusCodeFormat() != null) { 	final nl.mpi.tg.eg.experimentdesigner[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature nextButtonFeature = new n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 376, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimulusCodeFormat() != null) { 	final nl.mpi.tg.eg.experimentdesigner[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 427, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimulusResponseOptions() != null) { 	final nl.mpi.tg.eg.experimentdes[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature ratingFooterButtonFeature [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 427, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimulusResponseOptions() != null) { 	final nl.mpi.tg.eg.experimentdes[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature ratingFooterButtonFeature[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 427, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimulusResponseOptions() != null) { 	final nl.mpi.tg.eg.experimentdes[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 406, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isStimulusFreeText(storedWizardScreenData)) { 	final nl.mpi.tg.eg.experimentdesigner.model.Prese[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature stimulusFreeTextFeature = [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 406, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isStimulusFreeText(storedWizardScreenData)) { 	final nl.mpi.tg.eg.experimentdesigner.model.Prese[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature stimulusFreeTextFeature =[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 406, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isStimulusFreeText(storedWizardScreenData)) { 	final nl.mpi.tg.eg.experimentdesigner.model.Prese[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 405, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeature.getPresenterFeatureList().add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 454, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getPresenterScreen().add(storedWizardScreenData.getPresenterScreen()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 453, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.getPresenterFeatureList().add(endOfStimulusFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 448, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.getPresenterFeatureList().add(hasMoreStimulusFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 452, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `endOfStimulusFeature.getPresenterFeatureList().add(autoNextPresenter) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 238, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setStimuli(new java.util.ArrayList<>()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.wizardScreenData.getStimuli() == null) { 	this.wizardScreenData.setStimuli(new java.util.Ar[...] ` -topatch--> `if (true) { 	this.wizardScreenData.setStimuli(new java.util.ArrayList<>()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.wizardScreenData.getStimuli() == null) { 	this.wizardScreenData.setStimuli(new java.util.Ar[...] ` -topatch--> `if (false) { 	this.wizardScreenData.setStimuli(new java.util.ArrayList<>()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.wizardScreenData.getStimuli() == null) { 	this.wizardScreenData.setStimuli(new java.util.Ar[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliSet != null) { 	for (java.lang.String stimulusLine : stimuliSet) { 		final java.util.Hash[...] ` -topatch--> `if (true) { 	for (java.lang.String stimulusLine : stimuliSet) { 		final java.util.HashSet<java.lang.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliSet != null) { 	for (java.lang.String stimulusLine : stimuliSet) { 		final java.util.Hash[...] ` -topatch--> `if (false) { 	for (java.lang.String stimulusLine : stimuliSet) { 		final java.util.HashSet<java.lang[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 242, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliSet != null) { 	for (java.lang.String stimulusLine : stimuliSet) { 		final java.util.Hash[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 243, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String stimulusLine : stimuliSet) { 	final java.util.HashSet<java.lang.String> tagSet[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 263, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimuliList.add(stimulus) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 246, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimulusCodePattern != null) {  	java.util.regex.Matcher matcher = stimulusCodePattern.matcher(s[...] ` -topatch--> `if (true) {  	java.util.regex.Matcher matcher = stimulusCodePattern.matcher(stimulusLine); 	final ja[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 246, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimulusCodePattern != null) {  	java.util.regex.Matcher matcher = stimulusCodePattern.matcher(s[...] ` -topatch--> `if (false) {  	java.util.regex.Matcher matcher = stimulusCodePattern.matcher(stimulusLine); 	final j[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 246, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimulusCodePattern != null) {  	java.util.regex.Matcher matcher = stimulusCodePattern.matcher(s[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 306, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setNextButton(new java.lang.String[]{ buttonLabelEventTag }) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 307, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setButtonLabelEventTag(buttonLabelEventTag) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!experiment.getMetadata().contains(metadataField)) { 	experiment.getMetadata().add(metadataField[...] ` -topatch--> `if (true) { 	experiment.getMetadata().add(metadataField); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!experiment.getMetadata().contains(metadataField)) { 	experiment.getMetadata().add(metadataField[...] ` -topatch--> `if (false) { 	experiment.getMetadata().add(metadataField); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 334, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!experiment.getMetadata().contains(metadataField)) { 	experiment.getMetadata().add(metadataField[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 335, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getMetadata().add(metadataField) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 338, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.event[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 340, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.repea[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 339, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.rando[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 326, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String randomTag : storedWizardScreenData.getStimuliRandomTags()) { 	randomGrouping.a[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimuliRandomTags() != null) { 	for (java.lang.String randomTag : stor[...] ` -topatch--> `if (true) { 	for (java.lang.String randomTag : storedWizardScreenData.getStimuliRandomTags()) { 		ra[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimuliRandomTags() != null) { 	for (java.lang.String randomTag : stor[...] ` -topatch--> `if (false) { 	for (java.lang.String randomTag : storedWizardScreenData.getStimuliRandomTags()) { 		r[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getStimuliRandomTags() != null) { 	for (java.lang.String randomTag : stor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 327, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `randomGrouping.addRandomTag(randomTag) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 330, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `metadataFieldname = ((metadataFieldname == null) || metadataFieldname.isEmpty()) ? "groupAllocation_[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 332, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.setRandomGrouping(randomGrouping) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 331, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `randomGrouping.setStorageField(metadataFieldname) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 317, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setPresenterType(nl.mpi.tg.eg.experimentdesigner.model.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.isCentreScreen()) { 	presenterFeatureList.add(new nl.mpi.tg.eg.experiment[...] ` -topatch--> `if (true) { 	presenterFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.isCentreScreen()) { 	presenterFeatureList.add(new nl.mpi.tg.eg.experiment[...] ` -topatch--> `if (false) { 	presenterFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 319, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.isCentreScreen()) { 	presenterFeatureList.add(new nl.mpi.tg.eg.experiment[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 323, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `loadStimuliFeature.addStimulusTag(storedWizardScreenData.getScreenTitle()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 314, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.appendUniqueStimuli(storedWizardScreenData.getStimuli()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 83, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setOn_Error_Text(on_Error_Text) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getPresenterScreen().add(storedWizardScreenData.getPresenterScreen()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (showDebug) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.m[...] ` -topatch--> `if (true) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (showDebug) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.m[...] ` -topatch--> `if (false) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (showDebug) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.m[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((storedWizardScreenData.getScreenText(0) != null) && (!storedWizardScreenData.getScreenText(0).i[...] ` -topatch--> `if (true) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((storedWizardScreenData.getScreenText(0) != null) && (!storedWizardScreenData.getScreenText(0).i[...] ` -topatch--> `if (false) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((storedWizardScreenData.getScreenText(0) != null) && (!storedWizardScreenData.getScreenText(0).i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 80, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg.eg.experimen[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setPresenterType(nl.mpi.tg.eg.experimentdesigner.model.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (featureType.isCanHaveRandomGrouping()) { 	this.randomGrouping = randomGrouping; } else { 	throw [...] ` -topatch--> `if (true) { 	this.randomGrouping = randomGrouping; } else { 	throw new java.lang.UnsupportedOperatio[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (featureType.isCanHaveRandomGrouping()) { 	this.randomGrouping = randomGrouping; } else { 	throw [...] ` -topatch--> `if (false) { 	this.randomGrouping = randomGrouping; } else { 	throw new java.lang.UnsupportedOperati[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 199, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (featureType.isCanHaveRandomGrouping()) { 	this.randomGrouping = randomGrouping; } else { 	throw [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 200, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.randomGrouping = randomGrouping ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 54, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenTag(screenTag.replaceAll("[^A-Za-z0-9]", "_")) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 49, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setMenuLabel(menuLabel) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 84, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setBackWizardScreenData(backWizardScreen.getWizardScreenData()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 113, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setBackPresenter(storedWizardScreenData.getBackWizardScr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.RandomGrouping line: 57, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `randomTags.add(new nl.mpi.tg.eg.experimentdesigner.model.RandomTag(null, nl.mpi.tg.eg.experimentdesi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.RandomGrouping line: 74, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.storageField = storageField ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 119, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 118, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `hasWorkerId = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getClass() != obj.getClass()) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getClass() != obj.getClass()) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getClass() != obj.getClass()) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 140, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.util.Objects.equals(this.postName, other.postName)) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.util.Objects.equals(this.postName, other.postName)) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.util.Objects.equals(this.postName, other.postName)) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 309, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimulusCodeMatch = stimulusCodeMatch ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 317, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimulusCodeMsDelay = stimulusCodeMsDelay ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 325, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimulusCodeFormat = stimulusCodeFormat ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 150, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.backWizardScreenData = backWizardScreenData ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 142, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.backPresenter = backPresenter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 143, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(6, hotkeyButton) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 147, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenBoolean(2, showProgress) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 135, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenBoolean(0, randomiseStimuli) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 139, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenBoolean(1, stimulusFreeText) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 151, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenBoolean(3, isTableLayout) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 225, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenIntegers(0, stimulusMsDelay) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardRandomStimulusScreen line: 213, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenText(5, stimuliLabelStyle) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 133, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String fieldString : customFields) { 	insertMetadataByString(fieldString); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 134, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `insertMetadataByString(fieldString) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (customFields != null) { 	for (java.lang.String fieldString : customFields) { 		insertMetadataByS[...] ` -topatch--> `if (true) { 	for (java.lang.String fieldString : customFields) { 		insertMetadataByString(fieldStrin[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (customFields != null) { 	for (java.lang.String fieldString : customFields) { 		insertMetadataByS[...] ` -topatch--> `if (false) { 	for (java.lang.String fieldString : customFields) { 		insertMetadataByString(fieldStri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 132, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (customFields != null) { 	for (java.lang.String fieldString : customFields) { 		insertMetadataByS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 171, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(saveMetadataButton) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 172, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((storedWizardScreenData.getScreenText(1) != null) && (storedWizardScreenData.getMenuWizardScreen[...] ` -topatch--> `if (true) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 172, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((storedWizardScreenData.getScreenText(1) != null) && (storedWizardScreenData.getMenuWizardScreen[...] ` -topatch--> `if (false) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 172, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((storedWizardScreenData.getScreenText(1) != null) && (storedWizardScreenData.getMenuWizardScreen[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 169, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeature.getPresenterFeatureList().add(menuButtonFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 170, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `saveMetadataButton.getPresenterFeatureList().add(onSuccessFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 166, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `saveMetadataButton.getPresenterFeatureList().add(onErrorFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(1)) { 	onErrorFeature.addFeature(nl.mpi.tg.eg.experiment[...] ` -topatch--> `if (true) { 	onErrorFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.autoNextPre[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(1)) { 	onErrorFeature.addFeature(nl.mpi.tg.eg.experiment[...] ` -topatch--> `if (false) { 	onErrorFeature.addFeature(nl.mpi.tg.eg.experimentdesigner.model.FeatureType.autoNextPr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 163, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(1)) { 	onErrorFeature.addFeature(nl.mpi.tg.eg.experiment[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 161, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `saveMetadataButton.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.netwo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 160, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `saveMetadataButton.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.sendD[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 153, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `metadataField.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.fieldName,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 154, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(metadataField) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadata.getPostName().startsWith("connection")) { 	metadataField.addFeatureAttributes(nl.mpi.tg[...] ` -topatch--> `if (true) { 	metadataField.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadata.getPostName().startsWith("connection")) { 	metadataField.addFeatureAttributes(nl.mpi.tg[...] ` -topatch--> `if (false) { 	metadataField.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttrib[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 150, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (metadata.getPostName().startsWith("connection")) { 	metadataField.addFeatureAttributes(nl.mpi.tg[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 147, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getMetadata().add(metadata) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 146, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (nl.mpi.tg.eg.experimentdesigner.model.Metadata metadata : storedWizardScreenData.getMetadataFie[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenText(0) != null) { 	storedWizardScreenData.getPresenterScreen().[...] ` -topatch--> `if (true) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenText(0) != null) { 	storedWizardScreenData.getPresenterScreen().[...] ` -topatch--> `if (false) { 	storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenText(0) != null) { 	storedWizardScreenData.getPresenterScreen().[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 142, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setPresenterType(nl.mpi.tg.eg.experimentdesigner.model.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 37, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setSendData(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 38, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setIgnoreNetworkError(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 64, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenEnum.WizardAboutScreen ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 68, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg.eg.experimen[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setPresenterType(nl.mpi.tg.eg.experimentdesigner.model.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 72, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getPresenterScreen().add(storedWizardScreenData.getPresenterScreen()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 71, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(presenterFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 70, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.target,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 89, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setNextWizardScreenData(nextWizardScreen.getWizardScreenData()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getNextWizardScreenData() != null) { 	storedWizardScreenData.getPresenter[...] ` -topatch--> `if (true) { 	storedWizardScreenData.getPresenterScreen().setNextPresenter(storedWizardScreenData.get[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getNextWizardScreenData() != null) { 	storedWizardScreenData.getPresenter[...] ` -topatch--> `if (false) { 	storedWizardScreenData.getPresenterScreen().setNextPresenter(storedWizardScreenData.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getNextWizardScreenData() != null) { 	storedWizardScreenData.getPresenter[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setNextPresenter(storedWizardScreenData.getNextWizardScr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 118, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setDisplayOrder(displayOrder) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 109, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setMenuLabel(storedWizardScreenData.getMenuLabel() != nu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 108, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setTitle(obfuscateScreenNames ? (experiment.getAppNameDi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setSelfPresenterTag(currentTagString.replaceAll("[^A-Za-[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getBackWizardScreenData() != null) { 	storedWizardScreenData.getPresenter[...] ` -topatch--> `if (true) { 	storedWizardScreenData.getPresenterScreen().setBackPresenter(storedWizardScreenData.get[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getBackWizardScreenData() != null) { 	storedWizardScreenData.getPresenter[...] ` -topatch--> `if (false) { 	storedWizardScreenData.getPresenterScreen().setBackPresenter(storedWizardScreenData.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getBackWizardScreenData() != null) { 	storedWizardScreenData.getPresenter[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setTextFontSize(wizardData.getTextFontSize()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 108, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData wizardScreen : wizardData.getWiza[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 113, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `currentDisplaySequence += addedScreens.length ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataItem.getPostName().equals("workerId")) { 	hasWorkerId = true; 	break; } ` -topatch--> `if (true) { 	hasWorkerId = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataItem.getPostName().equals("workerId")) { 	hasWorkerId = true; 	break; } ` -topatch--> `if (false) { 	hasWorkerId = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataItem.getPostName().equals("workerId")) { 	hasWorkerId = true; 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 116, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (nl.mpi.tg.eg.experimentdesigner.model.Metadata metadataItem : experiment.getMetadata()) { 	if ([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasWorkerId) { 	addMetadata(experiment); } ` -topatch--> `if (true) { 	addMetadata(experiment); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasWorkerId) { 	addMetadata(experiment); } ` -topatch--> `if (false) { 	addMetadata(experiment); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!hasWorkerId) { 	addMetadata(experiment); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setAppNameInternal(appNameInternal) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setAppNameDisplay(appName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.controller.WizardController line: 132, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setShowMenuBar(showMenuBar) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 90, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setPresenterType(nl.mpi.tg.eg.experimentdesigner.model.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2)) { 	final nl.mpi.tg.eg.experimentdesigner.model.Prese[...] ` -topatch--> `if (true) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature sendAllDataFeature = (stor[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2)) { 	final nl.mpi.tg.eg.experimentdesigner.model.Prese[...] ` -topatch--> `if (false) { 	final nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature sendAllDataFeature = (sto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2)) { 	final nl.mpi.tg.eg.experimentdesigner.model.Prese[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 94, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(sendAllDataFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 97, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sendAllDataFeature.getPresenterFeatureList().add(onSuccessFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 98, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `onSuccessFeatureList = onSuccessFeature.getPresenterFeatureList() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sendAllDataFeature.getPresenterFeatureList().add(onErrorFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 102, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onErrorFeature.getPresenterFeatureList().add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 105, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onErrorFeature.getPresenterFeatureList().add(retryFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `retryFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.target, sto[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.mpi.tg.eg.exp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.mpi.tg.eg.exp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2) && storedWizardScreenData.getScreenBoolean(1)) { 	onS[...] ` -topatch--> `if (true) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2) && storedWizardScreenData.getScreenBoolean(1)) { 	onS[...] ` -topatch--> `if (false) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2) && storedWizardScreenData.getScreenBoolean(1)) { 	onS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.mpi.tg.eg.exp[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.WizardData line: 87, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.textFontSize = textFontSize ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.WizardData line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardScreenData.setDisplayOrder(wizardScreenList.size()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.WizardData line: 101, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardScreenList.add(wizardScreenData) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.WizardData line: 95, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.obfuscateScreenNames = obfuscateScreenNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.WizardData line: 71, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.appName = appName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.WizardData line: 79, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.showMenuBar = showMenuBar ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 119, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.showMenuBar = showMenuBar ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 128, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.textFontSize = textFontSize ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 189, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `wizardScreenData.getMetadataFields().add(new nl.mpi.tg.eg.experimentdesigner.model.Metadata(splitFie[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 183, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getPresenterScreen().add(storedWizardScreenData.getPresenterScreen()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `actionButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.hotK[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 81, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `actionButtonFeature.addFeatureAttributes(nl.mpi.tg.eg.experimentdesigner.model.FeatureAttribute.targ[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 84, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getPresenterScreen().add(storedWizardScreenData.getPresenterScreen()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 83, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(actionButtonFeature) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setNextPresenter(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().getPresenterFeatureList().add(new nl.mpi.tg.eg.experimen[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardTextScreen line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `storedWizardScreenData.getPresenterScreen().setPresenterType(nl.mpi.tg.eg.experimentdesigner.model.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 386, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `metadataFields = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 396, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.stimulusResponseOptions = stimulusResponseOptions ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataFields == null) { 	metadataFields = new java.util.ArrayList<>(); } ` -topatch--> `if (true) { 	this.metadataFields = new java.util.ArrayList<>(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataFields == null) { 	metadataFields = new java.util.ArrayList<>(); } ` -topatch--> `if (false) { 	this.metadataFields = new java.util.ArrayList<>(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 385, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (metadataFields == null) { 	metadataFields = new java.util.ArrayList<>(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 349, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.buttonLabelEventTag = buttonLabelEventTag ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 131, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.displayOrder = displayOrder ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 160, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.nextPresenter = nextPresenter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 151, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.selfPresenterTag = selfPresenterTag ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 160, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.nextWizardScreenData = nextWizardScreenData ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.menuLabel = menuLabel ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.title = title ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenText(1) != null) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.ex[...] ` -topatch--> `if (true) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenText(1) != null) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.ex[...] ` -topatch--> `if (false) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenText(1) != null) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.ex[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2) && storedWizardScreenData.getScreenBoolean(0)) { 	onS[...] ` -topatch--> `if (true) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2) && storedWizardScreenData.getScreenBoolean(0)) { 	onS[...] ` -topatch--> `if (false) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(2) && storedWizardScreenData.getScreenBoolean(0)) { 	onS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(3)) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experim[...] ` -topatch--> `if (true) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(3)) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experim[...] ` -topatch--> `if (false) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature(nl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (storedWizardScreenData.getScreenBoolean(3)) { 	onSuccessFeatureList.add(new nl.mpi.tg.eg.experim[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 83, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.presenterType = presenterType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardCompletionScreen line: 133, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.getPresenterScreen().add(storedWizardScreenData.getPresenterScreen()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 105, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.displayOrder = displayOrder ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.controlledRegex = controlledRegex ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.registrationField = registrationField ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.postName = postName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.duplicatesControlledMessage = duplicatesControlledMessage ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 62, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.preventServerDuplicates = preventServerDuplicates ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Metadata line: 61, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.controlledMessage = controlledMessage ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 207, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stimulusTags.add(nl.mpi.tg.eg.experimentdesigner.model.Stimulus.cleanTagString(tag)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 214, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `keyList1.sort(java.lang.Enum::compareTo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 215, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `keyList1.stream().forEach(( featureAttribute) -> { 	attributeMap.put(new javax.xml.namespace.QName(f[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 216, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `attributeMap.put(new javax.xml.namespace.QName(featureAttribute.name()), featureAttributes.get(featu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 219, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `keyList2.sort(java.lang.String::compareTo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 220, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `keyList2.stream().forEach(( featureAttribute) -> { 	attributeMap.put(new javax.xml.namespace.QName(f[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (attributeValue == null) { 	throw new java.lang.IllegalArgumentException("attributeValue cannot b[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("attributeValue cannot be null: " + featur[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (attributeValue == null) { 	throw new java.lang.IllegalArgumentException("attributeValue cannot b[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("attributeValue cannot be null: " + featu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (attributeValue == null) { 	throw new java.lang.IllegalArgumentException("attributeValue cannot b[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 234, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.featureAttributes.put(featureAttribute, attributeValue) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 77, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.featureType = featureType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 79, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.translatable = new nl.mpi.tg.eg.experimentdesigner.model.FeatureText(featureText, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 123, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeatures.stream().forEach(( feature) -> { 	elements.add(new javax.xml.bind.JAXBElement<>(ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 124, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `elements.add(new javax.xml.bind.JAXBElement<>(new javax.xml.namespace.QName(feature.getFeatureType()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `displayOrder = nl.mpi.tg.eg.experimentdesigner.model.PresenterFeature.globalfeatureCounter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.FeatureText line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.locale = locale ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.FeatureText line: 56, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.featureText = featureText ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getClass() != obj.getClass()) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getClass() != obj.getClass()) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 229, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getClass() != obj.getClass()) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.util.Objects.equals(this.identifier, other.identifier)) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.util.Objects.equals(this.identifier, other.identifier)) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!java.util.Objects.equals(this.identifier, other.identifier)) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 234, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Stimulus line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj == null) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 127, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setPrimaryColour0("#628D8D") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 126, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setAppNameInternal("") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 125, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setAppNameDisplay("") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setPrimaryColour4("#D5D8D8") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setPrimaryColour3("#96ADAD") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setPrimaryColour2("#4A7777") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 128, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setPrimaryColour1("#385E5E") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 135, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setComplementColour3("#FFEDDE") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 134, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setComplementColour2("#C69E7C") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 133, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setComplementColour1("#9D7B5E") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 132, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setComplementColour0("#EAC3A3") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 137, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setBackgroundColour("#FFFFFF") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.util.DefaultExperiments line: 136, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `experiment.setComplementColour4("#FFFDFB") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 101, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.appNameDisplay = appNameDisplay ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 110, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.appNameInternal = appNameInternal.toLowerCase() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 198, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryColour2 = primaryColour2 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 207, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryColour3 = primaryColour3 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 221, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.complementColour1 = complementColour1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 230, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.complementColour2 = complementColour2 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 239, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.complementColour3 = complementColour3 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 248, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryColour0 = primaryColour0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 189, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryColour1 = primaryColour1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 330, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (nl.mpi.tg.eg.experimentdesigner.model.Stimulus stimulus : stimuliList) { 	if (!this.stimuli.con[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliList != null) { 	for (nl.mpi.tg.eg.experimentdesigner.model.Stimulus stimulus : stimuliLi[...] ` -topatch--> `if (true) { 	for (nl.mpi.tg.eg.experimentdesigner.model.Stimulus stimulus : stimuliList) { 		if (!th[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliList != null) { 	for (nl.mpi.tg.eg.experimentdesigner.model.Stimulus stimulus : stimuliLi[...] ` -topatch--> `if (false) { 	for (nl.mpi.tg.eg.experimentdesigner.model.Stimulus stimulus : stimuliList) { 		if (!t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 329, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stimuliList != null) { 	for (nl.mpi.tg.eg.experimentdesigner.model.Stimulus stimulus : stimuliLi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 332, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.stimuli.add(stimulus) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.stimuli.contains(stimulus)) { 	this.stimuli.add(stimulus); } else { 	final int indexExisti[...] ` -topatch--> `if (true) { 	this.stimuli.add(stimulus); } else { 	final int indexExisting = this.stimuli.indexOf(st[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.stimuli.contains(stimulus)) { 	this.stimuli.add(stimulus); } else { 	final int indexExisti[...] ` -topatch--> `if (false) { 	this.stimuli.add(stimulus); } else { 	final int indexExisting = this.stimuli.indexOf(s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 331, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.stimuli.contains(stimulus)) { 	this.stimuli.add(stimulus); } else { 	final int indexExisti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 257, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.primaryColour4 = primaryColour4 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 266, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.complementColour0 = complementColour0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 275, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.complementColour4 = complementColour4 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.Experiment line: 284, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.backgroundColour = backgroundColour ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 180, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `presenterFeatures.stream().forEach(( feature) -> { 	elements.add(new javax.xml.bind.JAXBElement<>(ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.PresenterScreen line: 181, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `elements.add(new javax.xml.bind.JAXBElement<>(new javax.xml.namespace.QName(feature.getFeatureType()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 70, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.showDebug = showDebug ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 61, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (showDebug) { 	return nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenEnum.WizardDebugAb[...] ` -topatch--> `if (true) { 	return nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenEnum.WizardDebugAboutSc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 61, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (showDebug) { 	return nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenEnum.WizardDebugAb[...] ` -topatch--> `if (false) { 	return nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenEnum.WizardDebugAboutS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAboutScreen line: 61, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (showDebug) { 	return nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenEnum.WizardDebugAb[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 75, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenBoolean(0, sendData) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardEditUserScreen line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenBoolean(1, ignoreNetworkError) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 40, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.setScreenText(screenText) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardAgreementScreen line: 39, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.setNextButton(agreementButtonLabel) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wizardScreenType = wizardScreenType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 37, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.wizardScreenData = new nl.mpi.tg.eg.experimentdesigner.model.wizard.WizardScreenData(wizardScre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 39, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setMenuLabel(menuLabel) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 38, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setScreenTitle(screenTitle) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=nl.mpi.tg.eg.experimentdesigner.model.wizard.AbstractWizardScreen line: 41, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.wizardScreenData.setCentreScreen(false) ` -topatch--> `-` (null) 
