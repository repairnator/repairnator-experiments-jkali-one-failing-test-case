[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 39
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/languagetool/languagetool-core/4.0-SNAPSHOT/languagetool-core-4.0-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/google/guava/guava/21.0/guava-21.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/java/dev/jna/jna/4.4.0/jna-4.4.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-fsa/2.1.4/morfologik-fsa-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-fsa-builders/2.1.4/morfologik-fsa-builders-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-speller/2.1.4/morfologik-speller-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-stemming/2.1.4/morfologik-stemming-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/carrotsearch/hppc/0.7.2/hppc-0.7.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/loomchild/segment/2.0.0/segment-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/optimaize/languagedetector/language-detector/0.6/language-detector-0.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/arnx/jsonic/1.2.11/jsonic-1.2.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/intellij/annotations/12.0/annotations-12.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/lucene/lucene-core/5.5.4/lucene-core-5.5.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/lucene/lucene-backward-codecs/5.5.4/lucene-backward-codecs-5.5.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/berkeley/nlp/berkeleylm/1.1.2/berkeleylm-1.1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.4/jackson-databind-2.8.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.0/jackson-annotations-2.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.4/jackson-core-2.8.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/opennlp/opennlp-tools/1.7.2/opennlp-tools-1.7.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-tokenize-models/1.5/opennlp-tokenize-models-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-postag-models/1.5/opennlp-postag-models-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-chunk-models/1.5/opennlp-chunk-models-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/languagetool/languagetool-core/4.0-SNAPSHOT/languagetool-core-4.0-SNAPSHOT-tests.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 905500 milliseconds (905 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/languagetool/languagetool-core/4.0-SNAPSHOT/languagetool-core-4.0-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/google/guava/guava/21.0/guava-21.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/java/dev/jna/jna/4.4.0/jna-4.4.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-fsa/2.1.4/morfologik-fsa-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-fsa-builders/2.1.4/morfologik-fsa-builders-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-speller/2.1.4/morfologik-speller-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-stemming/2.1.4/morfologik-stemming-2.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/carrotsearch/hppc/0.7.2/hppc-0.7.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/loomchild/segment/2.0.0/segment-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/optimaize/languagedetector/language-detector/0.6/language-detector-0.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/arnx/jsonic/1.2.11/jsonic-1.2.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/intellij/annotations/12.0/annotations-12.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/lucene/lucene-core/5.5.4/lucene-core-5.5.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/lucene/lucene-backward-codecs/5.5.4/lucene-backward-codecs-5.5.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/berkeley/nlp/berkeleylm/1.1.2/berkeleylm-1.1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.4/jackson-databind-2.8.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.0/jackson-annotations-2.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.4/jackson-core-2.8.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/opennlp/opennlp-tools/1.7.2/opennlp-tools-1.7.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-tokenize-models/1.5/opennlp-tokenize-models-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-postag-models/1.5/opennlp-postag-models-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-chunk-models/1.5/opennlp-chunk-models-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/languagetool/languagetool-core/4.0-SNAPSHOT/languagetool-core-4.0-SNAPSHOT-tests.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 39
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 186
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 186,  175
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 175
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 175, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 905500
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/languagetool/languagetool-core/4.0-SNAPSHOT/languagetool-core-4.0-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/commons/commons-lang3/3.5/commons-lang3-3.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/google/guava/guava/21.0/guava-21.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/java/dev/jna/jna/4.4.0/jna-4.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-fsa/2.1.4/morfologik-fsa-2.1.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-fsa-builders/2.1.4/morfologik-fsa-builders-2.1.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-speller/2.1.4/morfologik-speller-2.1.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/carrot2/morfologik-stemming/2.1.4/morfologik-stemming-2.1.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/carrotsearch/hppc/0.7.2/hppc-0.7.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/loomchild/segment/2.0.0/segment-2.0.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/optimaize/languagedetector/language-detector/0.6/language-detector-0.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/net/arnx/jsonic/1.2.11/jsonic-1.2.11.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/slf4j/slf4j-api/1.7.6/slf4j-api-1.7.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/intellij/annotations/12.0/annotations-12.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/lucene/lucene-core/5.5.4/lucene-core-5.5.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/lucene/lucene-backward-codecs/5.5.4/lucene-backward-codecs-5.5.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/berkeley/nlp/berkeleylm/1.1.2/berkeleylm-1.1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.4/jackson-databind-2.8.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.0/jackson-annotations-2.8.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.4/jackson-core-2.8.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/javax/xml/bind/jaxb-api/2.3.0/jaxb-api-2.3.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/apache/opennlp/opennlp-tools/1.7.2/opennlp-tools-1.7.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-tokenize-models/1.5/opennlp-tokenize-models-1.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-postag-models/1.5/opennlp-postag-models-1.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/edu/washington/cs/knowitall/opennlp-chunk-models/1.5/opennlp-chunk-models-1.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/languagetool/languagetool-core/4.0-SNAPSHOT/languagetool-core-4.0-SNAPSHOT-tests.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-languagetool-org-languagetool-317468813-20171216-220410_bugonly-firstCommit/languagetool-language-modules/en
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.AustralianEnglish line: 45, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `rules.addAll(super.getRelevantRules(messages)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.AustralianEnglish line: 46, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `rules.add(new org.languagetool.rules.en.MorfologikAustralianSpellerRule(messages, this)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 87, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `irregularFormsOrNull = getIrregularFormsOrNull(word, "est", java.util.Arrays.asList("est"), "JJS", "[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 86, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (true) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 86, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (false) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 86, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 85, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `irregularFormsOrNull = getIrregularFormsOrNull(word, "er", java.util.Arrays.asList("er"), "JJR", "ad[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (true) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (false) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 80, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 79, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `irregularFormsOrNull = getIrregularFormsOrNull(word, "ed", java.util.Arrays.asList("d"), "VBD", "ver[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (true) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (false) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (true) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (false) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 83, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `irregularFormsOrNull = getIrregularFormsOrNull(word, "es", java.util.Arrays.asList("es"), "NNS", "no[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (true) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `if (false) { 	return irregularFormsOrNull;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (irregularFormsOrNull != null) 	return irregularFormsOrNull; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `irregularFormsOrNull = getIrregularFormsOrNull(word, "s", java.util.Arrays.asList("s"), "NNS", "noun[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 54, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (forms != null) { 	org.languagetool.rules.RuleMatch oldMatch = ruleMatches.get(0); 	org.languaget[...] ` -topatch--> `if (true) { 	org.languagetool.rules.RuleMatch oldMatch = ruleMatches.get(0); 	org.languagetool.rules[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 54, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (forms != null) { 	org.languagetool.rules.RuleMatch oldMatch = ruleMatches.get(0); 	org.languaget[...] ` -topatch--> `if (false) { 	org.languagetool.rules.RuleMatch oldMatch = ruleMatches.get(0); 	org.languagetool.rule[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 54, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (forms != null) { 	org.languagetool.rules.RuleMatch oldMatch = ruleMatches.get(0); 	org.languaget[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("icecreem".equals(word)) { 	return java.util.Arrays.asList("ice cream"); } else 	if ("fora".equa[...] ` -topatch--> `if (true) { 	return java.util.Arrays.asList("ice cream"); } else { 	if ("fora".equals(word)) { 		ret[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("icecreem".equals(word)) { 	return java.util.Arrays.asList("ice cream"); } else 	if ("fora".equa[...] ` -topatch--> `if (false) { 	return java.util.Arrays.asList("ice cream"); } else { 	if ("fora".equals(word)) { 		re[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("icecreem".equals(word)) { 	return java.util.Arrays.asList("ice cream"); } else 	if ("fora".equa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("speach".equals(word)) { 	return java.util.Arrays.asList("speech"); } else 	if ("icecreem".equal[...] ` -topatch--> `if (true) { 	return java.util.Arrays.asList("speech"); } else { 	if ("icecreem".equals(word)) { 		re[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("speach".equals(word)) { 	return java.util.Arrays.asList("speech"); } else 	if ("icecreem".equal[...] ` -topatch--> `if (false) { 	return java.util.Arrays.asList("speech"); } else { 	if ("icecreem".equals(word)) { 		r[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("speach".equals(word)) { 	return java.util.Arrays.asList("speech"); } else 	if ("icecreem".equal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("fora".equals(word)) { 	return java.util.Arrays.asList("for a"); } ` -topatch--> `if (true) { 	return java.util.Arrays.asList("for a"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("fora".equals(word)) { 	return java.util.Arrays.asList("for a"); } ` -topatch--> `if (false) { 	return java.util.Arrays.asList("for a"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("fora".equals(word)) { 	return java.util.Arrays.asList("for a"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("Alot".equals(word)) { 	return java.util.Arrays.asList("A lot"); } else 	if ("alot".equals(word)[...] ` -topatch--> `if (true) { 	return java.util.Arrays.asList("A lot"); } else { 	if ("alot".equals(word)) { 		return [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("Alot".equals(word)) { 	return java.util.Arrays.asList("A lot"); } else 	if ("alot".equals(word)[...] ` -topatch--> `if (false) { 	return java.util.Arrays.asList("A lot"); } else { 	if ("alot".equals(word)) { 		return[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("Alot".equals(word)) { 	return java.util.Arrays.asList("A lot"); } else 	if ("alot".equals(word)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("thru".equals(word)) { 	return java.util.Arrays.asList("through"); } else 	if ("speach".equals(w[...] ` -topatch--> `if (true) { 	return java.util.Arrays.asList("through"); } else { 	if ("speach".equals(word)) { 		ret[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("thru".equals(word)) { 	return java.util.Arrays.asList("through"); } else 	if ("speach".equals(w[...] ` -topatch--> `if (false) { 	return java.util.Arrays.asList("through"); } else { 	if ("speach".equals(word)) { 		re[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("thru".equals(word)) { 	return java.util.Arrays.asList("through"); } else 	if ("speach".equals(w[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("alot".equals(word)) { 	return java.util.Arrays.asList("a lot"); } else 	if ("thru".equals(word)[...] ` -topatch--> `if (true) { 	return java.util.Arrays.asList("a lot"); } else { 	if ("thru".equals(word)) { 		return [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ("alot".equals(word)) { 	return java.util.Arrays.asList("a lot"); } else 	if ("thru".equals(word)[...] ` -topatch--> `if (false) { 	return java.util.Arrays.asList("a lot"); } else { 	if ("thru".equals(word)) { 		return[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ("alot".equals(word)) { 	return java.util.Arrays.asList("a lot"); } else 	if ("thru".equals(word)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (word.endsWith(wordSuffix)) { 	java.lang.String baseForm = word.substring(0, word.length() - suff[...] ` -topatch--> `if (true) { 	java.lang.String baseForm = word.substring(0, word.length() - suffix.length()); 	java.l[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (word.endsWith(wordSuffix)) { 	java.lang.String baseForm = word.substring(0, word.length() - suff[...] ` -topatch--> `if (false) { 	java.lang.String baseForm = word.substring(0, word.length() - suffix.length()); 	java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (word.endsWith(wordSuffix)) { 	java.lang.String baseForm = word.substring(0, word.length() - suff[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 94, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String suffix : suffixes) { 	if (word.endsWith(wordSuffix)) { 		java.lang.String base[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 116, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 51, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ruleMatches.size() > 0) {  	org.languagetool.rules.en.AbstractEnglishSpellerRule.IrregularForms [...] ` -topatch--> `if (true) {  	org.languagetool.rules.en.AbstractEnglishSpellerRule.IrregularForms forms = getIrregul[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 51, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ruleMatches.size() > 0) {  	org.languagetool.rules.en.AbstractEnglishSpellerRule.IrregularForms [...] ` -topatch--> `if (false) {  	org.languagetool.rules.en.AbstractEnglishSpellerRule.IrregularForms forms = getIrregu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 51, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ruleMatches.size() > 0) {  	org.languagetool.rules.en.AbstractEnglishSpellerRule.IrregularForms [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunkFilter line: 79, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunkFilter line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `chunkTags.add(new org.languagetool.chunking.ChunkTag("I-" + newChunkTag)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 40, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addExamplePair(org.languagetool.rules.Example.wrong("This <marker>sentenc</marker> contains a spelli[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 39, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setCheckCompound(true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 44, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addIgnoreWords(ignoreWord) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.rules.en.AbstractEnglishSpellerRule line: 43, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String ignoreWord : wordListLoader.loadWords(languageSpecificIgnoreFile)) { 	addIgnor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 123, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (synthesizer == null) { 	synthesizer = new org.languagetool.synthesis.en.EnglishSynthesizer(); } ` -topatch--> `if (true) { 	this.synthesizer = new org.languagetool.synthesis.en.EnglishSynthesizer(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 123, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (synthesizer == null) { 	synthesizer = new org.languagetool.synthesis.en.EnglishSynthesizer(); } ` -topatch--> `if (false) { 	this.synthesizer = new org.languagetool.synthesis.en.EnglishSynthesizer(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 123, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (synthesizer == null) { 	synthesizer = new org.languagetool.synthesis.en.EnglishSynthesizer(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 140, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `wordTokenizer = new org.languagetool.tokenizers.en.EnglishWordTokenizer() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 132, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `disambiguator = new org.languagetool.tagging.disambiguation.rules.XmlRuleDisambiguator(new org.langu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 116, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chunker = new org.languagetool.chunking.EnglishChunker() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 105, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `tagger = new org.languagetool.tagging.en.EnglishTagger() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chunkFilter = new org.languagetool.chunking.EnglishChunkFilter() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.chunkerModel == null) { 	org.languagetool.chunking.Engl[...] ` -topatch--> `if (true) { 	org.languagetool.chunking.EnglishChunker.chunkerModel = new opennlp.tools.chunker.Chunk[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.chunkerModel == null) { 	org.languagetool.chunking.Engl[...] ` -topatch--> `if (false) { 	org.languagetool.chunking.EnglishChunker.chunkerModel = new opennlp.tools.chunker.Chun[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.chunkerModel == null) { 	org.languagetool.chunking.Engl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.posModel == null) { 	org.languagetool.chunking.EnglishC[...] ` -topatch--> `if (true) { 	org.languagetool.chunking.EnglishChunker.posModel = new opennlp.tools.postag.POSModel(o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.posModel == null) { 	org.languagetool.chunking.EnglishC[...] ` -topatch--> `if (false) { 	org.languagetool.chunking.EnglishChunker.posModel = new opennlp.tools.postag.POSModel([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 63, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.posModel == null) { 	org.languagetool.chunking.EnglishC[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.tokenModel == null) { 	org.languagetool.chunking.Englis[...] ` -topatch--> `if (true) { 	org.languagetool.chunking.EnglishChunker.tokenModel = new opennlp.tools.tokenize.Tokeni[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.tokenModel == null) { 	org.languagetool.chunking.Englis[...] ` -topatch--> `if (false) { 	org.languagetool.chunking.EnglishChunker.tokenModel = new opennlp.tools.tokenize.Token[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.languagetool.chunking.EnglishChunker.tokenModel == null) { 	org.languagetool.chunking.Englis[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (disambiguator == null) { 	disambiguator = new org.languagetool.tagging.disambiguation.rules.XmlR[...] ` -topatch--> `if (true) { 	this.disambiguator = new org.languagetool.tagging.disambiguation.rules.XmlRuleDisambigu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (disambiguator == null) { 	disambiguator = new org.languagetool.tagging.disambiguation.rules.XmlR[...] ` -topatch--> `if (false) { 	this.disambiguator = new org.languagetool.tagging.disambiguation.rules.XmlRuleDisambig[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 131, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (disambiguator == null) { 	disambiguator = new org.languagetool.tagging.disambiguation.rules.XmlR[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (chunker == null) { 	chunker = new org.languagetool.chunking.EnglishChunker(); } ` -topatch--> `if (true) { 	this.chunker = new org.languagetool.chunking.EnglishChunker(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (chunker == null) { 	chunker = new org.languagetool.chunking.EnglishChunker(); } ` -topatch--> `if (false) { 	this.chunker = new org.languagetool.chunking.EnglishChunker(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (chunker == null) { 	chunker = new org.languagetool.chunking.EnglishChunker(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tagger == null) { 	tagger = new org.languagetool.tagging.en.EnglishTagger(); } ` -topatch--> `if (true) { 	this.tagger = new org.languagetool.tagging.en.EnglishTagger(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tagger == null) { 	tagger = new org.languagetool.tagging.en.EnglishTagger(); } ` -topatch--> `if (false) { 	this.tagger = new org.languagetool.tagging.en.EnglishTagger(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tagger == null) { 	tagger = new org.languagetool.tagging.en.EnglishTagger(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wordTokenizer == null) { 	wordTokenizer = new org.languagetool.tokenizers.en.EnglishWordTokenize[...] ` -topatch--> `if (true) { 	this.wordTokenizer = new org.languagetool.tokenizers.en.EnglishWordTokenizer(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (wordTokenizer == null) { 	wordTokenizer = new org.languagetool.tokenizers.en.EnglishWordTokenize[...] ` -topatch--> `if (false) { 	this.wordTokenizer = new org.languagetool.tokenizers.en.EnglishWordTokenizer(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.language.English line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (wordTokenizer == null) { 	wordTokenizer = new org.languagetool.tokenizers.en.EnglishWordTokenize[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((tokens.length != posTags.length) || (tokens.length != chunkTags.length)) { 	throw new java.lang[...] ` -topatch--> `if (true) { 	throw new java.lang.RuntimeException((((("Length of results must be the same: " + token[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((tokens.length != posTags.length) || (tokens.length != chunkTags.length)) { 	throw new java.lang[...] ` -topatch--> `if (false) { 	throw new java.lang.RuntimeException((((("Length of results must be the same: " + toke[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((tokens.length != posTags.length) || (tokens.length != chunkTags.length)) { 	throw new java.lang[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `assignChunksToReadings(chunkTags) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.languagetool.chunking.EnglishChunker line: 139, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `sb.append(token.getToken()) ` -topatch--> `-` (null) 
