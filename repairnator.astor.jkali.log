[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 52
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/jayway/jsonpath/json-path/2.2.0/json-path-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/json-smart/2.2.1/json-smart-2.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/accessors-smart/1.1/accessors-smart-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/atteo/evo-inflector/1.2.1/evo-inflector-1.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/projectlombok/lombok/1.16.12/lombok-1.16.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.22/jcl-over-slf4j-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.8/logback-classic-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-core/1.1.8/logback-core-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-test/4.3.5.RELEASE/spring-test-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/joda-time/joda-time/2.9.7/joda-time-2.9.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/xmlunit/xmlunit/1.6/xmlunit-1.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-all/1.1.1/jadler-all-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-core/1.1.1/jadler-core-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-io/commons-io/2.4/commons-io-2.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-jetty/1.1.1/jadler-jetty-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-server/8.1.11.v20130520/jetty-server-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-continuation/8.1.11.v20130520/jetty-continuation-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-http/8.1.11.v20130520/jetty-http-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-io/8.1.11.v20130520/jetty-io-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-util/8.1.11.v20130520/jetty-util-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-junit/1.1.1/jadler-junit-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar]
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:243) - Problem compiling the model with compliance level 8
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:245) - The method getRel() is undefined for the type Hop at /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java/org/springframework/hateoas/client/Traverson.java:379
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:249) - Recompiling with compliance level 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/jayway/jsonpath/json-path/2.2.0/json-path-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/json-smart/2.2.1/json-smart-2.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/accessors-smart/1.1/accessors-smart-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/atteo/evo-inflector/1.2.1/evo-inflector-1.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/projectlombok/lombok/1.16.12/lombok-1.16.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.22/jcl-over-slf4j-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.8/logback-classic-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-core/1.1.8/logback-core-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-test/4.3.5.RELEASE/spring-test-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/joda-time/joda-time/2.9.7/joda-time-2.9.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/xmlunit/xmlunit/1.6/xmlunit-1.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-all/1.1.1/jadler-all-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-core/1.1.1/jadler-core-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-io/commons-io/2.4/commons-io-2.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-jetty/1.1.1/jadler-jetty-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-server/8.1.11.v20130520/jetty-server-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-continuation/8.1.11.v20130520/jetty-continuation-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-http/8.1.11.v20130520/jetty-http-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-io/8.1.11.v20130520/jetty-io-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-util/8.1.11.v20130520/jetty-util-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-junit/1.1.1/jadler-junit-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar]
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:257) - Error compiling: The method getRel() is undefined for the type Hop at /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java/org/springframework/hateoas/client/Traverson.java:379
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:263) - Astor continues when model build fails. Classes created: 84
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 235950 milliseconds (235 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/jayway/jsonpath/json-path/2.2.0/json-path-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/json-smart/2.2.1/json-smart-2.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/accessors-smart/1.1/accessors-smart-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/atteo/evo-inflector/1.2.1/evo-inflector-1.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/projectlombok/lombok/1.16.12/lombok-1.16.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.22/jcl-over-slf4j-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.8/logback-classic-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-core/1.1.8/logback-core-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-test/4.3.5.RELEASE/spring-test-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/joda-time/joda-time/2.9.7/joda-time-2.9.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/xmlunit/xmlunit/1.6/xmlunit-1.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-all/1.1.1/jadler-all-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-core/1.1.1/jadler-core-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-io/commons-io/2.4/commons-io-2.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-jetty/1.1.1/jadler-jetty-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-server/8.1.11.v20130520/jetty-server-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-continuation/8.1.11.v20130520/jetty-continuation-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-http/8.1.11.v20130520/jetty-http-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-io/8.1.11.v20130520/jetty-io-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-util/8.1.11.v20130520/jetty-util-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-junit/1.1.1/jadler-junit-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar]
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:243) - Problem compiling the model with compliance level 8
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:245) - The method getRel() is undefined for the type Hop at /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java/org/springframework/hateoas/client/Traverson.java:379
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:249) - Recompiling with compliance level 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/jayway/jsonpath/json-path/2.2.0/json-path-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/json-smart/2.2.1/json-smart-2.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/accessors-smart/1.1/accessors-smart-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/atteo/evo-inflector/1.2.1/evo-inflector-1.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/projectlombok/lombok/1.16.12/lombok-1.16.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.22/jcl-over-slf4j-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.8/logback-classic-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-core/1.1.8/logback-core-1.1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-test/4.3.5.RELEASE/spring-test-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/joda-time/joda-time/2.9.7/joda-time-2.9.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/xmlunit/xmlunit/1.6/xmlunit-1.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-all/1.1.1/jadler-all-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-core/1.1.1/jadler-core-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-io/commons-io/2.4/commons-io-2.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-jetty/1.1.1/jadler-jetty-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-server/8.1.11.v20130520/jetty-server-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-continuation/8.1.11.v20130520/jetty-continuation-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-http/8.1.11.v20130520/jetty-http-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-io/8.1.11.v20130520/jetty-io-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-util/8.1.11.v20130520/jetty-util-8.1.11.v20130520.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-junit/1.1.1/jadler-junit-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar]
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:257) - Error compiling: The method getRel() is undefined for the type Hop at /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/src/main/java/org/springframework/hateoas/client/Traverson.java:379
[ERROR] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:263) - Astor continues when model build fails. Classes created: 84
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 84
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 178
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 178,  172
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 172
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 172, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 235950
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/plugin/spring-plugin-core/1.2.0.RELEASE/spring-plugin-core-1.2.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/com/jayway/jsonpath/json-path/2.2.0/json-path-2.2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/json-smart/2.2.1/json-smart-2.2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/minidev/accessors-smart/1.1/accessors-smart-1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/ow2/asm/asm/5.0.3/asm-5.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/atteo/evo-inflector/1.2.1/evo-inflector-1.2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/projectlombok/lombok/1.16.12/lombok-1.16.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.22/jcl-over-slf4j-1.7.22.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-classic/1.1.8/logback-classic-1.1.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/ch/qos/logback/logback-core/1.1.8/logback-core-1.1.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/springframework/spring-test/4.3.5.RELEASE/spring-test-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/joda-time/joda-time/2.9.7/joda-time-2.9.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/xmlunit/xmlunit/1.6/xmlunit-1.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-all/1.1.1/jadler-all-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-core/1.1.1/jadler-core-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-io/commons-io/2.4/commons-io-2.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/commons-collections/commons-collections/3.2.1/commons-collections-3.2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-jetty/1.1.1/jadler-jetty-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-server/8.1.11.v20130520/jetty-server-8.1.11.v20130520.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-continuation/8.1.11.v20130520/jetty-continuation-8.1.11.v20130520.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-http/8.1.11.v20130520/jetty-http-8.1.11.v20130520.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-io/8.1.11.v20130520/jetty-io-8.1.11.v20130520.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/jetty-util/8.1.11.v20130520/jetty-util-8.1.11.v20130520.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/org/eclipse/jetty/orbit/javax.servlet/3.0.0.v201112011016/javax.servlet-3.0.0.v201112011016.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/net/jadler/jadler-junit/1.1.1/jadler-junit-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-spring-projects-spring-hateoas-235409911-20170523-234702-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.variables = (variables.isEmpty()) ? org.springframework.hateoas.TemplateVariables.NONE : new or[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 81, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.baseUri = template.substring(0, baseUriEndIndex) ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:294) - Error reading the validation process
 output: 
Europe/Paris

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 60, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.util.List<org.springframework.hateoas.TemplateVariable> variables = new java.util.ArrayList<org[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 62, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (matcher.find()) {  	int start = matcher.start(0);  	org.springframework.hateoas.TemplateVaria[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 56, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.hasText(template, "Template must not be null or empty!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 89, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.hasText(rel, "Rel must not be null or empty!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 91, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.template = template ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 88, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(template, "UriTempalte must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.hal.DefaultCurieProvider line: 81, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, org.springframework.hateoas.UriTemplate> entry : curies.e[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.hal.DefaultCurieProvider line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(curies, "Curies must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.hal.DefaultCurieProvider line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.hasText(name, "Curie name must not be null or empty!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.hal.DefaultCurieProvider line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(template, "UriTemplate must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 176, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.springframework.hateoas.TemplateVariable variable : variables) { 	names.add(variable.getNam[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 177, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `names.add(variable.getName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 187, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.springframework.hateoas.TemplateVariable.VariableType type : org.springframework.hateoas.Te[...] ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:294) - Error reading the validation process
 output: 
Europe/Paris

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.key.equals(key)) { 	return type; } ` -topatch--> `if (true) { 	return type; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.key.equals(key)) { 	return type; } ` -topatch--> `if (false) { 	return type; }` (spoon.support.reflect.code.CtIfImpl) 
[ERROR] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:294) - Error reading the validation process
 output: 
Europe/Paris

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.key.equals(key)) { 	return type; } ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:294) - Error reading the validation process
 output: 
Europe/Paris

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 189, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return type ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:294) - Error reading the validation process
 output: 
Europe/Paris

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `variables.add(variable) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!variable.isRequired()) && (start < baseUriEndIndex)) { 	baseUriEndIndex = start; } ` -topatch--> `if (true) { 	baseUriEndIndex = start; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!variable.isRequired()) && (start < baseUriEndIndex)) { 	baseUriEndIndex = start; } ` -topatch--> `if (false) { 	baseUriEndIndex = start; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!variable.isRequired()) && (start < baseUriEndIndex)) { 	baseUriEndIndex = start; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 69, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String name : names) { 	org.springframework.hateoas.TemplateVariable variable = new o[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariables line: 62, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(variables, "Template variables must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariables line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.variables = java.util.Collections.unmodifiableList(variables) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(name, type, "") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(description, "Description must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.type = type ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 70, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.description = description ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(type, "Variable type must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.hasText(name, "Variable name must not be null or empty!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.processors = new java.util.ArrayList<org.springframework.hateoas.mvc.ResourceProcessorInvoker.P[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 55, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(processors, "ResourceProcessors must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 202, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(processor, "Processor must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 204, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.processor = processor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 205, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.targetType = org.springframework.core.ResolvableType.forClass(org.springframework.hateoas.Resou[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 39, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.links = new java.util.ArrayList<org.springframework.hateoas.Link>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 59, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.springframework.hateoas.ResourceProcessor<?> processor : processors) {  	org.springframewor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.Resource.class.isAssignableFrom(rawType)) { 	this.processors.add(new[...] ` -topatch--> `if (true) { 	this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.Resour[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.Resource.class.isAssignableFrom(rawType)) { 	this.processors.add(new[...] ` -topatch--> `if (false) { 	this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.Resou[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 64, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.Resource.class.isAssignableFrom(rawType)) { 	this.processors.add(new[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 58, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(annotation, "Annotation must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.annotationType = annotation ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 61, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mappingAttributeName = mappingAttributeName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 47, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(annotation, null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.ResourceProcessorWr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 96, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(type, "Type must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 97, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(method, "Method must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(method, "Method must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(links, "Given links must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resource line: 65, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.content = content ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resource line: 64, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.isTrue(!(content instanceof java.util.Collection), "Content must not[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resource line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.add(links) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resource line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(content, java.util.Arrays.asList(links)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resource line: 63, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(content, "Content must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 73, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `baseUriEndIndex = start ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 165, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Object element : array) { 	links.add(new org.springframework.hateoas.Link(element.toS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationMappingDiscoverer line: 71, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(type, "Type must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (variables == null) { 	return this; } ` -topatch--> `if (true) { 	return this; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (variables == null) { 	return this; } ` -topatch--> `if (false) { 	return this; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 106, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (variables == null) { 	return this; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceAssemblerSupport line: 47, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(controllerClass, "ControllerClass must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceAssemblerSupport line: 48, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(resourceType, "ResourceType must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceAssemblerSupport line: 50, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.controllerClass = controllerClass ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceAssemblerSupport line: 51, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceType = resourceType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.IdentifiableResourceAssemblerSupport line: 49, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.controllerClass = controllerClass ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 120, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return createLinksFrom(parseResult, rel) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 289, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (matcher.find()) { 	attributes.put(matcher.group(1), matcher.group(2)); }  ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 290, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `attributes.put(matcher.group(1), matcher.group(2)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.hasText(source)) { 	return java.util.Collections.emptyMap([...] ` -topatch--> `if (true) { 	return java.util.Collections.emptyMap(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.hasText(source)) { 	return java.util.Collections.emptyMap([...] ` -topatch--> `if (false) { 	return java.util.Collections.emptyMap(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.hasText(source)) { 	return java.util.Collections.emptyMap([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 266, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.springframework.hateoas.Link(matcher.group(1), attributes.get("rel")) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 262, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!attributes.containsKey("rel")) { 	throw new java.lang.IllegalArgumentException("Link does not p[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Link does not provide a rel attribute!");[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 262, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!attributes.containsKey("rel")) { 	throw new java.lang.IllegalArgumentException("Link does not p[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Link does not provide a rel attribute!")[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 262, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!attributes.containsKey("rel")) { 	throw new java.lang.IllegalArgumentException("Link does not p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 222, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(parameters, "Parameters must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.TemplateVariables.NONE.equals(variables)) { 	return java.net.URI.cre[...] ` -topatch--> `if (true) { 	return java.net.URI.create(this.baseUri); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.TemplateVariables.NONE.equals(variables)) { 	return java.net.URI.cre[...] ` -topatch--> `if (false) { 	return java.net.URI.create(this.baseUri); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 218, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.TemplateVariables.NONE.equals(variables)) { 	return java.net.URI.cre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 160, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parseResult instanceof net.minidev.json.JSONArray) {  	java.util.List<org.springframework.hateoa[...] ` -topatch--> `if (true) {  	java.util.List<org.springframework.hateoas.Link> links = new java.util.ArrayList<org.s[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 160, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parseResult instanceof net.minidev.json.JSONArray) {  	java.util.List<org.springframework.hateoa[...] ` -topatch--> `if (false) {  	java.util.List<org.springframework.hateoas.Link> links = new java.util.ArrayList<org.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 160, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parseResult instanceof net.minidev.json.JSONArray) {  	java.util.List<org.springframework.hateoa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.SimpleResourceAssembler line: 55, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(entities, "Entities must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 193, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.TemplateVariables.NONE.equals(variables)) { 	return java.net.URI.cre[...] ` -topatch--> `if (true) { 	return java.net.URI.create(this.baseUri); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 193, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.TemplateVariables.NONE.equals(variables)) { 	return java.net.URI.cre[...] ` -topatch--> `if (false) { 	return java.net.URI.create(this.baseUri); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.UriTemplate line: 193, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.TemplateVariables.NONE.equals(variables)) { 	return java.net.URI.cre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.SimpleResourceAssembler line: 58, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (T entity : entities) { 	result.add(toResource(entity)); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ControllerLinkBuilder line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(controller, "Controller must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ControllerLinkBuilder line: 117, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(parameters, "Parameters must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.Resources.class.isAssignableFrom(rawType)) { 	this.processors.add(ne[...] ` -topatch--> `if (true) { 	this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.Resour[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.Resources.class.isAssignableFrom(rawType)) { 	this.processors.add(ne[...] ` -topatch--> `if (false) { 	this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.Resou[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.hateoas.Resources.class.isAssignableFrom(rawType)) { 	this.processors.add(ne[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resource line: 42, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.content = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.SimpleIdentifiableResourceAssembler line: 73, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceType = org.springframework.core.GenericTypeResolver.resolveTypeArgument(this.getClass()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.SimpleIdentifiableResourceAssembler line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.controllerClass = controllerClass ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.SimpleIdentifiableResourceAssembler line: 70, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.relProvider = relProvider ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (matcher.find()) {  	java.util.Map<java.lang.String, java.lang.String> attributes = org.springfra[...] ` -topatch--> `if (true) {  	java.util.Map<java.lang.String, java.lang.String> attributes = org.springframework.hat[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (matcher.find()) {  	java.util.Map<java.lang.String, java.lang.String> attributes = org.springfra[...] ` -topatch--> `if (false) {  	java.util.Map<java.lang.String, java.lang.String> attributes = org.springframework.ha[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (matcher.find()) {  	java.util.Map<java.lang.String, java.lang.String> attributes = org.springfra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resources line: 74, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.add(links) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resources line: 67, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(content, "Content must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resources line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.content = new java.util.ArrayList<T>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariables line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(java.util.Arrays.asList(variables)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resources line: 56, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(content, java.util.Arrays.asList(links)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 251, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.hasText(element)) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 251, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.hasText(element)) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Link line: 251, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.hasText(element)) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resources line: 71, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (T element : content) { 	this.content.add(element); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Resources line: 72, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.content.add(element) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 74, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `GET_INVOCATIONS = org.springframework.util.ReflectionUtils.findMethod(org.springframework.hateoas.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 75, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `GET_OBJECT_PARAMETERS = org.springframework.util.ReflectionUtils.findMethod(org.springframework.hate[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 88, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(parameters, "Parameters must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(targetType, "Target type must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 90, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.targetType = targetType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 91, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.objectParameters = parameters.clone() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 157, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(type, "Given type must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.isInterface()) {  	org.springframework.aop.framework.ProxyFactory factory = new org.springf[...] ` -topatch--> `if (true) {  	org.springframework.aop.framework.ProxyFactory factory = new org.springframework.aop.f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.isInterface()) {  	org.springframework.aop.framework.ProxyFactory factory = new org.springf[...] ` -topatch--> `if (false) {  	org.springframework.aop.framework.ProxyFactory factory = new org.springframework.aop.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DummyInvocationUtils line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.isInterface()) {  	org.springframework.aop.framework.ProxyFactory factory = new org.springf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 162, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.key = key ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.TemplateVariable line: 163, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.optional = optional ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DelegatingRelProvider line: 31, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(providers, "RelProviders must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.DelegatingRelProvider line: 32, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.providers = providers ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 67, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.ResourcesProcessorW[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorInvoker line: 69, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.processors.add(new org.springframework.hateoas.mvc.ResourceProcessorInvoker.DefaultProcessorWra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.Links line: 47, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.links = (links == null) ? java.util.Collections.<org.springframework.hateoas.Link>emptyList() :[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationRelProvider line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (relation != null) { 	return relation; } ` -topatch--> `if (true) { 	return relation; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationRelProvider line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (relation != null) { 	return relation; } ` -topatch--> `if (false) { 	return relation; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.AnnotationRelProvider line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (relation != null) { 	return relation; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ControllerLinkBuilder line: 322, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `setStrictEncoding(true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.mvc.ResourceProcessorHandlerMethodReturnValueHandler line: 54, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.ReflectionUtils.makeAccessible(org.springframework.hateoas.mvc.ResourceProc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 171, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 57, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(content, metadata, java.util.Arrays.asList(links)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.metadata = metadata ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 85, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pathTemplate = pathTemplate ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.isTrue(org.springframework.util.StringUtils.countOccurrencesOf(pathT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 86, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mediaType = mediaType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.EmbeddedWrappers line: 276, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.type = type ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.EmbeddedWrappers line: 275, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.notNull(type, "Element type must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.JsonPathLinkDiscoverer line: 81, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.hasText(pathTemplate, "Path template must not be null!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 209, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(size, number, totalElements, size == 0 ? 0 : ((long) (java.lang.Math.ceil(((double) (totalEleme[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 198, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.totalPages = totalPages ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 195, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.size = size ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 196, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.number = number ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 197, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.totalElements = totalElements ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 193, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.isTrue(totalPages > (-1), "Total pages must not be negative!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.core.EmbeddedWrappers line: 40, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.preferCollections = preferCollections ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 192, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.isTrue(totalElements > (-1), "Total elements must not be negative!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 191, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.isTrue(number > (-1), "Number must not be negative!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.PagedResources line: 190, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.Assert.isTrue(size > (-1), "Size must not be negative!") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 174, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((obj == null) || (!obj.getClass().equals(this.getClass()))) { 	return false; } ` -topatch--> `if (true) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 174, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((obj == null) || (!obj.getClass().equals(this.getClass()))) { 	return false; } ` -topatch--> `if (false) { 	return false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 174, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((obj == null) || (!obj.getClass().equals(this.getClass()))) { 	return false; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.springframework.hateoas.ResourceSupport line: 170, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this == obj) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 1216.971
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:255) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:265) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 1256.288
