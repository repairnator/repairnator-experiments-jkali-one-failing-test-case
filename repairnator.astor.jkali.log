[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 63
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/phoenixnap/oss/springmvc-raml-annotations/0.10.13/springmvc-raml-annotations-0.10.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-core/4.1.4.RELEASE/spring-security-core-4.1.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/guava/guava/17.0/guava-17.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/javaparser/javaparser-core/2.4.0/javaparser-core-2.4.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/raml-parser/0.8.17/raml-parser-0.8.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/slf4j/slf4j-log4j12/1.7.22/slf4j-log4j12-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/json-schema-validator/2.2.6/json-schema-validator-2.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/googlecode/libphonenumber/libphonenumber/6.2/libphonenumber-6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/json-schema-core/1.2.5/json-schema-core-1.2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/uri-template/0.9/uri-template-0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/msg-simple/1.1/msg-simple-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/btf/1.2/btf-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/jackson-coreutils/1.8/jackson-coreutils-1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mozilla/rhino/1.7R4/rhino-1.7R4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/mail/mailapi/1.4.3/mailapi-1.4.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/activation/activation/1.1.1/activation-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/net/sf/jopt-simple/jopt-simple/5.0.3/jopt-simple-5.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/raml-parser-2/1.0.9/raml-parser-2-1.0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/yagi/1.0.9/yagi-1.0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/ws/xmlschema/xmlschema-core/2.2.1/xmlschema-core-2.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/reflections/reflections/0.9.10/reflections-0.9.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/findbugs/annotations/2.0.3/annotations-2.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/module/jackson-module-jsonSchema/2.8.6/jackson-module-jsonSchema-2.8.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.8.6/jackson-datatype-jsr310-2.8.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/jsonschema2pojo/jsonschema2pojo-core/0.4.31/jsonschema2pojo-core-0.4.31.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/javaparser/javaparser/1.0.11/javaparser-1.0.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/android/android/4.1.1.4/android-4.1.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/khronos/opengl-api/gl1.1-android-2.1_r1/opengl-api-gl1.1-android-2.1_r1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/xpp3/xpp3/1.1.4c/xpp3-1.1.4c.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/json/json/20140107/json-20140107.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/gson/gson/2.7/gson-2.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/squareup/moshi/moshi/1.1.0/moshi-1.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/squareup/okio/okio/1.6.0/okio-1.6.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/joda-time/joda-time/2.9.6/joda-time-2.9.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/codemodel/codemodel/2.6/codemodel-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-feign/1.1.6.RELEASE/spring-cloud-starter-feign-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter/1.1.2.RELEASE/spring-cloud-starter-1.1.2.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot-starter/1.4.3.RELEASE/spring-boot-starter-1.4.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-context/1.1.2.RELEASE/spring-cloud-context-1.1.2.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-rsa/1.0.1.RELEASE/spring-security-rsa-1.0.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/bouncycastle/bcpkix-jdk15on/1.54/bcpkix-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.54/bcprov-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-netflix-core/1.1.6.RELEASE/spring-cloud-netflix-core-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot/1.4.3.RELEASE/spring-boot-1.4.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/1.4.3.RELEASE/spring-boot-autoconfigure-1.4.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-commons/1.1.2.RELEASE/spring-cloud-commons-1.1.2.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-crypto/4.1.4.RELEASE/spring-security-crypto-4.1.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-core/8.16.2/feign-core-8.16.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/jvnet/animal-sniffer-annotation/1.0/animal-sniffer-annotation-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-slf4j/8.16.2/feign-slf4j-8.16.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-hystrix/8.16.2/feign-hystrix-8.16.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/hystrix/hystrix-core/1.4.21/hystrix-core-1.4.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-ribbon/1.1.6.RELEASE/spring-cloud-starter-ribbon-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon/2.2.0/ribbon-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-transport/2.2.0/ribbon-transport-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/inject/javax.inject/1/javax.inject-1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-codec-http/4.0.27.Final/netty-codec-http-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-codec/4.0.27.Final/netty-codec-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-handler/4.0.27.Final/netty-handler-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.0.27.Final/netty-transport-native-epoll-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-common/4.0.27.Final/netty-common-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-buffer/4.0.27.Final/netty-buffer-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-transport/4.0.27.Final/netty-transport-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-core/2.2.0/ribbon-core-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-httpclient/2.2.0/ribbon-httpclient-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/servo/servo-core/0.10.1/servo-core-0.10.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/servo/servo-internal/0.10.1/servo-internal-0.10.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/netflix-commons/netflix-commons-util/0.1.1/netflix-commons-util-0.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-loadbalancer/2.2.0/ribbon-loadbalancer-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxjava/1.1.5/rxjava-1.1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-archaius/1.1.6.RELEASE/spring-cloud-starter-archaius-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/archaius/archaius-core/0.7.4/archaius-core-0.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/objenesis/objenesis/2.4/objenesis-2.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-module-junit4/1.6.2/powermock-module-junit4-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-module-junit4-common/1.6.2/powermock-module-junit4-common-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-core/1.6.2/powermock-core-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-reflect/1.6.2/powermock-reflect-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-api-mockito/1.6.2/powermock-api-mockito-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-api-support/1.6.2/powermock-api-support-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 293350 milliseconds (293 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/phoenixnap/oss/springmvc-raml-annotations/0.10.13/springmvc-raml-annotations-0.10.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-core/4.1.4.RELEASE/spring-security-core-4.1.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/guava/guava/17.0/guava-17.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/javaparser/javaparser-core/2.4.0/javaparser-core-2.4.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/raml-parser/0.8.17/raml-parser-0.8.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/slf4j/slf4j-log4j12/1.7.22/slf4j-log4j12-1.7.22.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/json-schema-validator/2.2.6/json-schema-validator-2.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/googlecode/libphonenumber/libphonenumber/6.2/libphonenumber-6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/json-schema-core/1.2.5/json-schema-core-1.2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/uri-template/0.9/uri-template-0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/msg-simple/1.1/msg-simple-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/btf/1.2/btf-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/jackson-coreutils/1.8/jackson-coreutils-1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mozilla/rhino/1.7R4/rhino-1.7R4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/mail/mailapi/1.4.3/mailapi-1.4.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/activation/activation/1.1.1/activation-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/net/sf/jopt-simple/jopt-simple/5.0.3/jopt-simple-5.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/raml-parser-2/1.0.9/raml-parser-2-1.0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/yagi/1.0.9/yagi-1.0.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/ws/xmlschema/xmlschema-core/2.2.1/xmlschema-core-2.2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/reflections/reflections/0.9.10/reflections-0.9.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/findbugs/annotations/2.0.3/annotations-2.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/module/jackson-module-jsonSchema/2.8.6/jackson-module-jsonSchema-2.8.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.8.6/jackson-datatype-jsr310-2.8.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/jsonschema2pojo/jsonschema2pojo-core/0.4.31/jsonschema2pojo-core-0.4.31.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/javaparser/javaparser/1.0.11/javaparser-1.0.11.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/android/android/4.1.1.4/android-4.1.1.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/khronos/opengl-api/gl1.1-android-2.1_r1/opengl-api-gl1.1-android-2.1_r1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/xpp3/xpp3/1.1.4c/xpp3-1.1.4c.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/json/json/20140107/json-20140107.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/gson/gson/2.7/gson-2.7.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/squareup/moshi/moshi/1.1.0/moshi-1.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/squareup/okio/okio/1.6.0/okio-1.6.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/joda-time/joda-time/2.9.6/joda-time-2.9.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/codemodel/codemodel/2.6/codemodel-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-feign/1.1.6.RELEASE/spring-cloud-starter-feign-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter/1.1.2.RELEASE/spring-cloud-starter-1.1.2.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot-starter/1.4.3.RELEASE/spring-boot-starter-1.4.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-context/1.1.2.RELEASE/spring-cloud-context-1.1.2.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-rsa/1.0.1.RELEASE/spring-security-rsa-1.0.1.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/bouncycastle/bcpkix-jdk15on/1.54/bcpkix-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.54/bcprov-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-netflix-core/1.1.6.RELEASE/spring-cloud-netflix-core-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot/1.4.3.RELEASE/spring-boot-1.4.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/1.4.3.RELEASE/spring-boot-autoconfigure-1.4.3.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-commons/1.1.2.RELEASE/spring-cloud-commons-1.1.2.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-crypto/4.1.4.RELEASE/spring-security-crypto-4.1.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-core/8.16.2/feign-core-8.16.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/jvnet/animal-sniffer-annotation/1.0/animal-sniffer-annotation-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-slf4j/8.16.2/feign-slf4j-8.16.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-hystrix/8.16.2/feign-hystrix-8.16.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/hystrix/hystrix-core/1.4.21/hystrix-core-1.4.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-ribbon/1.1.6.RELEASE/spring-cloud-starter-ribbon-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon/2.2.0/ribbon-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-transport/2.2.0/ribbon-transport-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/inject/javax.inject/1/javax.inject-1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-codec-http/4.0.27.Final/netty-codec-http-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-codec/4.0.27.Final/netty-codec-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-handler/4.0.27.Final/netty-handler-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.0.27.Final/netty-transport-native-epoll-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-common/4.0.27.Final/netty-common-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-buffer/4.0.27.Final/netty-buffer-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-transport/4.0.27.Final/netty-transport-4.0.27.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-core/2.2.0/ribbon-core-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-httpclient/2.2.0/ribbon-httpclient-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/servo/servo-core/0.10.1/servo-core-0.10.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/servo/servo-internal/0.10.1/servo-internal-0.10.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/netflix-commons/netflix-commons-util/0.1.1/netflix-commons-util-0.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-loadbalancer/2.2.0/ribbon-loadbalancer-2.2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxjava/1.1.5/rxjava-1.1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-archaius/1.1.6.RELEASE/spring-cloud-starter-archaius-1.1.6.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/archaius/archaius-core/0.7.4/archaius-core-0.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/objenesis/objenesis/2.4/objenesis-2.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-module-junit4/1.6.2/powermock-module-junit4-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-module-junit4-common/1.6.2/powermock-module-junit4-common-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-core/1.6.2/powermock-core-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-reflect/1.6.2/powermock-reflect-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-api-mockito/1.6.2/powermock-api-mockito-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-api-support/1.6.2/powermock-api-support-1.6.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 170
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 1000
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 1000,  973
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 973
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 973, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 293350
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/phoenixnap/oss/springmvc-raml-annotations/0.10.13/springmvc-raml-annotations-0.10.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-webmvc/4.3.5.RELEASE/spring-webmvc-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-aop/4.3.5.RELEASE/spring-aop-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-beans/4.3.5.RELEASE/spring-beans-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-core/4.3.5.RELEASE/spring-core-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-expression/4.3.5.RELEASE/spring-expression-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-context/4.3.5.RELEASE/spring-context-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/spring-web/4.3.5.RELEASE/spring-web-4.3.5.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-core/4.1.4.RELEASE/spring-security-core-4.1.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/guava/guava/17.0/guava-17.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/javaparser/javaparser-core/2.4.0/javaparser-core-2.4.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/raml-parser/0.8.17/raml-parser-0.8.17.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/yaml/snakeyaml/1.17/snakeyaml-1.17.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-beanutils/commons-beanutils/1.9.3/commons-beanutils-1.9.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-collections/commons-collections/3.2.2/commons-collections-3.2.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/slf4j/slf4j-api/1.7.22/slf4j-api-1.7.22.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/slf4j/slf4j-log4j12/1.7.22/slf4j-log4j12-1.7.22.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/json-schema-validator/2.2.6/json-schema-validator-2.2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/googlecode/libphonenumber/libphonenumber/6.2/libphonenumber-6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/json-schema-core/1.2.5/json-schema-core-1.2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/uri-template/0.9/uri-template-0.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/msg-simple/1.1/msg-simple-1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/btf/1.2/btf-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/github/fge/jackson-coreutils/1.8/jackson-coreutils-1.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mozilla/rhino/1.7R4/rhino-1.7R4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/mail/mailapi/1.4.3/mailapi-1.4.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/activation/activation/1.1.1/activation-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/net/sf/jopt-simple/jopt-simple/5.0.3/jopt-simple-5.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/googlecode/juniversalchardet/juniversalchardet/1.0.3/juniversalchardet-1.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/raml-parser-2/1.0.9/raml-parser-2-1.0.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/raml/yagi/1.0.9/yagi-1.0.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/ws/xmlschema/xmlschema-core/2.2.1/xmlschema-core-2.2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/reflections/reflections/0.9.10/reflections-0.9.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/javassist/javassist/3.20.0-GA/javassist-3.20.0-GA.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/findbugs/annotations/2.0.3/annotations-2.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.8.5/jackson-annotations-2.8.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.8.5/jackson-core-2.8.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/module/jackson-module-jsonSchema/2.8.6/jackson-module-jsonSchema-2.8.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.8.5/jackson-databind-2.8.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/validation/validation-api/1.1.0.Final/validation-api-1.1.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.8.6/jackson-datatype-jsr310-2.8.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/jsonschema2pojo/jsonschema2pojo-core/0.4.31/jsonschema2pojo-core-0.4.31.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/javaparser/javaparser/1.0.11/javaparser-1.0.11.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/android/android/4.1.1.4/android-4.1.1.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-logging/commons-logging/1.2/commons-logging-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.2/httpclient-4.5.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/khronos/opengl-api/gl1.1-android-2.1_r1/opengl-api-gl1.1-android-2.1_r1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/xerces/xmlParserAPIs/2.6.2/xmlParserAPIs-2.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/xpp3/xpp3/1.1.4c/xpp3-1.1.4c.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/json/json/20140107/json-20140107.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/gson/gson/2.7/gson-2.7.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.1/jsr305-3.0.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/squareup/moshi/moshi/1.1.0/moshi-1.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/squareup/okio/okio/1.6.0/okio-1.6.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/joda-time/joda-time/2.9.6/joda-time-2.9.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/codemodel/codemodel/2.6/codemodel-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-feign/1.1.6.RELEASE/spring-cloud-starter-feign-1.1.6.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter/1.1.2.RELEASE/spring-cloud-starter-1.1.2.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot-starter/1.4.3.RELEASE/spring-boot-starter-1.4.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-context/1.1.2.RELEASE/spring-cloud-context-1.1.2.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-rsa/1.0.1.RELEASE/spring-security-rsa-1.0.1.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/bouncycastle/bcpkix-jdk15on/1.54/bcpkix-jdk15on-1.54.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.54/bcprov-jdk15on-1.54.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-netflix-core/1.1.6.RELEASE/spring-cloud-netflix-core-1.1.6.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot/1.4.3.RELEASE/spring-boot-1.4.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/boot/spring-boot-autoconfigure/1.4.3.RELEASE/spring-boot-autoconfigure-1.4.3.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-commons/1.1.2.RELEASE/spring-cloud-commons-1.1.2.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/security/spring-security-crypto/4.1.4.RELEASE/spring-security-crypto-4.1.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-core/8.16.2/feign-core-8.16.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/jvnet/animal-sniffer-annotation/1.0/animal-sniffer-annotation-1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-slf4j/8.16.2/feign-slf4j-8.16.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/feign/feign-hystrix/8.16.2/feign-hystrix-8.16.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/hystrix/hystrix-core/1.4.21/hystrix-core-1.4.21.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-ribbon/1.1.6.RELEASE/spring-cloud-starter-ribbon-1.1.6.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon/2.2.0/ribbon-2.2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-transport/2.2.0/ribbon-transport-2.2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty-contexts/0.4.9/rxnetty-contexts-0.4.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty-servo/0.4.9/rxnetty-servo-0.4.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/inject/javax.inject/1/javax.inject-1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxnetty/0.4.9/rxnetty-0.4.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-codec-http/4.0.27.Final/netty-codec-http-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-codec/4.0.27.Final/netty-codec-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-handler/4.0.27.Final/netty-handler-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.0.27.Final/netty-transport-native-epoll-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-common/4.0.27.Final/netty-common-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-buffer/4.0.27.Final/netty-buffer-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/netty/netty-transport/4.0.27.Final/netty-transport-4.0.27.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-core/2.2.0/ribbon-core-2.2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-httpclient/2.2.0/ribbon-httpclient-2.2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/jersey-client/1.19.1/jersey-client-1.19.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/jersey-core/1.19.1/jersey-core-1.19.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/javax/ws/rs/jsr311-api/1.1.1/jsr311-api-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/sun/jersey/contribs/jersey-apache-client4/1.19.1/jersey-apache-client4-1.19.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/servo/servo-core/0.10.1/servo-core-0.10.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/servo/servo-internal/0.10.1/servo-internal-0.10.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/netflix-commons/netflix-commons-util/0.1.1/netflix-commons-util-0.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/ribbon/ribbon-loadbalancer/2.2.0/ribbon-loadbalancer-2.2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/netflix-commons/netflix-statistics/0.1.1/netflix-statistics-0.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/io/reactivex/rxjava/1.1.5/rxjava-1.1.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/springframework/cloud/spring-cloud-starter-archaius/1.1.6.RELEASE/spring-cloud-starter-archaius-1.1.6.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/com/netflix/archaius/archaius-core/0.7.4/archaius-core-0.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/commons-configuration/commons-configuration/1.8/commons-configuration-1.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/objenesis/objenesis/2.4/objenesis-2.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-module-junit4/1.6.2/powermock-module-junit4-1.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-module-junit4-common/1.6.2/powermock-module-junit4-common-1.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-core/1.6.2/powermock-core-1.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-reflect/1.6.2/powermock-reflect-1.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-api-mockito/1.6.2/powermock-api-mockito-1.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/mockito/mockito-all/1.10.19/mockito-all-1.10.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/powermock/powermock-api-support/1.6.2/powermock-api-support-1.6.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/.m2/org/hamcrest/hamcrest-all/1.3/hamcrest-all-1.3.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-phoenixnap-springmvc-raml-plugin-322722110-20171229-010421-firstCommit/springmvc-raml-parser
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.parser.ResourceParser line: 374, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.parser.ResourceParser.logger.info(("Parsing resource: " + clazz.getSi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 55, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (ramlVersion) { 	case V08 : 		return new com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.parser.ResourceParser line: 75, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultMediaType = defaultMediaType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.parser.ResourceParser line: 76, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.javaDocs = new com.phoenixnap.oss.ramlapisync.javadoc.JavaDocExtractor(javaDocPath) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.parser.ResourceParser line: 74, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.version = version ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.parser.SpringMvcResourceParser line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.restrictOnMediaType = restrictOnMediaType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.javadoc.JavaDocExtractor line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.baseDir = baseDir ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.javadoc.JavaDocExtractor line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((baseDir != null) && ((baseDir.exists() == false) || (!baseDir.isDirectory()))) { 	baseDir = nul[...] ` -topatch--> `if (true) { 	baseDir = null; 	throw new java.lang.IllegalStateException("Base Directory Does not exi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.javadoc.JavaDocExtractor line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((baseDir != null) && ((baseDir.exists() == false) || (!baseDir.isDirectory()))) { 	baseDir = nul[...] ` -topatch--> `if (false) { 	baseDir = null; 	throw new java.lang.IllegalStateException("Base Directory Does not ex[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.javadoc.JavaDocExtractor line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((baseDir != null) && ((baseDir.exists() == false) || (!baseDir.isDirectory()))) { 	baseDir = nul[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!org.springframework.util.StringUtils.isEmpty(arrayItem)) && arrayItem.endsWith("[]")) { 	array[...] ` -topatch--> `if (true) { 	arrayItem = arrayItem.substring(0, arrayItem.length() - 2); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!org.springframework.util.StringUtils.isEmpty(arrayItem)) && arrayItem.endsWith("[]")) { 	array[...] ` -topatch--> `if (false) { 	arrayItem = arrayItem.substring(0, arrayItem.length() - 2); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!org.springframework.util.StringUtils.isEmpty(arrayItem)) && arrayItem.endsWith("[]")) { 	array[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 47, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `typeCheck(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validations.withLenghts(arrayType.minItems(), arrayType.maxItems()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (builderModel != null) { 	java.lang.String arrayItem = arrayType.items().name(); 	if ((!org.sprin[...] ` -topatch--> `if (true) { 	java.lang.String arrayItem = arrayType.items().name(); 	if ((!org.springframework.util.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (builderModel != null) { 	java.lang.String arrayItem = arrayType.items().name(); 	if ((!org.sprin[...] ` -topatch--> `if (false) { 	java.lang.String arrayItem = arrayType.items().name(); 	if ((!org.springframework.util[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (builderModel != null) { 	java.lang.String arrayItem = arrayType.items().name(); 	if ((!org.sprin[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof org.raml.v2.api.model.v10.datamodel.ArrayTypeDeclaration) { 	org.raml.v2.api.mod[...] ` -topatch--> `if (true) { 	org.raml.v2.api.model.v10.datamodel.ArrayTypeDeclaration arrayType = ((org.raml.v2.api.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof org.raml.v2.api.model.v10.datamodel.ArrayTypeDeclaration) { 	org.raml.v2.api.mod[...] ` -topatch--> `if (false) { 	org.raml.v2.api.model.v10.datamodel.ArrayTypeDeclaration arrayType = ((org.raml.v2.api[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ArrayTypeInterpreter line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type instanceof org.raml.v2.api.model.v10.datamodel.ArrayTypeDeclaration) { 	org.raml.v2.api.mod[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.parser.ResourceParser line: 104, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.javaDocs = javaDocs ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `raml.setTitle(title) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 101, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `raml.setVersion(version) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 96, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `raml.setBaseUri(baseUri) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `assertResourceParser() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `raml.setBaseUri(baseUri) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 115, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `raml.setVersion(version) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 113, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `com.phoenixnap.oss.ramlapisync.raml.RamlRoot raml = com.phoenixnap.oss.ramlapisync.raml.RamlModelFac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((documents != null) && (documents.size() > 0)) { 	raml.setDocumentation(generateDocuments(docume[...] ` -topatch--> `if (true) { 	raml.setDocumentation(generateDocuments(documents)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((documents != null) && (documents.size() > 0)) { 	raml.setDocumentation(generateDocuments(docume[...] ` -topatch--> `if (false) { 	raml.setDocumentation(generateDocuments(documents)); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 118, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((documents != null) && (documents.size() > 0)) { 	raml.setDocumentation(generateDocuments(docume[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `raml.setTitle(title) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.generation.RamlGenerator.logger.info(((((("Generating Raml for " + ti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scanner == null) { 	throw new java.lang.IllegalStateException("Please make sure to setup a Resou[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Please make sure to setup a ResourceParser b[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scanner == null) { 	throw new java.lang.IllegalStateException("Please make sure to setup a Resou[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Please make sure to setup a ResourceParser [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 143, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scanner == null) { 	throw new java.lang.IllegalStateException("Please make sure to setup a Resou[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 28, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class<?> typeClass : getSupportedTypes()) { 	if (typeClass.isAssignableFrom(type.getC[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (typeClass.isAssignableFrom(type.getClass())) { 	found = true; 	break; } ` -topatch--> `if (true) { 	found = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (typeClass.isAssignableFrom(type.getClass())) { 	found = true; 	break; } ` -topatch--> `if (false) { 	found = true; 	break; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 29, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (typeClass.isAssignableFrom(type.getClass())) { 	found = true; 	break; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 30, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `found = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 31, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 34, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!found) { 	throw new java.lang.IllegalStateException("This type is not supported by this interpr[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("This type is not supported by this interpret[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 34, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!found) { 	throw new java.lang.IllegalStateException("This type is not supported by this interpr[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("This type is not supported by this interpre[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.BaseTypeInterpreter line: 34, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!found) { 	throw new java.lang.IllegalStateException("This type is not supported by this interpr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlResource line: 44, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resource = resource ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resource == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resource == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory line: 94, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (resource == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.minLength = minLength ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 54, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxLength = maxLength ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((required == null) || (required == true)) { 	this.required = true; } else { 	this.required = fal[...] ` -topatch--> `if (true) { 	this.required = true; } else { 	this.required = false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((required == null) || (required == true)) { 	this.required = true; } else { 	this.required = fal[...] ` -topatch--> `if (false) { 	this.required = true; } else { 	this.required = false; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((required == null) || (required == true)) { 	this.required = true; } else { 	this.required = fal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 46, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.required = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.Class<?>) { 	return ((java.lang.Class<?>) (obj)).getSimpleName(); } els[...] ` -topatch--> `if (true) { 	return ((java.lang.Class<?>) (obj)).getSimpleName(); } else { 	return obj.getClass().ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.Class<?>) { 	return ((java.lang.Class<?>) (obj)).getSimpleName(); } els[...] ` -topatch--> `if (false) { 	return ((java.lang.Class<?>) (obj)).getSimpleName(); } else { 	return obj.getClass().g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (obj instanceof java.lang.Class<?>) { 	return ((java.lang.Class<?>) (obj)).getSimpleName(); } els[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 60, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return obj.getClass().getSimpleName() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 74, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 73, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.interpreterCache.put(type.getClass(), int[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 72, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `interpreter = com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.interpreters.get(key) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (key.isAssignableFrom(type.getClass())) { 	interpreter = com.phoenixnap.oss.ramlapisync.pojo.Raml[...] ` -topatch--> `if (true) { 	interpreter = com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.interpreters.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (key.isAssignableFrom(type.getClass())) { 	interpreter = com.phoenixnap.oss.ramlapisync.pojo.Raml[...] ` -topatch--> `if (false) { 	interpreter = com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.interpreters.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (key.isAssignableFrom(type.getClass())) { 	interpreter = com.phoenixnap.oss.ramlapisync.pojo.Raml[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (interpreter == null) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.logger.error([...] ` -topatch--> `if (true) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.logger.error((("Missing Inte[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (interpreter == null) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.logger.error([...] ` -topatch--> `if (false) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.logger.error((("Missing Int[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (interpreter == null) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory.logger.error([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (interpreter != null) { 	return interpreter; } ` -topatch--> `if (true) { 	return interpreter; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (interpreter != null) { 	return interpreter; } ` -topatch--> `if (false) { 	return interpreter; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (interpreter != null) { 	return interpreter; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpreterFactory line: 70, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.Class<? extends org.raml.v2.api.model.v10.datamodel.TypeDeclaration> key : com.phoeni[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpretationResult line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `validations = new com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations(required) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResponse line: 39, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.response = response ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResponse line: 40, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResponse.ramlModelFactory.transformToUnm[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (response == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (response == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (response == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlDataType line: 33, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dataType = dataType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 192, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type == null) { 	return null; } else { 	return type.name(); } ` -topatch--> `if (true) { 	return null; } else { 	return type.name(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 192, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type == null) { 	return null; } else { 	return type.name(); } ` -topatch--> `if (false) { 	return null; } else { 	return type.name(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 192, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type == null) { 	return null; } else { 	return type.name(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 195, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return type.name() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 83, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlGenerator line: 84, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scanner = scanner ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mimeType == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mimeType == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 135, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mimeType == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlMimeType line: 46, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mimeType = mimeType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.isVersion10() &&  ((ramlVersion == null) || com.phoenixnap.oss.ramlapisync.raml.[...] ` -topatch--> `if (true)  { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.info("RJP10V2Ra[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.isVersion10() &&  ((ramlVersion == null) || com.phoenixnap.oss.ramlapisync.raml.[...] ` -topatch--> `if (false)  { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.info("RJP10V2R[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.isVersion10() &&  ((ramlVersion == null) || com.phoenixnap.oss.ramlapisync.raml.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.hasErrors()) { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.[...] ` -topatch--> `if (true) { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.error("Loaded RA[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.hasErrors()) { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.[...] ` -topatch--> `if (false) { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.error("Loaded R[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.hasErrors()) { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.RamlLoader line: 45, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.createRamlModelFactoryFor(ram[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlAction line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.method = method ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resource == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resource == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (resource == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 44, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resources != null) { 	for (org.raml.v2.api.model.v10.resources.Resource resource : resources) { [...] ` -topatch--> `if (true) { 	for (org.raml.v2.api.model.v10.resources.Resource resource : resources) { 		this.childR[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 44, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resources != null) { 	for (org.raml.v2.api.model.v10.resources.Resource resource : resources) { [...] ` -topatch--> `if (false) { 	for (org.raml.v2.api.model.v10.resources.Resource resource : resources) { 		this.child[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 44, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (resources != null) { 	for (org.raml.v2.api.model.v10.resources.Resource resource : resources) { [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 42, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `childResourceMap = new java.util.LinkedHashMap<java.lang.String, com.phoenixnap.oss.ramlapisync.raml[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 36, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.delegate = resource ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 38, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `rebuildChildren() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 49, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (api != null) { 	return com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot.ramlMode[...] ` -topatch--> `if (true) { 	return com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot.ramlModelFactor[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 49, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (api != null) { 	return com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot.ramlMode[...] ` -topatch--> `if (false) { 	return com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot.ramlModelFacto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 49, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (api != null) { 	return com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot.ramlMode[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 50, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot.ramlModelFactory.transformTo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 84, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.raml.v2.api.model.v10.methods.Method method : this.delegate.methods()) { 	actions.put(com.p[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `actions.put(com.phoenixnap.oss.ramlapisync.raml.RamlActionType.valueOf(method.method().toUpperCase()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 91, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 90, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.info("RJP10V2RamlModelFactory[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 50, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.hasErrors()) { 	java.util.List<java.lang.String> errors = ramlModelResult.getVal[...] ` -topatch--> `if (true) { 	java.util.List<java.lang.String> errors = ramlModelResult.getValidationResults().stream[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 50, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.hasErrors()) { 	java.util.List<java.lang.String> errors = ramlModelResult.getVal[...] ` -topatch--> `if (false) { 	java.util.List<java.lang.String> errors = ramlModelResult.getValidationResults().strea[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlModelFactory line: 50, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ramlModelResult.hasErrors()) { 	java.util.List<java.lang.String> errors = ramlModelResult.getVal[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 35, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.api = api ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((type != null) && (type instanceof org.raml.v2.api.model.v10.datamodel.ExternalTypeDeclaration))[...] ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((type != null) && (type instanceof org.raml.v2.api.model.v10.datamodel.ExternalTypeDeclaration))[...] ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((type != null) && (type instanceof org.raml.v2.api.model.v10.datamodel.ExternalTypeDeclaration))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlMimeType line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isSchemaType(mimeType)) { 	return ((org.ram[...] ` -topatch--> `if (true) { 	return ((org.raml.v2.api.model.v10.datamodel.ExternalTypeDeclaration) (this.mimeType)).[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlMimeType line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isSchemaType(mimeType)) { 	return ((org.ram[...] ` -topatch--> `if (false) { 	return ((org.raml.v2.api.model.v10.datamodel.ExternalTypeDeclaration) (this.mimeType))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlMimeType line: 83, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isSchemaType(mimeType)) { 	return ((org.ram[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlMimeType line: 86, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlResource line: 150, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (parentResource != null) { 	if (parentResource.relativeUri() != null) { 		outUri = parentResou[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 96, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 95, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.info("RJP08V1RamlModelFactory[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!ramlModelResult.hasErrors()) && com.phoenixnap.oss.ramlapisync.raml.RamlVersion.V08.equals(ra[...] ` -topatch--> `if (true)  { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.info("RJP08V1Ra[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!ramlModelResult.hasErrors()) && com.phoenixnap.oss.ramlapisync.raml.RamlVersion.V08.equals(ra[...] ` -topatch--> `if (false)  { 	com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories.logger.info("RJP08V1R[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.RamlModelFactoryOfFactories line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((!ramlModelResult.hasErrors()) && com.phoenixnap.oss.ramlapisync.raml.RamlVersion.V08.equals(ra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 44, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.raml = raml ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 41, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	throw new java.lang.IllegalArgumentException("The Raml instance must not be nul[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("The Raml instance must not be null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 41, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	throw new java.lang.IllegalArgumentException("The Raml instance must not be nul[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("The Raml instance must not be null"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlRoot line: 41, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	throw new java.lang.IllegalArgumentException("The Raml instance must not be nul[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	return null; } ` -topatch--> `if (true) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	return null; } ` -topatch--> `if (false) { 	return null; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml08v1.RJP08V1RamlModelFactory line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	return null; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 102, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(new com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig().withPackage(basePackage, null), [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 94, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.config = config ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 112, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.reverseOrderInClassNames = reverseOrderInClassNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 111, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceTopLevelInClassNames = resourceTopLevelInClassNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 110, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceDepthInClassNames = resourceDepthInClassNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 109, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.startUrl = startUrl ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 108, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.injectHttpHeadersParameter = injectHttpHeadersParameter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 107, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.seperateMethodsByContentType = seperateMethodsByContentType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(config) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 92, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojoPackage = basePackage + com.phoenixnap.oss.ramlapisync.naming.NamingHelper.getDefaultModelP[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pojoSubPackage != null) { 	this.pojoPackage = basePackage + pojoSubPackage; } else { 	this.pojoP[...] ` -topatch--> `if (true) { 	this.pojoPackage = basePackage + pojoSubPackage; } else { 	this.pojoPackage = basePacka[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pojoSubPackage != null) { 	this.pojoPackage = basePackage + pojoSubPackage; } else { 	this.pojoP[...] ` -topatch--> `if (false) { 	this.pojoPackage = basePackage + pojoSubPackage; } else { 	this.pojoPackage = basePack[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pojoSubPackage != null) { 	this.pojoPackage = basePackage + pojoSubPackage; } else { 	this.pojoP[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 88, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.basePackage = basePackage ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 48, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.required = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.generateJSR303Annotations = generateJSR303Annotations ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoGenerationConfig line: 90, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojoPackage = basePackage + pojoSubPackage ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 107, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojo = this.pojoModel._getClass(fullyQualifiedClassName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 106, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder.logger.debug("Enum {} already exists. Reusing it!", [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 218, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ENUM_CACHE.put(name, true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 80, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.restTemplateFieldName = restTemplateFieldName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.isEmpty(baseUrlFieldName)) { 	this.baseUrlFieldName = base[...] ` -topatch--> `if (true) { 	this.baseUrlFieldName = baseUrlFieldName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.isEmpty(baseUrlFieldName)) { 	this.baseUrlFieldName = base[...] ` -topatch--> `if (false) { 	this.baseUrlFieldName = baseUrlFieldName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 82, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.springframework.util.StringUtils.isEmpty(baseUrlFieldName)) { 	this.baseUrlFieldName = base[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(restTemplateFieldName)) { 	this.restTemplateFieldNa[...] ` -topatch--> `if (true) { 	this.restTemplateFieldName = restTemplateFieldName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(restTemplateFieldName)) { 	this.restTemplateFieldNa[...] ` -topatch--> `if (false) { 	this.restTemplateFieldName = restTemplateFieldName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.spring.SpringRestClientMethodBodyRule line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(restTemplateFieldName)) { 	this.restTemplateFieldNa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cachedNameHelper != null) { 	return com.phoen[...] ` -topatch--> `if (true) { 	return com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cachedNameHelper; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cachedNameHelper != null) { 	return com.phoen[...] ` -topatch--> `if (false) { 	return com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cachedNameHelper; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 60, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cachedNameHelper != null) { 	return com.phoen[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 411, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `outString = outString.replaceAll(org.jsonschema2pojo.util.NameHelper.ILLEGAL_CHARACTER_REGEX, "") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(resourceName)) { 	outString = com.phoenixnap.oss.ra[...] ` -topatch--> `if (true) { 	outString = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.getNameHelper().normaliz[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(resourceName)) { 	outString = com.phoenixnap.oss.ra[...] ` -topatch--> `if (false) { 	outString = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.getNameHelper().normali[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(resourceName)) { 	outString = com.phoenixnap.oss.ra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 409, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `outString = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.getNameHelper().normalizeName(resourc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 410, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(outString)) { 	outString = outString.replaceAll(org[...] ` -topatch--> `if (true) { 	outString = outString.replaceAll(org.jsonschema2pojo.util.NameHelper.ILLEGAL_CHARACTER_[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 410, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(outString)) { 	outString = outString.replaceAll(org[...] ` -topatch--> `if (false) { 	outString = outString.replaceAll(org.jsonschema2pojo.util.NameHelper.ILLEGAL_CHARACTER[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 410, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(outString)) { 	outString = outString.replaceAll(org[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlInterpretationResult line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.builder = builder ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 104, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojoPackage = this.pojoModel._package(pojoPackage) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage != null) { 	throw new java.lang.IllegalStateException("Pojo Package already cre[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Pojo Package already created"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage != null) { 	throw new java.lang.IllegalStateException("Pojo Package already cre[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Pojo Package already created"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage != null) { 	throw new java.lang.IllegalStateException("Pojo Package already cre[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoModel == null) { 	this.pojoModel = new com.sun.codemodel.JCodeModel(); } ` -topatch--> `if (true) { 	this.pojoModel = new com.sun.codemodel.JCodeModel(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoModel == null) { 	this.pojoModel = new com.sun.codemodel.JCodeModel(); } ` -topatch--> `if (false) { 	this.pojoModel = new com.sun.codemodel.JCodeModel(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoModel == null) { 	this.pojoModel = new com.sun.codemodel.JCodeModel(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 67, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.config = config ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojoModel = pojoModel ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlHelper line: 104, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String code : successfulResponses) { 	if (((action != null) && (!org.springframework.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlHelper line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((action != null) && (!org.springframework.util.CollectionUtils.isEmpty(action.getResponses())))[...] ` -topatch--> `if (true) { 	return action.getResponses().get(code); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlHelper line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((action != null) && (!org.springframework.util.CollectionUtils.isEmpty(action.getResponses())))[...] ` -topatch--> `if (false) { 	return action.getResponses().get(code); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlHelper line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((action != null) && (!org.springframework.util.CollectionUtils.isEmpty(action.getResponses())))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 54, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.document = document ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 55, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.bodyCodeModel = bodyCodeModel ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 52, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.controllerUrl = controllerUrl ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resource = resource ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceTopLevelInClassNames = resourceTopLevelInClassNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 59, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.reverseOrderInClassNames = reverseOrderInClassNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 56, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.config = config ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resourceDepthInClassNames = resourceDepthInClassNames ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((resource.getActions() != null) && (!resource.getActions().isEmpty())) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((resource.getActions() != null) && (!resource.getActions().isEmpty())) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 164, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((resource.getActions() != null) && (!resource.getActions().isEmpty())) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 139, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, com.phoenixnap.oss.ramlapisync.raml.RamlResource> resourc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bodyCodeModel == null) { 	bodyCodeModel = new com.sun.codemodel.JCodeModel(); } ` -topatch--> `if (true) { 	bodyCodeModel = new com.sun.codemodel.JCodeModel(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bodyCodeModel == null) { 	bodyCodeModel = new com.sun.codemodel.JCodeModel(); } ` -topatch--> `if (false) { 	bodyCodeModel = new com.sun.codemodel.JCodeModel(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (bodyCodeModel == null) { 	bodyCodeModel = new com.sun.codemodel.JCodeModel(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	return controllers; } ` -topatch--> `if (true) { 	return controllers; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	return controllers; } ` -topatch--> `if (false) { 	return controllers; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 127, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (raml == null) { 	return controllers; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 213, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((seperateMethodsByContentType && (response != null)) && response.hasBody()) && (response.getBod[...] ` -topatch--> `if (true) { 	for (java.lang.String responseType : response.getBody().keySet()) { 		controller.addApi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 213, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((seperateMethodsByContentType && (response != null)) && response.hasBody()) && (response.getBod[...] ` -topatch--> `if (false) { 	for (java.lang.String responseType : response.getBody().keySet()) { 		controller.addAp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 213, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((seperateMethodsByContentType && (response != null)) && response.hasBody()) && (response.getBod[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 210, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `response = com.phoenixnap.oss.ramlapisync.naming.RamlHelper.getSuccessfulResponse(childResource) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (childResource.getResponses() != null) { 	response = com.phoenixnap.oss.ramlapisync.naming.RamlHe[...] ` -topatch--> `if (true) { 	response = com.phoenixnap.oss.ramlapisync.naming.RamlHelper.getSuccessfulResponse(child[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (childResource.getResponses() != null) { 	response = com.phoenixnap.oss.ramlapisync.naming.RamlHe[...] ` -topatch--> `if (false) { 	response = com.phoenixnap.oss.ramlapisync.naming.RamlHelper.getSuccessfulResponse(chil[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (childResource.getResponses() != null) { 	response = com.phoenixnap.oss.ramlapisync.naming.RamlHe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 203, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resource.getActions().containsKey(actionType)) { 	com.phoenixnap.oss.ramlapisync.raml.RamlAction[...] ` -topatch--> `if (true) { 	com.phoenixnap.oss.ramlapisync.raml.RamlAction childResource = resource.getActions().ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 203, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (resource.getActions().containsKey(actionType)) { 	com.phoenixnap.oss.ramlapisync.raml.RamlAction[...] ` -topatch--> `if (false) { 	com.phoenixnap.oss.ramlapisync.raml.RamlAction childResource = resource.getActions().g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 203, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (resource.getActions().containsKey(actionType)) { 	com.phoenixnap.oss.ramlapisync.raml.RamlAction[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 202, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (com.phoenixnap.oss.ramlapisync.raml.RamlActionType actionType : com.phoenixnap.oss.ramlapisync.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((resource.getActions() != null) && (!resource.getActions().isEmpty())) { 	for (com.phoenixnap.os[...] ` -topatch--> `if (true) { 	for (com.phoenixnap.oss.ramlapisync.raml.RamlActionType actionType : com.phoenixnap.oss[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((resource.getActions() != null) && (!resource.getActions().isEmpty())) { 	for (com.phoenixnap.os[...] ` -topatch--> `if (false) { 	for (com.phoenixnap.oss.ramlapisync.raml.RamlActionType actionType : com.phoenixnap.os[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 201, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((resource.getActions() != null) && (!resource.getActions().isEmpty())) { 	for (com.phoenixnap.os[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 198, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `controllers.add(controller) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 197, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `controller = new com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata(config, bodyCodeModel, url,[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 196, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((controller == null) && shouldCreateController(resource)) { 	controller = new com.phoenixnap.oss[...] ` -topatch--> `if (true) { 	controller = new com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata(this.config, b[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 196, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((controller == null) && shouldCreateController(resource)) { 	controller = new com.phoenixnap.oss[...] ` -topatch--> `if (false) { 	controller = new com.phoenixnap.oss.ramlapisync.data.ApiResourceMetadata(this.config, [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 196, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((controller == null) && shouldCreateController(resource)) { 	controller = new com.phoenixnap.oss[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 71, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.parent = parent ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 72, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resource = resource ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 73, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.actionType = actionType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 74, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.action = action ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 75, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.responseContentTypeFilter = responseContentTypeFilter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 76, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.injectHttpHeadersParameter = injectHttpHeadersParameter ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((action.getQueryParameters() != null) && (!action.getQueryParameters().isEmpty())) { 	for (java.[...] ` -topatch--> `if (true) { 	for (java.util.Map.Entry<java.lang.String, com.phoenixnap.oss.ramlapisync.raml.RamlQuer[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((action.getQueryParameters() != null) && (!action.getQueryParameters().isEmpty())) { 	for (java.[...] ` -topatch--> `if (false) { 	for (java.util.Map.Entry<java.lang.String, com.phoenixnap.oss.ramlapisync.raml.RamlQue[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((action.getQueryParameters() != null) && (!action.getQueryParameters().isEmpty())) { 	for (java.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 79, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.autowire = autowire ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (qualifierBeanName != null) { 	this.qualifierAnnotation = true; 	this.qualifier = qualifierBeanNa[...] ` -topatch--> `if (true) { 	this.qualifierAnnotation = true; 	this.qualifier = qualifierBeanName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (qualifierBeanName != null) { 	this.qualifierAnnotation = true; 	this.qualifier = qualifierBeanNa[...] ` -topatch--> `if (false) { 	this.qualifierAnnotation = true; 	this.qualifier = qualifierBeanName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 75, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (qualifierBeanName != null) { 	this.qualifierAnnotation = true; 	this.qualifier = qualifierBeanNa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 74, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(restTemplateFieldName, fieldClazz) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 90, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `annotation.param("regexp", getPattern()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getMinLength() != null) { 	annotation.param("min", getMinLength()); } ` -topatch--> `if (true) { 	annotation.param("min", getMinLength()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getMinLength() != null) { 	annotation.param("min", getMinLength()); } ` -topatch--> `if (false) { 	annotation.param("min", getMinLength()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getMinLength() != null) { 	annotation.param("min", getMinLength()); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 96, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `annotation.param("min", getMinLength()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClientInterfaceDeclarationRule line: 48, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `definedClass = generatableType._interface(clientClassName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassAnnotationRule line: 36, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.annotationType = annotationType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.baseUrlConfigurationPath.endsWith("}")) { 	this.baseUrlConfigurationPath = this.baseUrlCon[...] ` -topatch--> `if (true) { 	this.baseUrlConfigurationPath = this.baseUrlConfigurationPath + "}"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.baseUrlConfigurationPath.endsWith("}")) { 	this.baseUrlConfigurationPath = this.baseUrlCon[...] ` -topatch--> `if (false) { 	this.baseUrlConfigurationPath = this.baseUrlConfigurationPath + "}"; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.baseUrlConfigurationPath.endsWith("}")) { 	this.baseUrlConfigurationPath = this.baseUrlCon[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.baseUrlConfigurationPath.startsWith("${")) { 	this.baseUrlConfigurationPath = "${" + this.[...] ` -topatch--> `if (true) { 	this.baseUrlConfigurationPath = "${" + this.baseUrlConfigurationPath; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.baseUrlConfigurationPath.startsWith("${")) { 	this.baseUrlConfigurationPath = "${" + this.[...] ` -topatch--> `if (false) { 	this.baseUrlConfigurationPath = "${" + this.baseUrlConfigurationPath; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.Spring4RestTemplateClientRule line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.baseUrlConfigurationPath.startsWith("${")) { 	this.baseUrlConfigurationPath = "${" + this.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `annotation.param("value", java.lang.String.valueOf(maximum)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 109, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `annotation.param("value", java.lang.String.valueOf(minimum)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 99, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getMaxLength() != null) { 	annotation.param("max", getMaxLength()); } ` -topatch--> `if (true) { 	annotation.param("max", getMaxLength()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 99, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getMaxLength() != null) { 	annotation.param("max", getMaxLength()); } ` -topatch--> `if (false) { 	annotation.param("max", getMaxLength()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 99, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getMaxLength() != null) { 	annotation.param("max", getMaxLength()); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `annotation.param("max", getMaxLength()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.RamlParser line: 165, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 114, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `parent = types.get(tempParent.name()).getType() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.springframework.util.MimeType.valueOf(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 83, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `name = typeName ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 84, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `typeName = types.get(name).getType().type() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 549, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (actionType) { 	case DELETE : 		return "delete"; 	case GET : 		return "get"; 	case POST : 		i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 479, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (segment.contains("{") && segment.contains("}")) {  	isIdInPath = true;  	if ((index > 0) && (ind[...] ` -topatch--> `if (true) {  	isIdInPath = true;  	if ((index > 0) && (index == (splitUrl.length - 1))) { 		if (segm[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 479, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (segment.contains("{") && segment.contains("}")) {  	isIdInPath = true;  	if ((index > 0) && (ind[...] ` -topatch--> `if (false) {  	isIdInPath = true;  	if ((index > 0) && (index == (splitUrl.length - 1))) { 		if (seg[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 479, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (segment.contains("{") && segment.contains("}")) {  	isIdInPath = true;  	if ((index > 0) && (ind[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 475, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while ((numberOfIdsParsed < 2) && (index >= 0)) {  	java.lang.String segment = splitUrl[index];  	if[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 462, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(url)) {   	java.lang.String[] splitUrl = com.phoeni[...] ` -topatch--> `if (true) {   	java.lang.String[] splitUrl = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.SLAS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 462, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(url)) {   	java.lang.String[] splitUrl = com.phoeni[...] ` -topatch--> `if (false) {   	java.lang.String[] splitUrl = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.SLA[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 462, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(url)) {   	java.lang.String[] splitUrl = com.phoeni[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 456, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((controllerizedResource != resource) &&  (org.springframework.util.StringUtils.countOccurrencesO[...] ` -topatch--> `if (true)  { 	url = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.reduceToResourceNameAndId(url[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 456, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((controllerizedResource != resource) &&  (org.springframework.util.StringUtils.countOccurrencesO[...] ` -topatch--> `if (false)  { 	url = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.reduceToResourceNameAndId(ur[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 456, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((controllerizedResource != resource) &&  (org.springframework.util.StringUtils.countOccurrencesO[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 524, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return prefix + name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!com.phoenixnap.oss.ramlapisync.naming.NamingHelper.singularize(tail).equals(tail)) && (!tail.[...] ` -topatch--> `if (true)  { 	name = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.singularize(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!com.phoenixnap.oss.ramlapisync.naming.NamingHelper.singularize(tail).equals(tail)) && (!tail.[...] ` -topatch--> `if (false)  { 	name = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.singularize(name); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 519, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((!com.phoenixnap.oss.ramlapisync.naming.NamingHelper.singularize(tail).equals(tail)) && (!tail.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 507, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `name = org.springframework.util.StringUtils.capitalize(segment) + name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 499, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (singularizeNext) { 	if (!segment.endsWith("details")) { 		name = com.phoenixnap.oss.ramlapisync.[...] ` -topatch--> `if (true) { 	if (!segment.endsWith("details")) { 		name = com.phoenixnap.oss.ramlapisync.naming.Nami[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 499, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (singularizeNext) { 	if (!segment.endsWith("details")) { 		name = com.phoenixnap.oss.ramlapisync.[...] ` -topatch--> `if (false) { 	if (!segment.endsWith("details")) { 		name = com.phoenixnap.oss.ramlapisync.naming.Nam[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 499, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (singularizeNext) { 	if (!segment.endsWith("details")) { 		name = com.phoenixnap.oss.ramlapisync.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 498, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `segment = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cleanNameForJava(segment) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (responseContentTypeFilter != null) { 	name += com.phoenixnap.oss.ramlapisync.naming.NamingHelper[...] ` -topatch--> `if (true) { 	name += com.phoenixnap.oss.ramlapisync.naming.NamingHelper.convertContentTypeToQualifie[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (responseContentTypeFilter != null) { 	name += com.phoenixnap.oss.ramlapisync.naming.NamingHelper[...] ` -topatch--> `if (false) { 	name += com.phoenixnap.oss.ramlapisync.naming.NamingHelper.convertContentTypeToQualifi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 234, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (responseContentTypeFilter != null) { 	name += com.phoenixnap.oss.ramlapisync.naming.NamingHelper[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 138, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `requestHeaders = action.getHeaders().entrySet().stream().map(( param) ->  new com.phoenixnap.oss.ram[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((action.getBody() != null) && (!action.getBody().isEmpty())) { 	for (java.util.Map.Entry<java.la[...] ` -topatch--> `if (true) { 	for (java.util.Map.Entry<java.lang.String, com.phoenixnap.oss.ramlapisync.raml.RamlMime[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((action.getBody() != null) && (!action.getBody().isEmpty())) { 	for (java.util.Map.Entry<java.la[...] ` -topatch--> `if (false) { 	for (java.util.Map.Entry<java.lang.String, com.phoenixnap.oss.ramlapisync.raml.RamlMim[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.data.ApiActionMetadata line: 141, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((action.getBody() != null) && (!action.getBody().isEmpty())) { 	for (java.util.Map.Entry<java.la[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 56, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `enumName = stringType.name() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.RamlHelper line: 106, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return action.getResponses().get(code) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 144, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `constructor.javadoc().add(("Creates a new " + className) + ".") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 146, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `defaultConstructorBody.invoke("super") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.NamingHelper.isValidJavaClassName(className)) { 	classNam[...] ` -topatch--> `if (true) { 	className = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cleanNameForJava(classNa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.NamingHelper.isValidJavaClassName(className)) { 	classNam[...] ` -topatch--> `if (false) { 	className = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.cleanNameForJava(classN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.NamingHelper.isValidJavaClassName(className)) { 	classNam[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 112, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withPackage(pojoPackage) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage == null) { 	withPackage(pojoPackage); } ` -topatch--> `if (true) { 	withPackage(pojoPackage); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage == null) { 	withPackage(pojoPackage); } ` -topatch--> `if (false) { 	withPackage(pojoPackage); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage == null) { 	withPackage(pojoPackage); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojo != null) { 	throw new java.lang.IllegalStateException("Class already created"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Class already created"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojo != null) { 	throw new java.lang.IllegalStateException("Class already created"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Class already created"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 116, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojo != null) { 	throw new java.lang.IllegalStateException("Class already created"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 122, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder.logger.debug("Creating class " + fullyQualifiedClass[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojo = this.pojoModel._class(fullyQualifiedClassName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `implementsSerializable() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 126, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withDefaultConstructor(className) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 132, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.codeModels.put(fullyQualifiedClassName, this.pojo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withName(config.getPojoPackage(), className) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 89, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.pojo._implements(java.io.Serializable.class) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.AbstractBuilder line: 92, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.pojo.field(com.sun.codemodel.JMod.STATIC | com.sun.codemodel.JMod.FINAL, this.pojoModel.LONG, "[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 56, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (objectType.name().endsWith("." + objectType.type())) {  	name = org.springframework.util.StringU[...] ` -topatch--> `if (true) {  	name = org.springframework.util.StringUtils.capitalize(objectType.type()); } else { 	n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 56, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (objectType.name().endsWith("." + objectType.type())) {  	name = org.springframework.util.StringU[...] ` -topatch--> `if (false) {  	name = org.springframework.util.StringUtils.capitalize(objectType.type()); } else { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 56, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (objectType.name().endsWith("." + objectType.type())) {  	name = org.springframework.util.StringU[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `name = org.springframework.util.StringUtils.capitalize(objectType.name()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 52, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `typeCheck(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(objectType.name())) && (!co[...] ` -topatch--> `if (true) { 	name = typeName; 	if (types.get(name) == null) { 		throw new java.lang.IllegalStateExce[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(objectType.name())) && (!co[...] ` -topatch--> `if (false) { 	name = typeName; 	if (types.get(name) == null) { 		throw new java.lang.IllegalStateExc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 72, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(objectType.name())) && (!co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(objectType.name()) && (!com.ph[...] ` -topatch--> `if (true) {  	return interpret(document, type.parentTypes().get(0), builderModel, config, property);[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(objectType.name()) && (!com.ph[...] ` -topatch--> `if (false) {  	return interpret(document, type.parentTypes().get(0), builderModel, config, property)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 66, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(objectType.name()) && (!com.ph[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((parent != null) && (!parent.name().equals(name))) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlIn[...] ` -topatch--> `if (true) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpretationResult childResult = com.phoenixn[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((parent != null) && (!parent.name().equals(name))) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlIn[...] ` -topatch--> `if (false) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlInterpretationResult childResult = com.phoenix[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 120, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((parent != null) && (!parent.name().equals(name))) { 	com.phoenixnap.oss.ramlapisync.pojo.RamlIn[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 126, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (org.raml.v2.api.model.v10.datamodel.TypeDeclaration objectProperty : objectType.properties()) {[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(tempParent.name())) { 	parent[...] ` -topatch--> `if (true) { 	parent = types.get(tempParent.name()).getType(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(tempParent.name())) { 	parent[...] ` -topatch--> `if (false) { 	parent = types.get(tempParent.name()).getType(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(tempParent.name())) { 	parent[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (builderModel != null) { 	com.sun.codemodel.JClass searchedClass = builderModel._getClass((config[...] ` -topatch--> `if (true) { 	com.sun.codemodel.JClass searchedClass = builderModel._getClass((config.getPojoPackage([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (builderModel != null) { 	com.sun.codemodel.JClass searchedClass = builderModel._getClass((config[...] ` -topatch--> `if (false) { 	com.sun.codemodel.JClass searchedClass = builderModel._getClass((config.getPojoPackage[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 91, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (builderModel != null) { 	com.sun.codemodel.JClass searchedClass = builderModel._getClass((config[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (searchedClass != null) {  	result.setCodeModel(builderModel); 	result.setResolvedClass(searchedC[...] ` -topatch--> `if (true) {  	result.setCodeModel(builderModel); 	result.setResolvedClass(searchedClass); 	return re[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (searchedClass != null) {  	result.setCodeModel(builderModel); 	result.setResolvedClass(searchedC[...] ` -topatch--> `if (false) {  	result.setCodeModel(builderModel); 	result.setResolvedClass(searchedClass); 	return r[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (searchedClass != null) {  	result.setCodeModel(builderModel); 	result.setResolvedClass(searchedC[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 105, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `result.setBuilder(builder) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((objectType.parentTypes() != null) && (objectType.parentTypes().size() > 0)) { 	org.raml.v2.api.[...] ` -topatch--> `if (true) { 	org.raml.v2.api.model.v10.datamodel.TypeDeclaration tempParent = objectType.parentTypes[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((objectType.parentTypes() != null) && (objectType.parentTypes().size() > 0)) { 	org.raml.v2.api.[...] ` -topatch--> `if (false) { 	org.raml.v2.api.model.v10.datamodel.TypeDeclaration tempParent = objectType.parentType[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((objectType.parentTypes() != null) && (objectType.parentTypes().size() > 0)) { 	org.raml.v2.api.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(typeName)) { 	parent = types.[...] ` -topatch--> `if (true) { 	parent = types.get(typeName).getType(); } else { 	if ((objectType.parentTypes() != null[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(typeName)) { 	parent = types.[...] ` -topatch--> `if (false) { 	parent = types.get(typeName).getType(); } else { 	if ((objectType.parentTypes() != nul[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.ObjectTypeInterpreter line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.phoenixnap.oss.ramlapisync.naming.RamlTypeHelper.isBaseObject(typeName)) { 	parent = types.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 61, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `result.setCodeModel(builderModel) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 60, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `result.setBuilder(builder) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `builder.withEnums(stringType.enumValues(), java.lang.String.class) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stringType.type().equals("string")) { 	enumName = stringType.name(); } ` -topatch--> `if (true) { 	enumName = stringType.name(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stringType.type().equals("string")) { 	enumName = stringType.name(); } ` -topatch--> `if (false) { 	enumName = stringType.name(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.StringTypeInterpreter line: 55, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stringType.type().equals("string")) { 	enumName = stringType.name(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 164, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toString.body()._return(toReturn) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!valueField.type().fullName().equals(java.lang.String.class.getName())) { 	toReturn = toReturn.i[...] ` -topatch--> `if (true) { 	toReturn = toReturn.invoke("toString"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!valueField.type().fullName().equals(java.lang.String.class.getName())) { 	toReturn = toReturn.i[...] ` -topatch--> `if (false) { 	toReturn = toReturn.invoke("toString"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!valueField.type().fullName().equals(java.lang.String.class.getName())) { 	toReturn = toReturn.i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 153, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fromValue.body()._return(lookupMap.invoke("get").arg(valueParam)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 158, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `toString.annotate(java.lang.Override.class) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 140, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `fromValue.body()._return(com.sun.codemodel.JExpr._this().ref(valueField)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 143, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addToStringMethod() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 142, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addFromValueMethod() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 131, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lookupMap.init(com.sun.codemodel.JExpr._new(lookupImplType)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 135, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `put.arg(forEach.var().ref("value")) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 136, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `put.arg(forEach.var()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 124, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `constructor.body().assign(com.sun.codemodel.JExpr._this().ref(valueField), valueParam) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 128, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lookupMap = this.pojo.field((com.sun.codemodel.JMod.PRIVATE | com.sun.codemodel.JMod.STATIC) | com.s[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 116, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pojoCreationCheck() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 119, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `valueField = this.pojo.field(com.sun.codemodel.JMod.PRIVATE | com.sun.codemodel.JMod.FINAL, type, "v[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.pojo.fields().containsKey("value")) {  	valueField = this.pojo.field(com.sun.codemodel.JMo[...] ` -topatch--> `if (true) {  	this.valueField = this.pojo.field(com.sun.codemodel.JMod.PRIVATE | com.sun.codemodel.J[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.pojo.fields().containsKey("value")) {  	valueField = this.pojo.field(com.sun.codemodel.JMo[...] ` -topatch--> `if (false) {  	this.valueField = this.pojo.field(com.sun.codemodel.JMod.PRIVATE | com.sun.codemodel.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!this.pojo.fields().containsKey("value")) {  	valueField = this.pojo.field(com.sun.codemodel.JMo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.codeModels.put(fullyQualifiedClassName, this.pojo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 99, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.pojo = this.pojoModel._class(fullyQualifiedClassName, com.sun.codemodel.ClassType.ENUM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 98, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder.logger.debug("Creating Enum " + fullyQualifiedClassN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojo != null) { 	throw new java.lang.IllegalStateException("Enum already created"); } ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Enum already created"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojo != null) { 	throw new java.lang.IllegalStateException("Enum already created"); } ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Enum already created"); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojo != null) { 	throw new java.lang.IllegalStateException("Enum already created"); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 89, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withPackage(pojoPackage) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 84, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `className = com.phoenixnap.oss.ramlapisync.naming.NamingHelper.convertToClassName(className) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage == null) { 	withPackage(pojoPackage); } ` -topatch--> `if (true) { 	withPackage(pojoPackage); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage == null) { 	withPackage(pojoPackage); } ` -topatch--> `if (false) { 	withPackage(pojoPackage); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (this.pojoPackage == null) { 	withPackage(pojoPackage); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 72, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withName(config.getPojoPackage(), className) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((names != null) && (!names.isEmpty())) { 	for (T name : names) { 		withEnum(name, type); 	} } ` -topatch--> `if (true) { 	for (T name : names) { 		withEnum(name, type); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((names != null) && (!names.isEmpty())) { 	for (T name : names) { 		withEnum(name, type); 	} } ` -topatch--> `if (false) { 	for (T name : names) { 		withEnum(name, type); 	} }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((names != null) && (!names.isEmpty())) { 	for (T name : names) { 		withEnum(name, type); 	} } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 225, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pojoCreationCheck() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 229, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (T name : names) { 	withEnum(name, type); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 230, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withEnum(name, type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 220, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return contains ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (contains) { 	ENUM_CACHE.put(name, true); } ` -topatch--> `if (true) { 	this.ENUM_CACHE.put(name, true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (contains) { 	ENUM_CACHE.put(name, true); } ` -topatch--> `if (false) { 	this.ENUM_CACHE.put(name, true); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 217, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (contains) { 	ENUM_CACHE.put(name, true); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 204, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `field.setAccessible(true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 206, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `contains = value.containsKey(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ENUM_CACHE.containsKey(name)) { 	return true; } else {  	boolean contains = false; 	try { 		java[...] ` -topatch--> `if (true) { 	return true; } else {  	boolean contains = false; 	try { 		java.lang.reflect.Field fiel[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (ENUM_CACHE.containsKey(name)) { 	return true; } else {  	boolean contains = false; 	try { 		java[...] ` -topatch--> `if (false) { 	return true; } else {  	boolean contains = false; 	try { 		java.lang.reflect.Field fie[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 197, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (ENUM_CACHE.containsKey(name)) { 	return true; } else {  	boolean contains = false; 	try { 		java[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 188, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enumConstant.arg(com.sun.codemodel.JExpr.lit(name.toString())) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Long.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.L[...] ` -topatch--> `if (true) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Long) (name)))); } else { 	enu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Long.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.L[...] ` -topatch--> `if (false) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Long) (name)))); } else { 	en[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Long.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.L[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 189, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `enumConstant.annotate(com.fasterxml.jackson.annotation.JsonProperty.class).param("value", name.toStr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Boolean.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lan[...] ` -topatch--> `if (true) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Boolean) (name)))); } else { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Boolean.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lan[...] ` -topatch--> `if (false) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Boolean) (name)))); } else { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Boolean.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Integer.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lan[...] ` -topatch--> `if (true) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Integer) (name)))); } else { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Integer.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lan[...] ` -topatch--> `if (false) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Integer) (name)))); } else { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 177, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Integer.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Float.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.[...] ` -topatch--> `if (true) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Float) (name)))); } else { 	if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Float.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.[...] ` -topatch--> `if (false) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Float) (name)))); } else { 	i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 183, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Float.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 181, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Double.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang[...] ` -topatch--> `if (true) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Double) (name)))); } else { 	i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 181, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Double.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang[...] ` -topatch--> `if (false) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang.Double) (name)))); } else { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 181, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type.equals(java.lang.Double.class)) { 	enumConstant.arg(com.sun.codemodel.JExpr.lit(((java.lang[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!doesEnumContainField(type, cleaned)) { 	withValueField(type); 	ENUM_CACHE.put(cleaned, true); 	[...] ` -topatch--> `if (true) { 	withValueField(type); 	this.ENUM_CACHE.put(cleaned, true); 	com.phoenixnap.oss.ramlapis[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!doesEnumContainField(type, cleaned)) { 	withValueField(type); 	ENUM_CACHE.put(cleaned, true); 	[...] ` -topatch--> `if (false) { 	withValueField(type); 	this.ENUM_CACHE.put(cleaned, true); 	com.phoenixnap.oss.ramlapi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 171, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!doesEnumContainField(type, cleaned)) { 	withValueField(type); 	ENUM_CACHE.put(cleaned, true); 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 172, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `withValueField(type) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 169, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pojoCreationCheck() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(cleaned)) { 	com.sun.codemodel.JEnumConstant enumCo[...] ` -topatch--> `if (true) { 	com.sun.codemodel.JEnumConstant enumConstant = this.pojo.enumConstant(cleaned); 	if (ty[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(cleaned)) { 	com.sun.codemodel.JEnumConstant enumCo[...] ` -topatch--> `if (false) { 	com.sun.codemodel.JEnumConstant enumConstant = this.pojo.enumConstant(cleaned); 	if (t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 175, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(cleaned)) { 	com.sun.codemodel.JEnumConstant enumCo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 173, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ENUM_CACHE.put(cleaned, true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder line: 174, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `com.phoenixnap.oss.ramlapisync.pojo.EnumBuilder.logger.debug((("Adding field: " + name) + " to ") + [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.autowire = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 62, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(restTemplateFieldName, fieldClazz) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 65, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.valueAnnotationValue = valueAnnotationValue ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.generation.rules.basic.ClassFieldDeclarationRule line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.valueAnnotation = true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((getMinLength() != null) || (getMaxLength() != null)) { 	com.sun.codemodel.JAnnotationUse annota[...] ` -topatch--> `if (true) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrain[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((getMinLength() != null) || (getMaxLength() != null)) { 	com.sun.codemodel.JAnnotationUse annota[...] ` -topatch--> `if (false) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrai[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 92, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((getMinLength() != null) || (getMaxLength() != null)) { 	com.sun.codemodel.JAnnotationUse annota[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(getPattern())) { 	com.sun.codemodel.JAnnotationUse [...] ` -topatch--> `if (true) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrain[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(getPattern())) { 	com.sun.codemodel.JAnnotationUse [...] ` -topatch--> `if (false) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrai[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 88, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.springframework.util.StringUtils.hasText(getPattern())) { 	com.sun.codemodel.JAnnotationUse [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isRequired()) { 	field.annotate(javax.validation.constraints.NotNull.class); } ` -topatch--> `if (true) { 	field.annotate(javax.validation.constraints.NotNull.class); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isRequired()) { 	field.annotate(javax.validation.constraints.NotNull.class); } ` -topatch--> `if (false) { 	field.annotate(javax.validation.constraints.NotNull.class); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isRequired()) { 	field.annotate(javax.validation.constraints.NotNull.class); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `field.annotate(javax.validation.constraints.NotNull.class) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 230, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `validations.annotateFieldJSR303(field, isPOJO) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!isPOJO) &&  resolvedType.getClass().getName().equals("com.sun.codemodel.JNarrowedClass")) && [...] ` -topatch--> `if (true)   { 	com.sun.codemodel.JClass typeClass = resolvedType.getTypeParameters().get(0); 	isPOJO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!isPOJO) &&  resolvedType.getClass().getName().equals("com.sun.codemodel.JNarrowedClass")) && [...] ` -topatch--> `if (false)   { 	com.sun.codemodel.JClass typeClass = resolvedType.getTypeParameters().get(0); 	isPOJ[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.PojoBuilder line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((!isPOJO) &&  resolvedType.getClass().getName().equals("com.sun.codemodel.JNarrowedClass")) && [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (minimum != null) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validatio[...] ` -topatch--> `if (true) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrain[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (minimum != null) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validatio[...] ` -topatch--> `if (false) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrai[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 107, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (minimum != null) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validatio[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (maximum != null) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validatio[...] ` -topatch--> `if (true) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrain[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (maximum != null) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validatio[...] ` -topatch--> `if (false) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validation.constrai[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (maximum != null) { 	com.sun.codemodel.JAnnotationUse annotation = field.annotate(javax.validatio[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (addValidAnnotation) { 	field.annotate(javax.validation.Valid.class); } ` -topatch--> `if (true) { 	field.annotate(javax.validation.Valid.class); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (addValidAnnotation) { 	field.annotate(javax.validation.Valid.class); } ` -topatch--> `if (false) { 	field.annotate(javax.validation.Valid.class); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 103, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (addValidAnnotation) { 	field.annotate(javax.validation.Valid.class); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.pojo.RamlTypeValidations line: 104, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `field.annotate(javax.validation.Valid.class) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 384, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (target.endsWith("ss") && result.equals(target.substring(0, target.length() - 1))) { 	result = ta[...] ` -topatch--> `if (true) { 	result = target; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 384, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (target.endsWith("ss") && result.equals(target.substring(0, target.length() - 1))) { 	result = ta[...] ` -topatch--> `if (false) { 	result = target; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 384, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (target.endsWith("ss") && result.equals(target.substring(0, target.length() - 1))) { 	result = ta[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 129, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `types.putAll(libOfLibTypes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.raml.rjp.raml10v2.RJP10V2RamlRoot line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `types.putAll(libTypes) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Character.isDigit(enumName.charAt(0))) { 	enumName = "_" + enumName; } ` -topatch--> `if (true) { 	enumName = "_" + enumName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Character.isDigit(enumName.charAt(0))) { 	enumName = "_" + enumName; } ` -topatch--> `if (false) { 	enumName = "_" + enumName; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 435, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.Character.isDigit(enumName.charAt(0))) { 	enumName = "_" + enumName; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 433, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.lang3.StringUtils.isEmpty(enumName)) { 	enumName = "_DEFAULT_"; } else 	if (j[...] ` -topatch--> `if (true) { 	enumName = "_DEFAULT_"; } else { 	if (java.lang.Character.isDigit(enumName.charAt(0))) [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=com.phoenixnap.oss.ramlapisync.naming.NamingHelper line: 433, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.apache.commons.lang3.StringUtils.isEmpty(enumName)) { 	enumName = "_DEFAULT_"; } else 	if (j[...] ` -topatch--> `if (false) { 	enumName = "_DEFAULT_"; } else { 	if (java.lang.Character.isDigit(enumName.charAt(0)))[...]` (spoon.support.reflect.code.CtIfImpl) 
