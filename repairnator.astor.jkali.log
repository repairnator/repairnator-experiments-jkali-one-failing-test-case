[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 3
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-datamodel/0.0.12-SNAPSHOT/msdk-datamodel-0.0.12-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-formula/2.0/cdk-formula-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/javax/vecmath/vecmath/1.5.2/vecmath-1.5.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-core/2.0/cdk-core-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-interfaces/2.0/cdk-interfaces-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-standard/2.0/cdk-standard-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-spectra-centroidprofiledetection/0.0.12-SNAPSHOT/msdk-spectra-centroidprofiledetection-0.0.12-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-io-mzxml/0.0.12-SNAPSHOT/msdk-io-mzxml-0.0.12-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/dsiutils/2.3.6/dsiutils-2.3.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/fastutil/7.1.0/fastutil-7.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-collections/commons-collections/20040616/commons-collections-20040616.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/chhh/javolution-core-java-msftbx/6.11.8/javolution-core-java-msftbx-6.11.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.16.1/system-rules-1.16.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/guava/guava/23.0/guava-23.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 124730 milliseconds (124 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-datamodel/0.0.12-SNAPSHOT/msdk-datamodel-0.0.12-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-formula/2.0/cdk-formula-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/javax/vecmath/vecmath/1.5.2/vecmath-1.5.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-core/2.0/cdk-core-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-interfaces/2.0/cdk-interfaces-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-standard/2.0/cdk-standard-2.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-spectra-centroidprofiledetection/0.0.12-SNAPSHOT/msdk-spectra-centroidprofiledetection-0.0.12-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-io-mzxml/0.0.12-SNAPSHOT/msdk-io-mzxml-0.0.12-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/dsiutils/2.3.6/dsiutils-2.3.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/fastutil/7.1.0/fastutil-7.1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-collections/commons-collections/20040616/commons-collections-20040616.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/chhh/javolution-core-java-msftbx/6.11.8/javolution-core-java-msftbx-6.11.8.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.16.1/system-rules-1.16.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/guava/guava/23.0/guava-23.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 34
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 697
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 697,  632
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 632
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 632, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 124730
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-datamodel/0.0.12-SNAPSHOT/msdk-datamodel-0.0.12-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-formula/2.0/cdk-formula-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/javax/vecmath/vecmath/1.5.2/vecmath-1.5.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-core/2.0/cdk-core-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-interfaces/2.0/cdk-interfaces-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-standard/2.0/cdk-standard-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-spectra-centroidprofiledetection/0.0.12-SNAPSHOT/msdk-spectra-centroidprofiledetection-0.0.12-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-io-mzxml/0.0.12-SNAPSHOT/msdk-io-mzxml-0.0.12-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/dsiutils/2.3.6/dsiutils-2.3.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/fastutil/7.1.0/fastutil-7.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-collections/commons-collections/20040616/commons-collections-20040616.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/chhh/javolution-core-java-msftbx/6.11.8/javolution-core-java-msftbx-6.11.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.16.1/system-rules-1.16.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/guava/guava/23.0/guava-23.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/msdk-io-mzml
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksEncoder line: 82, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.putDouble(d) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getMsLevel() != null) { 	java.lang.Integer msLevel = scan.getMsLevel(); 	writeCVParam(xmlSt[...] ` -topatch--> `if (true) { 	java.lang.Integer msLevel = scan.getMsLevel(); 	writeCVParam(xmlStreamWriter,  	new io.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getMsLevel() != null) { 	java.lang.Integer msLevel = scan.getMsLevel(); 	writeCVParam(xmlSt[...] ` -topatch--> `if (false) { 	java.lang.Integer msLevel = scan.getMsLevel(); 	writeCVParam(xmlStreamWriter,  	new io[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 240, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getMsLevel() != null) { 	java.lang.Integer msLevel = scan.getMsLevel(); 	writeCVParam(xmlSt[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 242, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter,  new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.da[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getSpectrumType() == io.github.msdk.datamodel.MsSpectrumType.CENTROIDED) 	writeCVParam(xmlS[...] ` -topatch--> `if (true)  { 	writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.centroidCvParam);} el[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getSpectrumType() == io.github.msdk.datamodel.MsSpectrumType.CENTROIDED) 	writeCVParam(xmlS[...] ` -topatch--> `if (false)  { 	writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.centroidCvParam);} e[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getSpectrumType() == io.github.msdk.datamodel.MsSpectrumType.CENTROIDED) 	writeCVParam(xmlS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 232, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.centroidCvParam) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 252, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter,  new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.da[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getTIC() != null) { 	java.lang.Float tic = scan.getTIC(); 	writeCVParam(xmlStreamWriter,  	[...] ` -topatch--> `if (true) { 	java.lang.Float tic = scan.getTIC(); 	writeCVParam(xmlStreamWriter,  	new io.github.msd[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getTIC() != null) { 	java.lang.Float tic = scan.getTIC(); 	writeCVParam(xmlStreamWriter,  	[...] ` -topatch--> `if (false) { 	java.lang.Float tic = scan.getTIC(); 	writeCVParam(xmlStreamWriter,  	new io.github.ms[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getTIC() != null) { 	java.lang.Float tic = scan.getTIC(); 	writeCVParam(xmlStreamWriter,  	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 264, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 266, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 137, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(mzMLFile, null, ( s) -> false, ( c) -> false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 261, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getMzRange() != null) { 	java.lang.Double lowestMz = scan.getMzRange().lowerEndpoint(); 	ja[...] ` -topatch--> `if (true) { 	java.lang.Double lowestMz = scan.getMzRange().lowerEndpoint(); 	java.lang.Double highes[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 261, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getMzRange() != null) { 	java.lang.Double lowestMz = scan.getMzRange().lowerEndpoint(); 	ja[...] ` -topatch--> `if (false) { 	java.lang.Double lowestMz = scan.getMzRange().lowerEndpoint(); 	java.lang.Double highe[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 261, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getMzRange() != null) { 	java.lang.Double lowestMz = scan.getMzRange().lowerEndpoint(); 	ja[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getPolarity() == io.github.msdk.datamodel.PolarityType.NEGATIVE) 	writeCVParam(xmlStreamWri[...] ` -topatch--> `if (true)  { 	writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.polarityNegativeCvPar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getPolarity() == io.github.msdk.datamodel.PolarityType.NEGATIVE) 	writeCVParam(xmlStreamWri[...] ` -topatch--> `if (false)  { 	writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.polarityNegativeCvPa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 299, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getPolarity() == io.github.msdk.datamodel.PolarityType.NEGATIVE) 	writeCVParam(xmlStreamWri[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 426, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return io.github.msdk.datamodel.PolarityType.POSITIVE ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 445, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return java.util.Collections.emptyList() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 425, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(scan, io.github.msdk.io.mzml.data.MzMLCV.cvPolarityPositive).isPresent()) 	return io.[...] ` -topatch--> `if (true)  { 	return io.github.msdk.datamodel.PolarityType.POSITIVE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 425, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(scan, io.github.msdk.io.mzml.data.MzMLCV.cvPolarityPositive).isPresent()) 	return io.[...] ` -topatch--> `if (false)  { 	return io.github.msdk.datamodel.PolarityType.POSITIVE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 425, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(scan, io.github.msdk.io.mzml.data.MzMLCV.cvPolarityPositive).isPresent()) 	return io.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!getScanList().getScans().isEmpty()) { 	io.github.msdk.io.mzml.data.MzMLScan scan = getScanList([...] ` -topatch--> `if (true) { 	io.github.msdk.io.mzml.data.MzMLScan scan = getScanList().getScans().get(0); 	if (getCV[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!getScanList().getScans().isEmpty()) { 	io.github.msdk.io.mzml.data.MzMLScan scan = getScanList([...] ` -topatch--> `if (false) { 	io.github.msdk.io.mzml.data.MzMLScan scan = getScanList().getScans().get(0); 	if (getC[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!getScanList().getScans().isEmpty()) { 	io.github.msdk.io.mzml.data.MzMLScan scan = getScanList([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || (((rawDataFile instan[...] ` -topatch--> `if (true)   { 	if (scan.getMzRange() != null) { 		java.lang.Double lowestMz = scan.getMzRange().lowe[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || (((rawDataFile instan[...] ` -topatch--> `if (false)   { 	if (scan.getMzRange() != null) { 		java.lang.Double lowestMz = scan.getMzRange().low[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || (((rawDataFile instan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 248, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || ((rawDataFile instanc[...] ` -topatch--> `if (true)  { 	if (scan.getTIC() != null) { 		java.lang.Float tic = scan.getTIC(); 		writeCVParam(xml[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 248, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || ((rawDataFile instanc[...] ` -topatch--> `if (false)  { 	if (scan.getTIC() != null) { 		java.lang.Float tic = scan.getTIC(); 		writeCVParam(xm[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 248, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || ((rawDataFile instanc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 272, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile) 	writeCVGroup(xmlStreamWrite[...] ` -topatch--> `if (true)  { 	writeCVGroup(xmlStreamWriter, spectrum.getCVParams());}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 272, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile) 	writeCVGroup(xmlStreamWrite[...] ` -topatch--> `if (false)  { 	writeCVGroup(xmlStreamWriter, spectrum.getCVParams());}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 272, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile) 	writeCVGroup(xmlStreamWrite[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 276, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 292, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 290, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getRetentionTime() != null) { 	java.lang.Float rt = scan.getRetentionTime(); 	writeCVParam([...] ` -topatch--> `if (true) { 	java.lang.Float rt = scan.getRetentionTime(); 	writeCVParam(xmlStreamWriter, new io.git[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 290, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getRetentionTime() != null) { 	java.lang.Float rt = scan.getRetentionTime(); 	writeCVParam([...] ` -topatch--> `if (false) { 	java.lang.Float rt = scan.getRetentionTime(); 	writeCVParam(xmlStreamWriter, new io.gi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 290, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getRetentionTime() != null) { 	java.lang.Float rt = scan.getRetentionTime(); 	writeCVParam([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 280, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 277, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, "1") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getScanDefinition() != null) { 	java.lang.String scanDefinition = scan.getScanDefinition();[...] ` -topatch--> `if (true) { 	java.lang.String scanDefinition = scan.getScanDefinition(); 	writeCVParam(xmlStreamWrit[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getScanDefinition() != null) { 	java.lang.String scanDefinition = scan.getScanDefinition();[...] ` -topatch--> `if (false) { 	java.lang.String scanDefinition = scan.getScanDefinition(); 	writeCVParam(xmlStreamWri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 283, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getScanDefinition() != null) { 	java.lang.String scanDefinition = scan.getScanDefinition();[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 303, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 304, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, "1") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 307, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 297, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getPolarity() == io.github.msdk.datamodel.PolarityType.POSITIVE) 	writeCVParam(xmlStreamWri[...] ` -topatch--> `if (true)  { 	writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.polarityPositiveCvPar[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 297, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getPolarity() == io.github.msdk.datamodel.PolarityType.POSITIVE) 	writeCVParam(xmlStreamWri[...] ` -topatch--> `if (false)  { 	writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.polarityPositiveCvPa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 297, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getPolarity() == io.github.msdk.datamodel.PolarityType.POSITIVE) 	writeCVParam(xmlStreamWri[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 298, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, io.github.msdk.io.mzml.data.MzMLCV.polarityPositiveCvParam) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 320, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 323, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 321, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 322, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getScanningRange() != null) { 	java.lang.Double lowerLimit = scan.getScanningRange().lowerE[...] ` -topatch--> `if (true) { 	java.lang.Double lowerLimit = scan.getScanningRange().lowerEndpoint(); 	java.lang.Doubl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getScanningRange() != null) { 	java.lang.Double lowerLimit = scan.getScanningRange().lowerE[...] ` -topatch--> `if (false) { 	java.lang.Double lowerLimit = scan.getScanningRange().lowerEndpoint(); 	java.lang.Doub[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 310, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan.getScanningRange() != null) { 	java.lang.Double lowerLimit = scan.getScanningRange().lowerE[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile) &&  (spectrum.getPrecursorL[...] ` -topatch--> `if (true)  {   	xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile) &&  (spectrum.getPrecursorL[...] ` -topatch--> `if (false)  {   	xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 325, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile) &&  (spectrum.getPrecursorL[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 431, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 435, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(doubleArrayCompression.get[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 421, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 422, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, "2") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 427, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ENCODED_LENGTH,  java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 425, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `mzBuffer = io.github.msdk.io.mzml.data.MzMLPeaksEncoder.encodeDouble(scan.getMzValues(), doubleArray[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 426, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 447, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 448, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 451, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `intensityBuffer =  io.github.msdk.io.mzml.data.MzMLPeaksEncoder.encodeFloat(scan.getIntensityValues([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 439, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter,  new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.da[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 443, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 444, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeCharacters(new java.lang.String(mzBuffer)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 462, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(floatArrayCompression.getA[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 466, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 453, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 454, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ENCODED_LENGTH,  java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 458, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `writeCVParam(xmlStreamWriter, new io.github.msdk.io.mzml.data.MzMLCVParam(io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 477, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 471, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeCharacters(new java.lang.String(intensityBuffer)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 470, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 475, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 476, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 474, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 675, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_OFFSET) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 676, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ID_REF,  "scan=" + scans.ge[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 673, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < scans.size(); i++) {  	xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 679, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 678, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeCharacters(java.lang.String.valueOf(spectrumIndices.get(i))) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksEncoder line: 89, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (compression) { 	case NUMPRESS_LINPRED_ZLIB : 	case NUMPRESS_POSINT_ZLIB : 	case NUMPRESS_SHL[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksEncoder line: 50, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (compression) { 	case NUMPRESS_LINPRED : 	case NUMPRESS_LINPRED_ZLIB :  		encodedData = new b[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (canceled) { 	dos.close(); 	fos.close(); 	xmlStreamWriter.close(); 	target.delete(); 	return null[...] ` -topatch--> `if (true) { 	dos.close(); 	fos.close(); 	xmlStreamWriter.close(); 	this.target.delete(); 	return nul[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (canceled) { 	dos.close(); 	fos.close(); 	xmlStreamWriter.close(); 	target.delete(); 	return null[...] ` -topatch--> `if (false) { 	dos.close(); 	fos.close(); 	xmlStreamWriter.close(); 	this.target.delete(); 	return nu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 207, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (canceled) { 	dos.close(); 	fos.close(); 	xmlStreamWriter.close(); 	target.delete(); 	return null[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 205, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.github.msdk.datamodel.MsScan scan : scans) {  	if (canceled) { 		dos.close(); 		fos.close();[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan instanceof io.github.msdk.io.mzml.data.MzMLMsScan) 	spectrum = ((io.github.msdk.io.mzml.dat[...] ` -topatch--> `if (true)  { 	spectrum = ((io.github.msdk.io.mzml.data.MzMLMsScan) (scan));}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scan instanceof io.github.msdk.io.mzml.data.MzMLMsScan) 	spectrum = ((io.github.msdk.io.mzml.dat[...] ` -topatch--> `if (false)  { 	spectrum = ((io.github.msdk.io.mzml.data.MzMLMsScan) (scan));}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scan instanceof io.github.msdk.io.mzml.data.MzMLMsScan) 	spectrum = ((io.github.msdk.io.mzml.dat[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || (((rawDataFile instan[...] ` -topatch--> `if (true)   { 	if (scan.getSpectrumType() == io.github.msdk.datamodel.MsSpectrumType.CENTROIDED)  	{[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || (((rawDataFile instan[...] ` -topatch--> `if (false)   { 	if (scan.getSpectrumType() == io.github.msdk.datamodel.MsSpectrumType.CENTROIDED)  	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 228, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || (((rawDataFile instan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 216, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `spectrumIndices.add(xmlStreamWriter.getLocation().getCharacterOffsetInLong()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 219, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ID, "scan=" + scan.getScanN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 220, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_DEFAULT_ARRAY_LENGTH,  java[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 217, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 218, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_INDEX, java.lang.String.val[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || ((rawDataFile instanc[...] ` -topatch--> `if (true)  { 	if (scan.getMsLevel() != null) { 		java.lang.Integer msLevel = scan.getMsLevel(); 		wr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || ((rawDataFile instanc[...] ` -topatch--> `if (false)  { 	if (scan.getMsLevel() != null) { 		java.lang.Integer msLevel = scan.getMsLevel(); 		w[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((!(rawDataFile instanceof io.github.msdk.io.mzml.data.MzMLRawDataFile)) || ((rawDataFile instanc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 483, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 487, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, java.lang.String.val[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 488, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_DEFAULT_DATA_PROCESSING_REF[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 486, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 660, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 671, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME, io.github.msdk.io.mzm[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 670, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_INDEX) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 661, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 662, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 667, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, "2") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 665, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `indexListOffset = xmlStreamWriter.getLocation().getCharacterOffsetInLong() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 666, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_INDEX_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 685, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_INDEX) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 686, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME, io.github.msdk.io.mzm[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 682, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 703, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 701, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_INDEX_LIST_OFFSET) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 702, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeCharacters(java.lang.String.valueOf(indexListOffset)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 708, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_FILE_CHECKSUM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 706, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `dos.on(false) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 697, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 698, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 712, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 709, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeCharacters(sha1Checksum) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 710, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 715, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndDocument() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 716, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 103, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.target = target ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 104, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.doubleArrayCompression = doubleArrayCompression ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 102, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.rawDataFile = rawDataFile ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 105, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.floatArrayCompression = floatArrayCompression ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 125, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `totalChromatograms = chromatograms.size() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 120, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.info((("Started export of " + rawDataFile.getName()) + " to ") + target) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `totalScans = scans.size() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 141, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.setDefaultNamespace(io.github.msdk.io.mzml.MzMLFileExportMethod.MZML_NAMESPACE) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 142, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.setPrefix(io.github.msdk.io.mzml.MzMLFileExportMethod.PREFIX_XSI, io.github.msdk.io.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 148, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_INDEXED_MZML) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 145, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartDocument(io.github.msdk.io.mzml.MzMLFileExportMethod.XML_ENCODING, io.gith[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 136, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `dos.on(true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 138, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.setOutput(dos) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 160, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ID, rawDataFile.getName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 157, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeNamespace(io.github.msdk.io.mzml.MzMLFileExportMethod.PREFIX_XSI, io.github.msd[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 158, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.MzMLFileExportMethod.XML_SCHEMA_INSTANCE, io.g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 164, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 161, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_VERSION, io.github.msdk.io.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 151, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.MzMLFileExportMethod.XML_SCHEMA_INSTANCE, io.g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 149, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeDefaultNamespace(io.github.msdk.io.mzml.MzMLFileExportMethod.MZML_NAMESPACE) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeNamespace(io.github.msdk.io.mzml.MzMLFileExportMethod.PREFIX_XSI, io.github.msd[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 155, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_MZML) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 156, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeDefaultNamespace(io.github.msdk.io.mzml.MzMLFileExportMethod.MZML_NAMESPACE) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 173, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_DATA_PROCESSING) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 174, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ID, io.github.msdk.io.mzml.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 179, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ORDER, "0") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 177, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_PROCESSING_METHOD) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 178, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_SOFTWARE_REF, io.github.msd[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 166, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 169, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_DATA_PROCESSING_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 170, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, "1") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 189, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_DEFAULT_INSTRUMENT_CONFIGUR[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 195, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 196, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_COUNT, java.lang.String.val[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 183, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 184, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 182, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 187, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_RUN) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 188, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ID, rawDataFile.getName()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksEncoder line: 137, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (compression) { 	case ZLIB : 		byte[] tmp = io.github.msdk.io.mzml.data.MzMLPeaksEncoder.Zlib[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 197, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_DEFAULT_DATA_PROCESSING_REF[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksEncoder line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `buffer.putFloat(f) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksEncoder line: 118, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (compression) { 	case NUMPRESS_LINPRED : 	case NUMPRESS_LINPRED_ZLIB : 	case NUMPRESS_POSINT [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (precursorList.getPrecursorElements().size() == 0) 	return java.util.Collections.emptyList(); ` -topatch--> `if (true)  { 	return java.util.Collections.emptyList();}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (precursorList.getPrecursorElements().size() == 0) 	return java.util.Collections.emptyList(); ` -topatch--> `if (false)  { 	return java.util.Collections.emptyList();}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 444, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (precursorList.getPrecursorElements().size() == 0) 	return java.util.Collections.emptyList(); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 766, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_ACCESSION, cvParam.getAcces[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 760, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeStartElement(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 763, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_CV_REF, io.github.msdk.io.m[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 781, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeEndElement() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 776, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_VALUE, value.orElse("")) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 773, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (name.isPresent()) 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME[...] ` -topatch--> `if (true)  { 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME, name.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 773, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (name.isPresent()) 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME[...] ` -topatch--> `if (false)  { 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME, name.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 773, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (name.isPresent()) 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 774, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_NAME, name.get()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 779, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_UNIT_ACCESSION, unitAccessi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 778, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (unitAccession.isPresent()) 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.[...] ` -topatch--> `if (true)  { 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_UNIT_ACCESSIO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 778, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (unitAccession.isPresent()) 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.[...] ` -topatch--> `if (false)  { 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.ATTR_UNIT_ACCESSI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileExportMethod line: 778, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (unitAccession.isPresent()) 	xmlStreamWriter.writeAttribute(io.github.msdk.io.mzml.data.MzMLTags.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvPolarityNegative).isPresent()) 	return io.github[...] ` -topatch--> `if (true)  { 	return io.github.msdk.datamodel.PolarityType.NEGATIVE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvPolarityNegative).isPresent()) 	return io.github[...] ` -topatch--> `if (false)  { 	return io.github.msdk.datamodel.PolarityType.NEGATIVE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 419, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvPolarityNegative).isPresent()) 	return io.github[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLScanWindowList line: 47, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `scanWindows.add(scanWindow) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLScanWindowList line: 29, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scanWindows = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 134, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.scanWindowList = new io.github.msdk.io.mzml.data.MzMLScanWindowList() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 137, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.scanWindow = new io.github.msdk.io.mzml.data.MzMLScanWindow() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 433, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) 	vars.scan.setScanWindowList([...] ` -topatch--> `if (true)  { 	this.vars.scan.setScanWindowList(this.vars.scanWindowList);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 433, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) 	vars.scan.setScanWindowList([...] ` -topatch--> `if (false)  { 	this.vars.scan.setScanWindowList(this.vars.scanWindowList);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 433, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) 	vars.scan.setScanWindowList([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 434, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.scan.setScanWindowList(vars.scanWindowList) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 430, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.scanWindowList.addScanWindow(vars.scanWindow) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLScan line: 48, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scanWindowList = java.util.Optional.ofNullable(scanWindowList) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 416, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvPolarityPositive).isPresent()) 	return io.github[...] ` -topatch--> `if (true)  { 	return io.github.msdk.datamodel.PolarityType.POSITIVE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 416, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvPolarityPositive).isPresent()) 	return io.github[...] ` -topatch--> `if (false)  { 	return io.github.msdk.datamodel.PolarityType.POSITIVE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 416, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvPolarityPositive).isPresent()) 	return io.github[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 505, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (retentionTime != null) 	return retentionTime; ` -topatch--> `if (true)  { 	return this.retentionTime;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 505, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (retentionTime != null) 	return retentionTime; ` -topatch--> `if (false)  { 	return this.retentionTime;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 505, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (retentionTime != null) 	return retentionTime; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spectrumType != null) 	return spectrumType; ` -topatch--> `if (true)  { 	return this.spectrumType;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spectrumType != null) 	return spectrumType; ` -topatch--> `if (false)  { 	return this.spectrumType;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 298, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (spectrumType != null) 	return spectrumType; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 295, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvProfileSpectrum).isPresent()) 	spectrumType = io[...] ` -topatch--> `if (true)  { 	this.spectrumType = io.github.msdk.datamodel.MsSpectrumType.PROFILE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 295, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvProfileSpectrum).isPresent()) 	spectrumType = io[...] ` -topatch--> `if (false)  { 	this.spectrumType = io.github.msdk.datamodel.MsSpectrumType.PROFILE;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 295, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvProfileSpectrum).isPresent()) 	spectrumType = io[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 293, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `spectrumType = io.github.msdk.datamodel.MsSpectrumType.CENTROIDED ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 291, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spectrumType == null) { 	if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).i[...] ` -topatch--> `if (true) { 	if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).isPresent())  	{ [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 291, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (spectrumType == null) { 	if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).i[...] ` -topatch--> `if (false) { 	if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).isPresent())  	{[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 291, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (spectrumType == null) { 	if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 292, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).isPresent()) 	spectrumType = i[...] ` -topatch--> `if (true)  { 	this.spectrumType = io.github.msdk.datamodel.MsSpectrumType.CENTROIDED;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 292, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).isPresent()) 	spectrumType = i[...] ` -topatch--> `if (false)  { 	this.spectrumType = io.github.msdk.datamodel.MsSpectrumType.CENTROIDED;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 292, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getCVValue(io.github.msdk.io.mzml.data.MzMLCV.cvCentroidSpectrum).isPresent()) 	spectrumType = i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 375, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `msLevel = java.lang.Integer.parseInt(value.get()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 374, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value.isPresent()) 	msLevel = java.lang.Integer.parseInt(value.get()); ` -topatch--> `if (true)  { 	msLevel = java.lang.Integer.parseInt(value.get());}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 374, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (value.isPresent()) 	msLevel = java.lang.Integer.parseInt(value.get()); ` -topatch--> `if (false)  { 	msLevel = java.lang.Integer.parseInt(value.get());}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 374, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (value.isPresent()) 	msLevel = java.lang.Integer.parseInt(value.get()); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 274, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (binaryDataInfo.getBitLength()) { 	case THIRTY_TWO_BIT_FLOAT : 	case THIRTY_TWO_BIT_INTEGER :[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 291, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (precision) { 	case 32 : 		{ 			int asInt;  			for (int i = 0; i < numPoints; i++) { 				asIn[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 304, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < numPoints; i++) { 	asLong = dis.readLong(); 	data[i] = java.lang.Double.longBits[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 305, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `asLong = dis.readLong() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 306, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `data[i] = java.lang.Double.longBitsToDouble(asLong) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 308, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 317, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `dis.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 150, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < numPoints; i++) { 	data[i] = dis.readFloat(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 151, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `data[i] = dis.readFloat() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 153, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 526, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (param.getUnitAccession().get()) { 	case io.github.msdk.io.mzml.data.MzMLCV.cvUnitsMin1 : 	ca[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 509, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.github.msdk.io.mzml.data.MzMLCVParam param : getScanList().getScans().get(0).getCVParamsList[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 508, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!getScanList().getScans().isEmpty()) { 	for (io.github.msdk.io.mzml.data.MzMLCVParam param : get[...] ` -topatch--> `if (true) { 	for (io.github.msdk.io.mzml.data.MzMLCVParam param : getScanList().getScans().get(0).ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 508, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!getScanList().getScans().isEmpty()) { 	for (io.github.msdk.io.mzml.data.MzMLCVParam param : get[...] ` -topatch--> `if (false) { 	for (io.github.msdk.io.mzml.data.MzMLCVParam param : getScanList().getScans().get(0).g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 508, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!getScanList().getScans().isEmpty()) { 	for (io.github.msdk.io.mzml.data.MzMLCVParam param : get[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 515, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (accession) { 	case io.github.msdk.io.mzml.data.MzMLCV.MS_RT_SCAN_START : 	case io.github.msd[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 593, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `value = java.util.Optional.ofNullable("") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 594, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return value ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 591, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `value = cvParam.getValue() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!value.isPresent()) 	value = java.util.Optional.ofNullable(""); ` -topatch--> `if (true)  { 	value = java.util.Optional.ofNullable("");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!value.isPresent()) 	value = java.util.Optional.ofNullable(""); ` -topatch--> `if (false)  { 	value = java.util.Optional.ofNullable("");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 592, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!value.isPresent()) 	value = java.util.Optional.ofNullable(""); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 589, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.github.msdk.io.mzml.data.MzMLCVParam cvParam : group.getCVParamsList()) { 	if (cvParam.getAc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 590, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cvParam.getAccession().equals(accession)) { 	value = cvParam.getValue(); 	if (!value.isPresent()[...] ` -topatch--> `if (true) { 	value = cvParam.getValue(); 	if (!value.isPresent())  	{ 		value = java.util.Optional.o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 590, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cvParam.getAccession().equals(accession)) { 	value = cvParam.getValue(); 	if (!value.isPresent()[...] ` -topatch--> `if (false) { 	value = cvParam.getValue(); 	if (!value.isPresent())  	{ 		value = java.util.Optional.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 590, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (cvParam.getAccession().equals(accession)) { 	value = cvParam.getValue(); 	if (!value.isPresent()[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 552, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return java.util.Optional.ofNullable(scanNumber) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLProductList line: 30, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.products = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLScanList line: 29, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scans = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLScanList line: 47, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `scans.add(scan) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPrecursorList line: 31, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.precursorElements = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 272, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `intensityValues =  io.github.msdk.io.mzml.data.MzMLPeaksDecoder.decodeToFloat(inputStream, getIntens[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 282, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(intensityValues, 0, array, 0, numOfDataPoints) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 279, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((array == null) || (array.length < numOfDataPoints)) { 	array = new float[numOfDataPoints];  	ja[...] ` -topatch--> `if (true) { 	array = new float[this.numOfDataPoints];  	java.lang.System.arraycopy(this.intensityVal[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 279, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((array == null) || (array.length < numOfDataPoints)) { 	array = new float[numOfDataPoints];  	ja[...] ` -topatch--> `if (false) { 	array = new float[this.numOfDataPoints];  	java.lang.System.arraycopy(this.intensityVa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 279, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((array == null) || (array.length < numOfDataPoints)) { 	array = new float[numOfDataPoints];  	ja[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 280, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `array = new float[numOfDataPoints] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 255, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.lang.System.arraycopy(mzValues, 0, array, 0, numOfDataPoints) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 253, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `array = new double[getNumberOfDataPoints()] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 252, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((array == null) || (array.length < getNumberOfDataPoints())) { 	array = new double[getNumberOfDa[...] ` -topatch--> `if (true) { 	array = new double[getNumberOfDataPoints()];  	java.lang.System.arraycopy(this.mzValues[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 252, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((array == null) || (array.length < getNumberOfDataPoints())) { 	array = new double[getNumberOfDa[...] ` -topatch--> `if (false) { 	array = new double[getNumberOfDataPoints()];  	java.lang.System.arraycopy(this.mzValue[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 252, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((array == null) || (array.length < getNumberOfDataPoints())) { 	array = new double[getNumberOfDa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getIntensityBinaryDataInfo().getArrayLength() != numOfDataPoints) { 	logger.warn( 	("Intensity b[...] ` -topatch--> `if (true) { 	this.logger.warn( 	("Intensity binary data array contains a different array length from[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getIntensityBinaryDataInfo().getArrayLength() != numOfDataPoints) { 	logger.warn( 	("Intensity b[...] ` -topatch--> `if (false) { 	this.logger.warn( 	("Intensity binary data array contains a different array length fro[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 265, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getIntensityBinaryDataInfo().getArrayLength() != numOfDataPoints) { 	logger.warn( 	("Intensity b[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 264, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (intensityValues == null) { 	if (getIntensityBinaryDataInfo().getArrayLength() != numOfDataPoints[...] ` -topatch--> `if (true) { 	if (getIntensityBinaryDataInfo().getArrayLength() != this.numOfDataPoints) { 		this.log[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 264, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (intensityValues == null) { 	if (getIntensityBinaryDataInfo().getArrayLength() != numOfDataPoints[...] ` -topatch--> `if (false) { 	if (getIntensityBinaryDataInfo().getArrayLength() != this.numOfDataPoints) { 		this.lo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 264, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (intensityValues == null) { 	if (getIntensityBinaryDataInfo().getArrayLength() != numOfDataPoints[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (io.github.msdk.io.mzml.data.MzMLCV.cvIntensityArray.equals(vars.binaryDataInfo.getArrayType().ge[...] ` -topatch--> `if (true) { 	this.vars.spectrum.setIntensityBinaryDataInfo(this.vars.binaryDataInfo); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (io.github.msdk.io.mzml.data.MzMLCV.cvIntensityArray.equals(vars.binaryDataInfo.getArrayType().ge[...] ` -topatch--> `if (false) { 	this.vars.spectrum.setIntensityBinaryDataInfo(this.vars.binaryDataInfo); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (io.github.msdk.io.mzml.data.MzMLCV.cvIntensityArray.equals(vars.binaryDataInfo.getArrayType().ge[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 190, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.spectrum.setIntensityBinaryDataInfo(vars.binaryDataInfo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 187, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.spectrum.setMzBinaryDataInfo(vars.binaryDataInfo) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!vars.skipBinaryDataArray) { 	if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(vars.binar[...] ` -topatch--> `if (true) { 	if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(this.vars.binaryDataInfo.getArr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!vars.skipBinaryDataArray) { 	if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(vars.binar[...] ` -topatch--> `if (false) { 	if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(this.vars.binaryDataInfo.getAr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!vars.skipBinaryDataArray) { 	if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(vars.binar[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(vars.binaryDataInfo.getArrayType().getAccess[...] ` -topatch--> `if (true) { 	this.vars.spectrum.setMzBinaryDataInfo(this.vars.binaryDataInfo); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(vars.binaryDataInfo.getArrayType().getAccess[...] ` -topatch--> `if (false) { 	this.vars.spectrum.setMzBinaryDataInfo(this.vars.binaryDataInfo); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 186, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (io.github.msdk.io.mzml.data.MzMLCV.cvMzArray.equals(vars.binaryDataInfo.getArrayType().getAccess[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isBitLengthAccession(accession)) { 	vars.binaryDataInfo.setBitLength(accessi[...] ` -topatch--> `if (true) { 	this.vars.binaryDataInfo.setBitLength(accession); } else { 	if (this.vars.binaryDataInf[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isBitLengthAccession(accession)) { 	vars.binaryDataInfo.setBitLength(accessi[...] ` -topatch--> `if (false) { 	this.vars.binaryDataInfo.setBitLength(accession); } else { 	if (this.vars.binaryDataIn[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isBitLengthAccession(accession)) { 	vars.binaryDataInfo.setBitLength(accessi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 166, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.binaryDataInfo.setBitLength(accession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM) &&  tracker.inside(io.github.[...] ` -topatch--> `if (true)  { 	java.lang.String accession = getRequiredAttribute(xmlStreamReader, "accession").toStri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM) &&  tracker.inside(io.github.[...] ` -topatch--> `if (false)  { 	java.lang.String accession = getRequiredAttribute(xmlStreamReader, "accession").toStr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 162, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM) &&  tracker.inside(io.github.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 158, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.scan.addCVParam(cvParam) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) 	vars.spectrum.getScanList().add[...] ` -topatch--> `if (true)  { 	this.vars.spectrum.getScanList().addCVParam(cvParam);} else   { 	this.vars.scan.addCVP[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) 	vars.spectrum.getScanList().add[...] ` -topatch--> `if (false)  { 	this.vars.spectrum.getScanList().addCVParam(cvParam);} else   { 	this.vars.scan.addCV[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) 	vars.spectrum.getScanList().add[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) 	if (!tracker.inside(io.g[...] ` -topatch--> `if (true)  { 	if (!this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN))  	{ 		this.va[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) 	if (!tracker.inside(io.g[...] ` -topatch--> `if (false)  { 	if (!this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN))  	{ 		this.v[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) 	if (!tracker.inside(io.g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_LIST)) { 	io.github.msdk.io.mzml.da[...] ` -topatch--> `if (true) { 	io.github.msdk.io.mzml.data.MzMLCVParam cvParam = createMzMLCVParam(xmlStreamReader); 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_LIST)) { 	io.github.msdk.io.mzml.da[...] ` -topatch--> `if (false) { 	io.github.msdk.io.mzml.data.MzMLCVParam cvParam = createMzMLCVParam(xmlStreamReader); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_LIST)) { 	io.github.msdk.io.mzml.da[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 182, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.binaryDataInfo.setPosition( xmlStreamReader.getLocation().getCharacterOffset() + bomOffset) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((vars.spectrum != null) && (!vars.skipBinaryDataArray)) { 	int bomOffset = xmlStreamReader.getLo[...] ` -topatch--> `if (true) { 	int bomOffset = xmlStreamReader.getLocation().getBomLength();  	this.vars.binaryDataInf[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((vars.spectrum != null) && (!vars.skipBinaryDataArray)) { 	int bomOffset = xmlStreamReader.getLo[...] ` -topatch--> `if (false) { 	int bomOffset = xmlStreamReader.getLocation().getBomLength();  	this.vars.binaryDataIn[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((vars.spectrum != null) && (!vars.skipBinaryDataArray)) { 	int bomOffset = xmlStreamReader.getLo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 169, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isArrayTypeAccession(accession)) { 	vars.binaryDataInfo.setArrayType(accessi[...] ` -topatch--> `if (true) { 	this.vars.binaryDataInfo.setArrayType(accession); } else { 	this.vars.skipBinaryDataArr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 169, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isArrayTypeAccession(accession)) { 	vars.binaryDataInfo.setArrayType(accessi[...] ` -topatch--> `if (false) { 	this.vars.binaryDataInfo.setArrayType(accession); } else { 	this.vars.skipBinaryDataAr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 169, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isArrayTypeAccession(accession)) { 	vars.binaryDataInfo.setArrayType(accessi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 170, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.binaryDataInfo.setArrayType(accession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isCompressionTypeAccession(accession)) { 	manageCompression(vars.binaryDataI[...] ` -topatch--> `if (true) { 	manageCompression(this.vars.binaryDataInfo, accession); } else { 	if (this.vars.binaryD[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isCompressionTypeAccession(accession)) { 	manageCompression(vars.binaryDataI[...] ` -topatch--> `if (false) { 	manageCompression(this.vars.binaryDataInfo, accession); } else { 	if (this.vars.binary[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 167, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (vars.binaryDataInfo.isCompressionTypeAccession(accession)) { 	manageCompression(vars.binaryDataI[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 168, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `manageCompression(vars.binaryDataInfo, accession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 131, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.scan = new io.github.msdk.io.mzml.data.MzMLScan() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.binaryDataInfo = new io.github.msdk.io.mzml.data.MzMLBinaryDataInfo(encodedLength, vars.default[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 123, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (arrayLength != null) { 	vars.binaryDataInfo = new io.github.msdk.io.mzml.data.MzMLBinaryDataInfo[...] ` -topatch--> `if (true) { 	this.vars.binaryDataInfo = new io.github.msdk.io.mzml.data.MzMLBinaryDataInfo(encodedLe[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 123, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (arrayLength != null) { 	vars.binaryDataInfo = new io.github.msdk.io.mzml.data.MzMLBinaryDataInfo[...] ` -topatch--> `if (false) { 	this.vars.binaryDataInfo = new io.github.msdk.io.mzml.data.MzMLBinaryDataInfo(encodedL[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 123, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arrayLength != null) { 	vars.binaryDataInfo = new io.github.msdk.io.mzml.data.MzMLBinaryDataInfo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 120, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.skipBinaryDataArray = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 150, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.spectrum.getCVParams().addCVParam(cvParam) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((((!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY_LIST)) &&  (!trac[...] ` -topatch--> `if (true)    { 	io.github.msdk.io.mzml.data.MzMLCVParam cvParam = createMzMLCVParam(xmlStreamReader)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((((!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY_LIST)) &&  (!trac[...] ` -topatch--> `if (false)    { 	io.github.msdk.io.mzml.data.MzMLCVParam cvParam = createMzMLCVParam(xmlStreamReader[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 140, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((((!tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY_LIST)) &&  (!trac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 116, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.spectrum = new io.github.msdk.io.mzml.data.MzMLMsScan(newRawFile, is, id, scanNumber, vars.defa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 113, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `vars.defaultArrayLength =  getRequiredAttribute(xmlStreamReader, "defaultArrayLength").toInt() ` -topatch--> `-` (null) 
[ERROR] fr.inria.astor.core.validation.junit.LaucherJUnitProcess.getTestResult(LaucherJUnitProcess.java:294) - Error reading the validation process
 output: 
Europe/Paris
/bin/bash: line 4: 827894 Killed                  /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin/java -Xmx2048m -Dmutnumber_0=null -cp /com.gzoltar-0.1.1-jar-with-dependencies.jar":/proj/nobackup/snic2020-10-10/astor/AstorMain-AstorJKali-repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/bin/variant-338/:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-datamodel/0.0.12-SNAPSHOT/msdk-datamodel-0.0.12-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-formula/2.0/cdk-formula-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/javax/vecmath/vecmath/1.5.2/vecmath-1.5.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-core/2.0/cdk-core-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-interfaces/2.0/cdk-interfaces-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/openscience/cdk/cdk-standard/2.0/cdk-standard-2.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-spectra-centroidprofiledetection/0.0.12-SNAPSHOT/msdk-spectra-centroidprofiledetection-0.0.12-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-math3/3.6.1/commons-math3-3.6.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/io/github/msdk/msdk-io-mzxml/0.0.12-SNAPSHOT/msdk-io-mzxml-0.0.12-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/dsiutils/2.3.6/dsiutils-2.3.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/it/unimi/dsi/fastutil/7.1.0/fastutil-7.1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/martiansoftware/jsap/2.1/jsap-2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-configuration/commons-configuration/1.10/commons-configuration-1.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-logging/commons-logging/1.1.1/commons-logging-1.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-collections/commons-collections/20040616/commons-collections-20040616.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/apache/commons/commons-pool2/2.4.2/commons-pool2-2.4.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/chhh/javolution-core-java-msftbx/6.11.8/javolution-core-java-msftbx-6.11.8.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-io/commons-io/2.5/commons-io-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/mockito/mockito-core/2.10.0/mockito-core-2.10.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy/1.7.4/byte-buddy-1.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/net/bytebuddy/byte-buddy-agent/1.7.4/byte-buddy-agent-1.7.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/objenesis/objenesis/2.6/objenesis-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.16.1/system-rules-1.16.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/slf4j/slf4j-simple/1.7.25/slf4j-simple-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/code/findbugs/jsr305/3.0.2/jsr305-3.0.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/guava/guava/23.0/guava-23.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/errorprone/error_prone_annotations/2.0.18/error_prone_annotations-2.0.18.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/com/google/j2objc/j2objc-annotations/1.1/j2objc-annotations-1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/.m2/org/codehaus/mojo/animal-sniffer-annotations/1.14/animal-sniffer-annotations-1.14.jar:/proj/nobackup/snic2020-10-10/astor/AstorMain-AstorJKali-repairnator-repairnator-experiments-msdk-msdk-382387754-20180522-234926-firstCommit/bin/default/:/pfs/nobackup/home/d/dginelli/development/astor-1.0.0-SNAPSHOT-jar-with-dependencies.jar":/usr/lib/jvm/java-8-openjdk-amd64/lib/tools.jar":/pfs/nobackup/home/d/dginelli/development/repairnator-pipeline-3.3-SNAPSHOT-jar-with-dependencies.jar": fr.inria.astor.core.validation.junit.JUnitNologExternalExecutor io.github.msdk.io.mzml.BinaryDataArrayTest io.github.msdk.io.mzml.MzMLFileExportMethodTest io.github.msdk.io.mzml.MzMLFileImportMethodTest

[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 445, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.spectrumList.add(vars.spectrum) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 441, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { 	if (((vars.s[...] ` -topatch--> `if (true) { 	if (((this.vars.spectrum.getMzBinaryDataInfo() != null) &&  	(this.vars.spectrum.getInt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 441, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { 	if (((vars.s[...] ` -topatch--> `if (false) { 	if (((this.vars.spectrum.getMzBinaryDataInfo() != null) &&  	(this.vars.spectrum.getIn[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 441, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { 	if (((vars.s[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 442, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((vars.spectrum.getMzBinaryDataInfo() != null) &&  (vars.spectrum.getIntensityBinaryDataInfo() ![...] ` -topatch--> `if (true)   { 	this.vars.spectrumList.add(this.vars.spectrum); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 442, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((vars.spectrum.getMzBinaryDataInfo() != null) &&  (vars.spectrum.getIntensityBinaryDataInfo() ![...] ` -topatch--> `if (false)   { 	this.vars.spectrumList.add(this.vars.spectrum); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 442, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((vars.spectrum.getMzBinaryDataInfo() != null) &&  (vars.spectrum.getIntensityBinaryDataInfo() ![...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 160, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.intensityBinaryDataInfo = intensityBinaryDataInfo ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 437, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) 	vars.spectrum.getScanList().[...] ` -topatch--> `if (true)  { 	this.vars.spectrum.getScanList().addScan(this.vars.scan);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 437, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) 	vars.spectrum.getScanList().[...] ` -topatch--> `if (false)  { 	this.vars.spectrum.getScanList().addScan(this.vars.scan);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 437, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) 	vars.spectrum.getScanList().[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 438, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `vars.spectrum.getScanList().addScan(vars.scan) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 138, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mzBinaryDataInfo = mzBinaryDataInfo ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getMzBinaryDataInfo().getArrayLength() != numOfDataPoints) { 	logger.warn( 	("m/z binary data ar[...] ` -topatch--> `if (true) { 	this.logger.warn( 	("m/z binary data array contains a different array length from the d[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (getMzBinaryDataInfo().getArrayLength() != numOfDataPoints) { 	logger.warn( 	("m/z binary data ar[...] ` -topatch--> `if (false) { 	this.logger.warn( 	("m/z binary data array contains a different array length from the [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 239, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (getMzBinaryDataInfo().getArrayLength() != numOfDataPoints) { 	logger.warn( 	("m/z binary data ar[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mzValues == null) { 	if (getMzBinaryDataInfo().getArrayLength() != numOfDataPoints) { 		logger.w[...] ` -topatch--> `if (true) { 	if (getMzBinaryDataInfo().getArrayLength() != this.numOfDataPoints) { 		this.logger.war[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mzValues == null) { 	if (getMzBinaryDataInfo().getArrayLength() != numOfDataPoints) { 		logger.w[...] ` -topatch--> `if (false) { 	if (getMzBinaryDataInfo().getArrayLength() != this.numOfDataPoints) { 		this.logger.wa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 238, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mzValues == null) { 	if (getMzBinaryDataInfo().getArrayLength() != numOfDataPoints) { 		logger.w[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 246, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `mzValues = io.github.msdk.io.mzml.data.MzMLPeaksDecoder.decodeToDouble(inputStream, getMzBinaryDataI[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLScan line: 30, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scanWindowList = java.util.Optional.ofNullable(null) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 550, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scanNumberFound) { 	java.lang.Integer scanNumber = java.lang.Integer.parseInt(matcher.group(1));[...] ` -topatch--> `if (true) { 	java.lang.Integer scanNumber = java.lang.Integer.parseInt(matcher.group(1)); 	return ja[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 550, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (scanNumberFound) { 	java.lang.Integer scanNumber = java.lang.Integer.parseInt(matcher.group(1));[...] ` -topatch--> `if (false) { 	java.lang.Integer scanNumber = java.lang.Integer.parseInt(matcher.group(1)); 	return j[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 550, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (scanNumberFound) { 	java.lang.Integer scanNumber = java.lang.Integer.parseInt(matcher.group(1));[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 97, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.intensityBinaryDataInfo = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 98, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.spectrumType = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 95, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.numOfDataPoints = numOfDataPoints ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 96, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mzBinaryDataInfo = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 93, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.id = id ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 94, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scanNumber = scanNumber ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 91, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dataFile = dataFile ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 92, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.inputStream = is ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 103, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mzValues = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 104, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.intensityValues = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 101, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mzRange = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 102, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mzScanWindowRange = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 99, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.tic = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 100, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.retentionTime = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 89, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.productList = new io.github.msdk.io.mzml.data.MzMLProductList() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 90, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.scanList = new io.github.msdk.io.mzml.data.MzMLScanList() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 87, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cvParams = new io.github.msdk.io.mzml.data.MzMLCVGroup() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLMsScan line: 88, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.precursorList = new io.github.msdk.io.mzml.data.MzMLPrecursorList() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 202, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `mappedByteBufferInputStream.constrain(binaryDataInfo.getPosition(), lengthIn) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 203, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `is = java.util.Base64.getDecoder().wrap(mappedByteBufferInputStream) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 219, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((data == null) || (data.length < numPoints)) 	data = new double[numPoints]; ` -topatch--> `if (true)  { 	data = new double[numPoints];}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 219, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((data == null) || (data.length < numPoints)) 	data = new double[numPoints]; ` -topatch--> `if (false)  { 	data = new double[numPoints];}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 219, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((data == null) || (data.length < numPoints)) 	data = new double[numPoints]; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 220, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `data = new double[numPoints] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryDataInfo.getCompressionType() != null) { 	switch (binaryDataInfo.getCompressionType()) { 	[...] ` -topatch--> `if (true) { 	switch (binaryDataInfo.getCompressionType()) { 		case ZLIB : 		case NUMPRESS_LINPRED_ZL[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryDataInfo.getCompressionType() != null) { 	switch (binaryDataInfo.getCompressionType()) { 	[...] ` -topatch--> `if (false) { 	switch (binaryDataInfo.getCompressionType()) { 		case ZLIB : 		case NUMPRESS_LINPRED_Z[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryDataInfo.getCompressionType() != null) { 	switch (binaryDataInfo.getCompressionType()) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 225, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (binaryDataInfo.getCompressionType()) { 	case ZLIB : 	case NUMPRESS_LINPRED_ZLIB : 	case NUMP[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 241, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (binaryDataInfo.getCompressionType()) { 	case NUMPRESS_LINPRED : 	case NUMPRESS_LINPRED_ZLIB [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 124, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.compressionType = getCompressionType(compressionTypeAccession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 101, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return bitLength ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bitLength.getValue().equals(accession)) 	return bitLength; ` -topatch--> `if (true)  { 	return bitLength;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (bitLength.getValue().equals(accession)) 	return bitLength; ` -topatch--> `if (false)  { 	return bitLength;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 100, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (bitLength.getValue().equals(accession)) 	return bitLength; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 99, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.github.msdk.io.mzml.data.MzMLBitLength bitLength : io.github.msdk.io.mzml.data.MzMLBitLength[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.bitLength = getBitLength(bitLengthAccession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rem == 0) 	byteBuffer(++curr).position(0); ` -topatch--> `if (true)  { 	byteBuffer(++this.curr).position(0);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (rem == 0) 	byteBuffer(++curr).position(0); ` -topatch--> `if (false)  { 	byteBuffer(++this.curr).position(0);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (rem == 0) 	byteBuffer(++curr).position(0); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 217, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `byteBuffer[curr].get(b, offset + read, java.lang.Math.min(realLength - read, rem)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 218, pointed element: CtOperatorAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtOperatorAssignmentImpl) `read += java.lang.Math.min(realLength, rem) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) 	return 0; ` -topatch--> `if (true)  { 	return 0;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) 	return 0; ` -topatch--> `if (false)  { 	return 0;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (length == 0) 	return 0; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining == 0) 	return -1; ` -topatch--> `if (true)  { 	return -1;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining == 0) 	return -1; ` -topatch--> `if (false)  { 	return -1;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 209, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (remaining == 0) 	return -1; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 210, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return -1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 213, pointed element: CtWhileImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtWhileImpl) `while (read < realLength) { 	int rem = byteBuffer(curr).remaining(); 	if (rem == 0) 		byteBuffer(++c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 46, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `value = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.FileMemoryMapper line: 44, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `aFile.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 224, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return arrayType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (arrayType.getAccession().equals(accession)) 	return arrayType; ` -topatch--> `if (true)  { 	return arrayType;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (arrayType.getAccession().equals(accession)) 	return arrayType; ` -topatch--> `if (false)  { 	return arrayType;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (arrayType.getAccession().equals(accession)) 	return arrayType; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 222, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.github.msdk.io.mzml.data.MzMLArrayType arrayType : io.github.msdk.io.mzml.data.MzMLArrayType[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 185, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arrayType = getArrayType(arrayTypeAccession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 160, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (io.github.msdk.io.mzml.data.MzMLCompressionType compressionType : io.github.msdk.io.mzml.data.M[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 162, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return compressionType ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (compressionType.getAccession().equals(accession)) 	return compressionType; ` -topatch--> `if (true)  { 	return compressionType;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (compressionType.getAccession().equals(accession)) 	return compressionType; ` -topatch--> `if (false)  { 	return compressionType;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (compressionType.getAccession().equals(accession)) 	return compressionType; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 127, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < chunks; i++) 	byteBuffer[i] =  	fileChannel.map(mapMode, i * io.github.msdk.io.m[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 126, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final java.nio.ByteBuffer[] byteBuffer = new java.nio.ByteBuffer[chunks] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 128, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `byteBuffer[i] =  fileChannel.map(mapMode, i * io.github.msdk.io.mzml.util.ByteBufferInputStream.CHUN[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 131, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final boolean[] readyToUse = new boolean[chunks] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `byteBuffer[0].position(0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 132, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `java.util.Arrays.fill(readyToUse, true) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 124, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `final long size = fileChannel.size() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputStream instanceof io.github.msdk.io.mzml.util.ByteBufferInputStream) { 	io.github.msdk.io.m[...] ` -topatch--> `if (true) { 	io.github.msdk.io.mzml.util.ByteBufferInputStream mappedByteBufferInputStream = ((io.gi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputStream instanceof io.github.msdk.io.mzml.util.ByteBufferInputStream) { 	io.github.msdk.io.m[...] ` -topatch--> `if (false) { 	io.github.msdk.io.mzml.util.ByteBufferInputStream mappedByteBufferInputStream = ((io.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 200, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (inputStream instanceof io.github.msdk.io.mzml.util.ByteBufferInputStream) { 	io.github.msdk.io.m[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lengthIn == 0) { 	return new double[0]; } ` -topatch--> `if (true) { 	return new double[0]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lengthIn == 0) { 	return new double[0]; } ` -topatch--> `if (false) { 	return new double[0]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 211, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lengthIn == 0) { 	return new double[0]; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_REF)) { 	j[...] ` -topatch--> `if (true) { 	java.lang.String refValue = getRequiredAttribute(xmlStreamReader, "ref").toString(); 	f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_REF)) { 	j[...] ` -topatch--> `if (false) { 	java.lang.String refValue = getRequiredAttribute(xmlStreamReader, "ref").toString(); 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 195, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_REF)) { 	j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR_LIST)) {  	if (openingTagName.[...] ` -topatch--> `if (true) {  	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR_LIST)) {  	if (openingTagName.[...] ` -topatch--> `if (false) {  	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR_LIST)) {  	if (openingTagName.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	vars.product [...] ` -topatch--> `if (true) { 	this.vars.product = new io.github.msdk.io.mzml.data.MzMLProduct(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	vars.product [...] ` -topatch--> `if (false) { 	this.vars.product = new io.github.msdk.io.mzml.data.MzMLProduct(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	vars.product [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 178, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY)) { 	if ((vars.spec[...] ` -topatch--> `if (true) { 	if ((this.vars.spectrum != null) && (!this.vars.skipBinaryDataArray)) { 		int bomOffset[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 178, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY)) { 	if ((vars.spec[...] ` -topatch--> `if (false) { 	if ((this.vars.spectrum != null) && (!this.vars.skipBinaryDataArray)) { 		int bomOffse[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 178, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY)) { 	if ((vars.spec[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST)) { 	vars[...] ` -topatch--> `if (true) { 	this.vars.scanWindowList = new io.github.msdk.io.mzml.data.MzMLScanWindowList();  } els[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST)) { 	vars[...] ` -topatch--> `if (false) { 	this.vars.scanWindowList = new io.github.msdk.io.mzml.data.MzMLScanWindowList();  } el[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST)) { 	vars[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) { 	vars.scan = new [...] ` -topatch--> `if (true) { 	this.vars.scan = new io.github.msdk.io.mzml.data.MzMLScan();  } else { 	if (openingTagN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) { 	vars.scan = new [...] ` -topatch--> `if (false) { 	this.vars.scan = new io.github.msdk.io.mzml.data.MzMLScan();  } else { 	if (openingTag[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) { 	vars.scan = new [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)) { 	var[...] ` -topatch--> `if (true) { 	this.vars.skipBinaryDataArray = false; 	int encodedLength = getRequiredAttribute(xmlStr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)) { 	var[...] ` -topatch--> `if (false) { 	this.vars.skipBinaryDataArray = false; 	int encodedLength = getRequiredAttribute(xmlSt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 119, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)) { 	var[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 296, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `progress = 1.0F ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM)) { 	if (((((!tra[...] ` -topatch--> `if (true) { 	if (((((!this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM)) { 	if (((((!tra[...] ` -topatch--> `if (false) { 	if (((((!this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRA[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 139, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM)) { 	if (((((!tra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) { 	vars.scan[...] ` -topatch--> `if (true) { 	this.vars.scanWindow = new io.github.msdk.io.mzml.data.MzMLScanWindow();  } else { 	if [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) { 	vars.scan[...] ` -topatch--> `if (false) { 	this.vars.scanWindow = new io.github.msdk.io.mzml.data.MzMLScanWindow();  } else { 	if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 136, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) { 	vars.scan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 290, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `progress = 1.0F ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 93, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newRawFile.setDefaultDataProcessingScan(defaultDataProcessingRefChromatogram.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 291, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.info("Parsing Complete") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 87, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newRawFile.setDefaultDataProcessingScan(defaultDataProcessingRefScan.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 264, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastLoggedProgress = ((int) (progress * 10)) * 10 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 265, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.debug(("Parsing in progress... " + lastLoggedProgress) + "% completed") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { 	java.lang.St[...] ` -topatch--> `if (true) { 	java.lang.String id = getRequiredAttribute(xmlStreamReader, "id").toString(); 	java.lan[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { 	java.lang.St[...] ` -topatch--> `if (false) { 	java.lang.String id = getRequiredAttribute(xmlStreamReader, "id").toString(); 	java.la[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 110, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { 	java.lang.St[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 313, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((((tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM) &&  tracker.inside(io.g[...] ` -topatch--> `if (true)    { 	java.lang.String accession = getRequiredAttribute(xmlStreamReader, "accession").toSt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 313, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((((tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM) &&  tracker.inside(io.g[...] ` -topatch--> `if (false)    { 	java.lang.String accession = getRequiredAttribute(xmlStreamReader, "accession").toS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 313, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((((tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM) &&  tracker.inside(io.g[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	if (openingTagName.conten[...] ` -topatch--> `if (true) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WIN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	if (openingTagName.conten[...] ` -topatch--> `if (false) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 338, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	if (openingTagName.conten[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	vars.product [...] ` -topatch--> `if (true) { 	this.vars.product = new io.github.msdk.io.mzml.data.MzMLProduct();  } else { 	if (this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	vars.product [...] ` -topatch--> `if (false) { 	this.vars.product = new io.github.msdk.io.mzml.data.MzMLProduct();  } else { 	if (this[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 335, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	vars.product [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 330, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	final javol[...] ` -topatch--> `if (true) { 	final javolution.text.CharArray spectrumRef = xmlStreamReader.getAttributeValue(null, "[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 330, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	final javol[...] ` -topatch--> `if (false) { 	final javolution.text.CharArray spectrumRef = xmlStreamReader.getAttributeValue(null, [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 330, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	final javol[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 285, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY)) { 	if ((vars.chro[...] ` -topatch--> `if (true) { 	if ((this.vars.chromatogram != null) && (!this.vars.skipBinaryDataArray)) { 		int bomOf[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 285, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY)) { 	if ((vars.chro[...] ` -topatch--> `if (false) { 	if ((this.vars.chromatogram != null) && (!this.vars.skipBinaryDataArray)) { 		int bomO[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 285, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY)) { 	if ((vars.chro[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 302, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_REF)) { 	j[...] ` -topatch--> `if (true) { 	java.lang.String refValue = xmlStreamReader.getAttributeValue(null, "ref").toString(); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 302, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_REF)) { 	j[...] ` -topatch--> `if (false) { 	java.lang.String refValue = xmlStreamReader.getAttributeValue(null, "ref").toString();[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 302, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_REF)) { 	j[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM)) { 	java.lan[...] ` -topatch--> `if (true) { 	java.lang.String chromatogramId = getRequiredAttribute(xmlStreamReader, "id").toString([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM)) { 	java.lan[...] ` -topatch--> `if (false) { 	java.lang.String chromatogramId = getRequiredAttribute(xmlStreamReader, "id").toString[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 259, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM)) { 	java.lan[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 247, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT_LIST)) { 	if (openingTagName.con[...] ` -topatch--> `if (true) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WIN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 247, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT_LIST)) { 	if (openingTagName.con[...] ` -topatch--> `if (false) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 247, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT_LIST)) { 	if (openingTagName.con[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)) { 	var[...] ` -topatch--> `if (true) { 	this.vars.skipBinaryDataArray = false; 	int encodedLength = getRequiredAttribute(xmlStr[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)) { 	var[...] ` -topatch--> `if (false) { 	this.vars.skipBinaryDataArray = false; 	int encodedLength = getRequiredAttribute(xmlSt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 275, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)) { 	var[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM)) { 	if ((((!trac[...] ` -topatch--> `if (true) { 	if ((((!this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM)) { 	if ((((!trac[...] ` -topatch--> `if (false) { 	if ((((!this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_BINARY_DATA_ARRAY[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 267, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CV_PARAM)) { 	if ((((!trac[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 366, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	if (openingTagName.contentE[...] ` -topatch--> `if (true) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WIN[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 366, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	if (openingTagName.contentE[...] ` -topatch--> `if (false) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WI[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 366, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	if (openingTagName.contentE[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 259, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `progress = ((float) (xmlStreamReader.getLocation().getCharacterOffset())) /  ((io.github.msdk.io.mzm[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 585, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryInfo.getCompressionType() == io.github.msdk.io.mzml.data.MzMLCompressionType.NO_COMPRESSIO[...] ` -topatch--> `if (true)  { 	binaryInfo.setCompressionType(accession);} else  { 	if (binaryInfo.getCompressionType([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 585, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryInfo.getCompressionType() == io.github.msdk.io.mzml.data.MzMLCompressionType.NO_COMPRESSIO[...] ` -topatch--> `if (false)  { 	binaryInfo.setCompressionType(accession);} else  { 	if (binaryInfo.getCompressionType[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 585, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryInfo.getCompressionType() == io.github.msdk.io.mzml.data.MzMLCompressionType.NO_COMPRESSIO[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 586, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `binaryInfo.setCompressionType(accession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 228, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `logger.info("Began parsing file: " + mzMLFile.getAbsolutePath()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 229, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `is = io.github.msdk.io.mzml.util.FileMemoryMapper.mapToMemory(mzMLFile) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 677, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `msFunctionsList = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 675, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `spectrumList = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 676, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chromatogramsList = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 673, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scanWindow = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 674, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `referenceableParamGroupList = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 671, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scan = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 672, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `scanWindowList = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 669, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selectedIon = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 670, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `activation = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 667, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `isolationWindow = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 668, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `selectedIonList = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 665, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `precursor = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 666, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `product = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 663, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `binaryDataInfo = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 664, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `referenceableParamGroup = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 661, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `spectrum = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 662, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `chromatogram = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 659, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `defaultArrayLength = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 660, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `skipBinaryDataArray = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 42, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (accession.length() == 0) 	throw new java.lang.IllegalArgumentException("Accession can't be an em[...] ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("Accession can't be an empty string");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 42, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (accession.length() == 0) 	throw new java.lang.IllegalArgumentException("Accession can't be an em[...] ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("Accession can't be an empty string");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 42, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (accession.length() == 0) 	throw new java.lang.IllegalArgumentException("Accession can't be an em[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 44, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.accession = accession ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((value != null) && (value.length() == 0)) 	value = null; ` -topatch--> `if (true)  { 	value = null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((value != null) && (value.length() == 0)) 	value = null; ` -topatch--> `if (false)  { 	value = null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 45, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((value != null) && (value.length() == 0)) 	value = null; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 47, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.value = java.util.Optional.ofNullable(value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((name != null) && (name.length() == 0)) 	name = null; ` -topatch--> `if (true)  { 	name = null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((name != null) && (name.length() == 0)) 	name = null; ` -topatch--> `if (false)  { 	name = null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 48, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((name != null) && (name.length() == 0)) 	name = null; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 40, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (accession == null) 	throw new java.lang.IllegalArgumentException("Accession can't be null"); ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException("Accession can't be null");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 40, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (accession == null) 	throw new java.lang.IllegalArgumentException("Accession can't be null"); ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException("Accession can't be null");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 40, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (accession == null) 	throw new java.lang.IllegalArgumentException("Accession can't be null"); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 50, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = java.util.Optional.ofNullable(name) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 51, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((unitAccession != null) && (unitAccession.length() == 0)) 	unitAccession = null; ` -topatch--> `if (true)  { 	unitAccession = null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 51, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((unitAccession != null) && (unitAccession.length() == 0)) 	unitAccession = null; ` -topatch--> `if (false)  { 	unitAccession = null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 51, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((unitAccession != null) && (unitAccession.length() == 0)) 	unitAccession = null; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVParam line: 53, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.unitAccession = java.util.Optional.ofNullable(unitAccession) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVGroup line: 30, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cvParams = new java.util.ArrayList<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLCVGroup line: 53, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `cvParams.add(cvParam) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 59, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `mappedByteBufferInputStream.constrain(binaryDataInfo.getPosition(), lengthIn) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 60, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `is = java.util.Base64.getDecoder().wrap(mappedByteBufferInputStream) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 66, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.msFunctions = msFunctions ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 67, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.msScans = msScans ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 97, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (javolution.text.CharArray aStack : stack) { 	if (aStack.contentEquals(tag)) { 		return true; 	}[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.chromatograms = chromatograms ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 69, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultInstrumentConfiguration = "unknown" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tag == null) 	return false; ` -topatch--> `if (true)  { 	return false;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tag == null) 	return false; ` -topatch--> `if (false)  { 	return false;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 95, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tag == null) 	return false; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 64, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.sourceFile = sourceFile ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 65, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = (sourceFile != null) ? sourceFile.getName() : null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 147, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (precision) { 	case 32 : 		{  			for (int i = 0; i < numPoints; i++) { 				data[i] = dis.read[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 57, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.importer = importer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 58, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.newRawFile = new io.github.msdk.io.mzml.data.MzMLRawDataFile(importer.getMzMLFile(), vars.msFun[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 85, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `returnArr(stack.pop()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 55, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.vars = new io.github.msdk.io.mzml.data.MzMLParser.Vars() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 56, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.tracker = new io.github.msdk.io.mzml.util.TagTracker() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (top == null) 	return new javolution.text.CharArray(""); ` -topatch--> `if (true)  { 	return new javolution.text.CharArray("");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (top == null) 	return new javolution.text.CharArray(""); ` -topatch--> `if (false)  { 	return new javolution.text.CharArray("");}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (top == null) 	return new javolution.text.CharArray(""); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	fina[...] ` -topatch--> `if (true) { 	final javolution.text.CharArray defaultDataProcessingRefScan =  	getRequiredAttribute(x[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	fina[...] ` -topatch--> `if (false) { 	final javolution.text.CharArray defaultDataProcessingRefScan =  	getRequiredAttribute([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 84, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	fina[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 81, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `newRawFile.setDefaultInstrumentConfiguration(defaultInstrumentConfigurationRef.toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_RUN)) { 	final javoluti[...] ` -topatch--> `if (true) { 	final javolution.text.CharArray defaultInstrumentConfigurationRef =  	getRequiredAttrib[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_RUN)) { 	final javoluti[...] ` -topatch--> `if (false) { 	final javolution.text.CharArray defaultInstrumentConfigurationRef =  	getRequiredAttri[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_RUN)) { 	final javoluti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tracker.enter(openingTagName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 70, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultDataProcessingScan = "unknown" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 71, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultDataProcessingChromatogram = "unknown" ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (aStack.contentEquals(tag)) { 	return true; } ` -topatch--> `if (true) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (aStack.contentEquals(tag)) { 	return true; } ` -topatch--> `if (false) { 	return true; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 98, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (aStack.contentEquals(tag)) { 	return true; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 99, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return true ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 126, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `c.setArray(new char[capacity], 0, 0) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c.array().length < capacity) { 	c.setArray(new char[capacity], 0, 0); } ` -topatch--> `if (true) { 	c.setArray(new char[capacity], 0, 0); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (c.array().length < capacity) { 	c.setArray(new char[capacity], 0, 0); } ` -topatch--> `if (false) { 	c.setArray(new char[capacity], 0, 0); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (c.array().length < capacity) { 	c.setArray(new char[capacity], 0, 0); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 174, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `dis.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pool.isEmpty()) 	return createArr(capacity); ` -topatch--> `if (true)  { 	return createArr(capacity);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (pool.isEmpty()) 	return createArr(capacity); ` -topatch--> `if (false)  { 	return createArr(capacity);}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 122, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (pool.isEmpty()) 	return createArr(capacity); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 123, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return createArr(capacity) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 143, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `c2.setArray(a2, 0, c1.length()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 140, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < c1.length(); i++) { 	a2[i] = a1[c1.offset() + i]; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `a2[i] = a1[c1.offset() + i] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 131, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultDataProcessingScan = defaultDataProcessingScan ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((data == null) || (data.length < numPoints)) 	data = new float[numPoints]; ` -topatch--> `if (true)  { 	data = new float[numPoints];}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((data == null) || (data.length < numPoints)) 	data = new float[numPoints]; ` -topatch--> `if (false)  { 	data = new float[numPoints];}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 76, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((data == null) || (data.length < numPoints)) 	data = new float[numPoints]; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 77, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `data = new float[numPoints] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryDataInfo.getCompressionType() != null) { 	switch (binaryDataInfo.getCompressionType()) { 	[...] ` -topatch--> `if (true) { 	switch (binaryDataInfo.getCompressionType()) { 		case ZLIB : 		case NUMPRESS_LINPRED_ZL[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryDataInfo.getCompressionType() != null) { 	switch (binaryDataInfo.getCompressionType()) { 	[...] ` -topatch--> `if (false) { 	switch (binaryDataInfo.getCompressionType()) { 		case ZLIB : 		case NUMPRESS_LINPRED_Z[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (binaryDataInfo.getCompressionType() != null) { 	switch (binaryDataInfo.getCompressionType()) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLRawDataFile line: 123, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.defaultInstrumentConfiguration = defaultInstrumentConfiguration ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 82, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (binaryDataInfo.getCompressionType()) { 	case ZLIB : 	case NUMPRESS_LINPRED_ZLIB : 	case NUMP[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 48, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `pool = new java.util.ArrayDeque<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 46, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.maxDepth = maxDepth ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 47, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `stack = new java.util.ArrayDeque<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 97, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (binaryDataInfo.getCompressionType()) { 	case NUMPRESS_LINPRED : 	case NUMPRESS_LINPRED_ZLIB [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `copyContent(tag, arr) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 55, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(io.github.msdk.io.mzml.util.TagTracker.DEFAULT_MAX_DEPTH) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!top.equals(tag)) { 	throw new io.github.msdk.MSDKRuntimeException( 	((("Cannot exit tag '" + ta[...] ` -topatch--> `if (true) { 	throw new io.github.msdk.MSDKRuntimeException( 	((("Cannot exit tag '" + tag) + "'. Las[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!top.equals(tag)) { 	throw new io.github.msdk.MSDKRuntimeException( 	((("Cannot exit tag '" + ta[...] ` -topatch--> `if (false) { 	throw new io.github.msdk.MSDKRuntimeException( 	((("Cannot exit tag '" + tag) + "'. La[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!top.equals(tag)) { 	throw new io.github.msdk.MSDKRuntimeException( 	((("Cannot exit tag '" + ta[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (top == null) { 	throw new io.github.msdk.MSDKRuntimeException("Stack exit called when the stack [...] ` -topatch--> `if (true) { 	throw new io.github.msdk.MSDKRuntimeException("Stack exit called when the stack was emp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (top == null) { 	throw new io.github.msdk.MSDKRuntimeException("Stack exit called when the stack [...] ` -topatch--> `if (false) { 	throw new io.github.msdk.MSDKRuntimeException("Stack exit called when the stack was em[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 78, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (top == null) { 	throw new io.github.msdk.MSDKRuntimeException("Stack exit called when the stack [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 130, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (binaryDataInfo.getBitLength()) { 	case THIRTY_TWO_BIT_FLOAT : 	case THIRTY_TWO_BIT_INTEGER :[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 66, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `stack.push(arr) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stack.size() > maxDepth) 	throw new java.lang.IllegalStateException(("Max stack depth [" + maxDe[...] ` -topatch--> `if (true)  { 	throw new java.lang.IllegalStateException(("Max stack depth [" + this.maxDepth) + "] e[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (stack.size() > maxDepth) 	throw new java.lang.IllegalStateException(("Max stack depth [" + maxDe[...] ` -topatch--> `if (false)  { 	throw new java.lang.IllegalStateException(("Max stack depth [" + this.maxDepth) + "] [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 67, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (stack.size() > maxDepth) 	throw new java.lang.IllegalStateException(("Max stack depth [" + maxDe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.TagTracker line: 147, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `pool.push(arr) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_LIST)) {  	if (openingTa[...] ` -topatch--> `if (true) {  	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GR[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_LIST)) {  	if (openingTa[...] ` -topatch--> `if (false) {  	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_G[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP_LIST)) {  	if (openingTa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 287, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (xmlStreamReader != null) 	xmlStreamReader.close(); ` -topatch--> `if (true)  { 	xmlStreamReader.close();}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 287, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (xmlStreamReader != null) 	xmlStreamReader.close(); ` -topatch--> `if (false)  { 	xmlStreamReader.close();}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 287, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (xmlStreamReader != null) 	xmlStreamReader.close(); ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	[...] ` -topatch--> `if (true) { 	final javolution.text.CharArray defaultDataProcessingRefChromatogram =  	getRequiredAtt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	[...] ` -topatch--> `if (false) { 	final javolution.text.CharArray defaultDataProcessingRefChromatogram =  	getRequiredAt[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 90, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.current().contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 288, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamReader.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 268, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (eventType) { 	case javolution.xml.stream.XMLStreamConstants.START_ELEMENT : 		final javoluti[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((int) (progress * 100)) >= (lastLoggedProgress + 10)) { 	lastLoggedProgress = ((int) (progress [...] ` -topatch--> `if (true) { 	this.lastLoggedProgress = ((int) (this.progress * 10)) * 10; 	this.logger.debug(("Parsi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((int) (progress * 100)) >= (lastLoggedProgress + 10)) { 	lastLoggedProgress = ((int) (progress [...] ` -topatch--> `if (false) { 	this.lastLoggedProgress = ((int) (this.progress * 10)) * 10; 	this.logger.debug(("Pars[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 263, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((int) (progress * 100)) >= (lastLoggedProgress + 10)) { 	lastLoggedProgress = ((int) (progress [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	if (openingTagName.co[...] ` -topatch--> `if (true) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	if (openingTagName.co[...] ` -topatch--> `if (false) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) {[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	if (openingTagName.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	if (openingTagNam[...] ` -topatch--> `if (true) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	if (openingTagNam[...] ` -topatch--> `if (false) { 	if (openingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	if (openingTagNam[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 449, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	if (closingTagNam[...] ` -topatch--> `if (true) { 	if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 449, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	if (closingTagNam[...] ` -topatch--> `if (false) { 	if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 449, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_CHROMATOGRAM_LIST)) { 	if (closingTagNam[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	if (closingTagName.co[...] ` -topatch--> `if (true) { 	if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	if (closingTagName.co[...] ` -topatch--> `if (false) { 	if (closingTagName.contentEquals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM)) {[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 440, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST)) { 	if (closingTagName.co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 420, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SELECTED_ION)) { 	vars.selectedIonList.addSele[...] ` -topatch--> `if (true) { 	this.vars.selectedIonList.addSelectedIon(this.vars.selectedIon);  } else { 	if (s.equal[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 420, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SELECTED_ION)) { 	vars.selectedIonList.addSele[...] ` -topatch--> `if (false) { 	this.vars.selectedIonList.addSelectedIon(this.vars.selectedIon);  } else { 	if (s.equa[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 420, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SELECTED_ION)) { 	vars.selectedIonList.addSele[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 417, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ACTIVATION)) { 	vars.precursor.setActivation(v[...] ` -topatch--> `if (true) { 	this.vars.precursor.setActivation(this.vars.activation);  } else { 	if (s.equals(io.git[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 417, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ACTIVATION)) { 	vars.precursor.setActivation(v[...] ` -topatch--> `if (false) { 	this.vars.precursor.setActivation(this.vars.activation);  } else { 	if (s.equals(io.gi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 417, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ACTIVATION)) { 	vars.precursor.setActivation(v[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 414, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SELECTED_ION_LIST)) { 	vars.precursor.setSelec[...] ` -topatch--> `if (true) { 	this.vars.precursor.setSelectedIonList(this.vars.selectedIonList);  } else { 	if (s.equ[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 414, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SELECTED_ION_LIST)) { 	vars.precursor.setSelec[...] ` -topatch--> `if (false) { 	this.vars.precursor.setSelectedIonList(this.vars.selectedIonList);  } else { 	if (s.eq[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 414, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SELECTED_ION_LIST)) { 	vars.precursor.setSelec[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	if (tracker.inside(io.github.msdk[...] ` -topatch--> `if (true) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	if (tracker.inside(io.github.msdk[...] ` -topatch--> `if (false) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 408, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRODUCT)) { 	if (tracker.inside(io.github.msdk[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 436, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) { 	if (tracker.inside(io.github.msdk.io[...] ` -topatch--> `if (true) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 436, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) { 	if (tracker.inside(io.github.msdk.io[...] ` -topatch--> `if (false) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 436, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN)) { 	if (tracker.inside(io.github.msdk.io[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 432, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST)) { 	if (tracker.inside(io.gi[...] ` -topatch--> `if (true) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 432, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST)) { 	if (tracker.inside(io.gi[...] ` -topatch--> `if (false) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 432, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW_LIST)) { 	if (tracker.inside(io.gi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 429, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) { 	vars.scanWindowList.addScanWi[...] ` -topatch--> `if (true) { 	this.vars.scanWindowList.addScanWindow(this.vars.scanWindow);  } else { 	if (s.equals(i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 429, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) { 	vars.scanWindowList.addScanWi[...] ` -topatch--> `if (false) { 	this.vars.scanWindowList.addScanWindow(this.vars.scanWindow);  } else { 	if (s.equals([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 429, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_SCAN_WINDOW)) { 	vars.scanWindowList.addScanWi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	if (tracker.inside(io.github.ms[...] ` -topatch--> `if (true) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	if (tracker.inside(io.github.ms[...] ` -topatch--> `if (false) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM))  	{ 		this[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 423, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 	if (tracker.inside(io.github.ms[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 401, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WINDOW)) { 	if (tracker.inside(io.gi[...] ` -topatch--> `if (true) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 		this.v[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 401, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WINDOW)) { 	if (tracker.inside(io.gi[...] ` -topatch--> `if (false) { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_PRECURSOR)) { 		this.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 401, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_ISOLATION_WINDOW)) { 	if (tracker.inside(io.gi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP)) { 	vars.referenceableParamGr[...] ` -topatch--> `if (true) { 	this.vars.referenceableParamGroupList.add(this.vars.referenceableParamGroup);  } else {[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP)) { 	vars.referenceableParamGr[...] ` -topatch--> `if (false) { 	this.vars.referenceableParamGroupList.add(this.vars.referenceableParamGroup);  } else [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 398, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (s.equals(io.github.msdk.io.mzml.data.MzMLTags.TAG_REF_PARAM_GROUP)) { 	vars.referenceableParamGr[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 395, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `tracker.exit(closingTagName) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (canceled) 	return null; ` -topatch--> `if (true)  { 	return null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (canceled) 	return null; ` -topatch--> `if (false)  { 	return null;}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 250, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (canceled) 	return null; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 253, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `eventType = xmlStreamReader.next() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 248, pointed element: CtDoImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtDoImpl) `do {  	if (canceled) 		return null;  	eventType = xmlStreamReader.next();     	if (mzMLFile != null)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mzMLFile != null) 	progress = ((float) (xmlStreamReader.getLocation().getCharacterOffset())) /  [...] ` -topatch--> `if (true)  { 	this.progress = ((float) (xmlStreamReader.getLocation().getCharacterOffset())) /  	((i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mzMLFile != null) 	progress = ((float) (xmlStreamReader.getLocation().getCharacterOffset())) /  [...] ` -topatch--> `if (false)  { 	this.progress = ((float) (xmlStreamReader.getLocation().getCharacterOffset())) /  	(([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mzMLFile != null) 	progress = ((float) (xmlStreamReader.getLocation().getCharacterOffset())) /  [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 570, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (attrValue == null) 	throw new java.lang.IllegalStateException(((((("Tag " + xmlStreamReader.getL[...] ` -topatch--> `if (true)  { 	throw new java.lang.IllegalStateException(((((("Tag " + xmlStreamReader.getLocalName()[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 570, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (attrValue == null) 	throw new java.lang.IllegalStateException(((((("Tag " + xmlStreamReader.getL[...] ` -topatch--> `if (false)  { 	throw new java.lang.IllegalStateException(((((("Tag " + xmlStreamReader.getLocalName([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 570, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (attrValue == null) 	throw new java.lang.IllegalStateException(((((("Tag " + xmlStreamReader.getL[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 242, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.newRawFile = parser.getMzMLRawFile() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 244, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastLoggedProgress = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 239, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `xmlStreamReader.setInput(is, "UTF-8") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mzMLFile != null) { 	logger.info("Began parsing file: " + mzMLFile.getAbsolutePath()); 	is = io.[...] ` -topatch--> `if (true) { 	this.logger.info("Began parsing file: " + this.mzMLFile.getAbsolutePath()); 	is = io.gi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mzMLFile != null) { 	logger.info("Began parsing file: " + mzMLFile.getAbsolutePath()); 	is = io.[...] ` -topatch--> `if (false) { 	this.logger.info("Began parsing file: " + this.mzMLFile.getAbsolutePath()); 	is = io.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 227, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mzMLFile != null) { 	logger.info("Began parsing file: " + mzMLFile.getAbsolutePath()); 	is = io.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 202, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.canceled = false ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 203, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.progress = 0.0F ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 204, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.lastLoggedProgress = 0 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 205, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.logger = org.slf4j.LoggerFactory.getLogger(this.getClass()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 200, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mzMLFile = mzMLFile ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 201, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.inputStream = inputStream ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 206, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.msScanPredicate = this.msScanPredicate.and(msScanPredicate) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.MzMLFileImportMethod line: 207, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.chromatogramPredicate = this.chromatogramPredicate.and(chromatogramPredicate) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (accession == null) { 	throw new java.lang.IllegalStateException("Any cvParam must have an access[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalStateException("Any cvParam must have an accession."); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (accession == null) { 	throw new java.lang.IllegalStateException("Any cvParam must have an access[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalStateException("Any cvParam must have an accession."); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 520, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (accession == null) { 	throw new java.lang.IllegalStateException("Any cvParam must have an access[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!newRawFile.getOriginalFile().isPresent()) &&  tracker.current().contentEquals(io.github.msdk.[...] ` -topatch--> `if (true)  { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST) &&  	t[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (((!newRawFile.getOriginalFile().isPresent()) &&  tracker.current().contentEquals(io.github.msdk.[...] ` -topatch--> `if (false)  { 	if (this.tracker.inside(io.github.msdk.io.mzml.data.MzMLTags.TAG_SPECTRUM_LIST) &&  	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLParser line: 473, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (((!newRawFile.getOriginalFile().isPresent()) &&  tracker.current().contentEquals(io.github.msdk.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!byteBuffer(curr).hasRemaining()) { 	if (curr < (n - 1)) 		byteBuffer(++curr).position(0);else  [...] ` -topatch--> `if (true) { 	if (this.curr < (this.n - 1))  	{ 		byteBuffer(++this.curr).position(0);} else   	{ 		r[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!byteBuffer(curr).hasRemaining()) { 	if (curr < (n - 1)) 		byteBuffer(++curr).position(0);else  [...] ` -topatch--> `if (false) { 	if (this.curr < (this.n - 1))  	{ 		byteBuffer(++this.curr).position(0);} else   	{ 		[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 188, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!byteBuffer(curr).hasRemaining()) { 	if (curr < (n - 1)) 		byteBuffer(++curr).position(0);else  [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputStream instanceof io.github.msdk.io.mzml.util.ByteBufferInputStream) { 	io.github.msdk.io.m[...] ` -topatch--> `if (true) { 	io.github.msdk.io.mzml.util.ByteBufferInputStream mappedByteBufferInputStream = ((io.gi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (inputStream instanceof io.github.msdk.io.mzml.util.ByteBufferInputStream) { 	io.github.msdk.io.m[...] ` -topatch--> `if (false) { 	io.github.msdk.io.mzml.util.ByteBufferInputStream mappedByteBufferInputStream = ((io.g[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 57, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (inputStream instanceof io.github.msdk.io.mzml.util.ByteBufferInputStream) { 	io.github.msdk.io.m[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lengthIn == 0) { 	return new float[0]; } ` -topatch--> `if (true) { 	return new float[0]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lengthIn == 0) { 	return new float[0]; } ` -topatch--> `if (false) { 	return new float[0]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLPeaksDecoder line: 68, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lengthIn == 0) { 	return new float[0]; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 255, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `byteBuffer(curr).position(((int) (newPosition - (((long) (curr)) << io.github.msdk.io.mzml.util.Byte[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 254, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `curr = ((int) (newPosition >>> io.github.msdk.io.mzml.util.ByteBufferInputStream.CHUNK_SHIFT)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 247, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `newPosition = java.lang.Math.min(newPosition, length()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 248, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newPosition == length()) { 	final java.nio.ByteBuffer buffer = byteBuffer(curr = n - 1); 	buffer[...] ` -topatch--> `if (true) { 	final java.nio.ByteBuffer buffer = byteBuffer(this.curr = this.n - 1); 	buffer.position[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 248, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (newPosition == length()) { 	final java.nio.ByteBuffer buffer = byteBuffer(curr = n - 1); 	buffer[...] ` -topatch--> `if (false) { 	final java.nio.ByteBuffer buffer = byteBuffer(this.curr = this.n - 1); 	buffer.positio[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 248, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (newPosition == length()) { 	final java.nio.ByteBuffer buffer = byteBuffer(curr = n - 1); 	buffer[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 275, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.remainingBytes = remainingBytes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 274, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.position(position) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 40, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.encodedLength = encodedLength ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 42, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.compressionType = io.github.msdk.io.mzml.data.MzMLCompressionType.NO_COMPRESSION ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 41, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.arrayLength = arrayLength ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.data.MzMLBinaryDataInfo line: 249, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.position = position ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 103, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.size = size ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 102, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.curr = curr ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 104, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.readyToUse = readyToUse ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 106, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `mark = -1 ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((i < (n - 1)) && (byteBuffer[i].capacity() != io.github.msdk.io.mzml.util.ByteBufferInputStream.[...] ` -topatch--> `if (true)  { 	throw new java.lang.IllegalArgumentException();}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((i < (n - 1)) && (byteBuffer[i].capacity() != io.github.msdk.io.mzml.util.ByteBufferInputStream.[...] ` -topatch--> `if (false)  { 	throw new java.lang.IllegalArgumentException();}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((i < (n - 1)) && (byteBuffer[i].capacity() != io.github.msdk.io.mzml.util.ByteBufferInputStream.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 108, pointed element: CtForImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForImpl) `for (int i = 0; i < n; i++) 	if ((i < (n - 1)) && (byteBuffer[i].capacity() != io.github.msdk.io.mzm[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 101, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.n = byteBuffer.length ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 100, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.byteBuffer = byteBuffer ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readyToUse[n]) 	return byteBuffer[n]; ` -topatch--> `if (true)  { 	return this.byteBuffer[n];}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (readyToUse[n]) 	return byteBuffer[n]; ` -topatch--> `if (false)  { 	return this.byteBuffer[n];}` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 137, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (readyToUse[n]) 	return byteBuffer[n]; ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 138, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return byteBuffer[n] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=io.github.msdk.io.mzml.util.ByteBufferInputStream line: 111, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `lastBufferCapacity = byteBuffer[n - 1].capacity() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 2400.461
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:255) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:265) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 2543.973
