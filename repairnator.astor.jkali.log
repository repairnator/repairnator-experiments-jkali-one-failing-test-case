[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 20
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/mitre/openid-connect-common/1.3.3-SNAPSHOT/openid-connect-common-1.3.3-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-core/4.3.7.RELEASE/spring-core-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-webmvc/4.3.7.RELEASE/spring-webmvc-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-aop/4.3.7.RELEASE/spring-aop-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-context/4.3.7.RELEASE/spring-context-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-expression/4.3.7.RELEASE/spring-expression-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-web/4.3.7.RELEASE/spring-web-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-core/4.2.4.RELEASE/spring-security-core-4.2.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/google/guava/guava/21.0/guava-21.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.6/httpcore-4.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/commons-codec/commons-codec/1.9/commons-codec-1.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/oauth/spring-security-oauth2/2.1.0.RELEASE/spring-security-oauth2-2.1.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-config/4.2.4.RELEASE/spring-security-config-4.2.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-web/4.2.4.RELEASE/spring-security-web-4.2.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/nimbusds/nimbus-jose-jwt/5.4/nimbus-jose-jwt-5.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/javax.persistence/2.1.1/javax.persistence-2.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.0.pr2/jackson-databind-2.9.0.pr2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.9.0.pr2/jackson-core-2.9.0.pr2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0.pr2/jackson-annotations-2.9.0.pr2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-tx/4.3.7.RELEASE/spring-tx-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-beans/4.3.7.RELEASE/spring-beans-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/org.eclipse.persistence.core/2.5.1/org.eclipse.persistence.core-2.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/org.eclipse.persistence.asm/2.5.1/org.eclipse.persistence.asm-2.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/easymock/easymock/3.4/easymock-3.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/objenesis/objenesis/2.2/objenesis-2.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-test/4.3.7.RELEASE/spring-test-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 172390 milliseconds (172 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/mitre/openid-connect-common/1.3.3-SNAPSHOT/openid-connect-common-1.3.3-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-core/4.3.7.RELEASE/spring-core-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-webmvc/4.3.7.RELEASE/spring-webmvc-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-aop/4.3.7.RELEASE/spring-aop-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-context/4.3.7.RELEASE/spring-context-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-expression/4.3.7.RELEASE/spring-expression-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-web/4.3.7.RELEASE/spring-web-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-core/4.2.4.RELEASE/spring-security-core-4.2.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/google/guava/guava/21.0/guava-21.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.6/httpcore-4.4.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/commons-codec/commons-codec/1.9/commons-codec-1.9.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/oauth/spring-security-oauth2/2.1.0.RELEASE/spring-security-oauth2-2.1.0.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-config/4.2.4.RELEASE/spring-security-config-4.2.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-web/4.2.4.RELEASE/spring-security-web-4.2.4.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/nimbusds/nimbus-jose-jwt/5.4/nimbus-jose-jwt-5.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/javax.persistence/2.1.1/javax.persistence-2.1.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.0.pr2/jackson-databind-2.9.0.pr2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.9.0.pr2/jackson-core-2.9.0.pr2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0.pr2/jackson-annotations-2.9.0.pr2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-tx/4.3.7.RELEASE/spring-tx-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-beans/4.3.7.RELEASE/spring-beans-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/org.eclipse.persistence.core/2.5.1/org.eclipse.persistence.core-2.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/org.eclipse.persistence.asm/2.5.1/org.eclipse.persistence.asm-2.5.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/easymock/easymock/3.4/easymock-3.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/objenesis/objenesis/2.2/objenesis-2.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-test/4.3.7.RELEASE/spring-test-4.3.7.RELEASE.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 94
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 37
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 37,  37
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 37
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 37, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 1.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 172390
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/mitre/openid-connect-common/1.3.3-SNAPSHOT/openid-connect-common-1.3.3-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-core/4.3.7.RELEASE/spring-core-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-webmvc/4.3.7.RELEASE/spring-webmvc-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-aop/4.3.7.RELEASE/spring-aop-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-context/4.3.7.RELEASE/spring-context-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-expression/4.3.7.RELEASE/spring-expression-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-web/4.3.7.RELEASE/spring-web-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-core/4.2.4.RELEASE/spring-security-core-4.2.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/aopalliance/aopalliance/1.0/aopalliance-1.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/google/guava/guava/21.0/guava-21.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5.3/httpclient-4.5.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.6/httpcore-4.4.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/commons-codec/commons-codec/1.9/commons-codec-1.9.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/oauth/spring-security-oauth2/2.1.0.RELEASE/spring-security-oauth2-2.1.0.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-config/4.2.4.RELEASE/spring-security-config-4.2.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/security/spring-security-web/4.2.4.RELEASE/spring-security-web-4.2.4.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/codehaus/jackson/jackson-mapper-asl/1.9.13/jackson-mapper-asl-1.9.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/codehaus/jackson/jackson-core-asl/1.9.13/jackson-core-asl-1.9.13.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/nimbusds/nimbus-jose-jwt/5.4/nimbus-jose-jwt-5.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/net/minidev/json-smart/2.3/json-smart-2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/net/minidev/accessors-smart/1.2/accessors-smart-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/ow2/asm/asm/5.0.4/asm-5.0.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/javax.persistence/2.1.1/javax.persistence-2.1.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/slf4j-api/1.7.25/slf4j-api-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.9.0.pr2/jackson-databind-2.9.0.pr2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.9.0.pr2/jackson-core-2.9.0.pr2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.9.0.pr2/jackson-annotations-2.9.0.pr2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-tx/4.3.7.RELEASE/spring-tx-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-beans/4.3.7.RELEASE/spring-beans-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/org.eclipse.persistence.core/2.5.1/org.eclipse.persistence.core-2.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/eclipse/persistence/org.eclipse.persistence.asm/2.5.1/org.eclipse.persistence.asm-2.5.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/commons-io/commons-io/1.3.2/commons-io-1.3.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/easymock/easymock/3.4/easymock-3.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/objenesis/objenesis/2.2/objenesis-2.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/springframework/spring-test/4.3.7.RELEASE/spring-test-4.3.7.RELEASE.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/mockito/mockito-all/1.9.5/mockito-all-1.9.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/slf4j-jdk14/1.7.25/slf4j-jdk14-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.25/jcl-over-slf4j-1.7.25.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/javax/servlet/servlet-api/2.5/servlet-api-2.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/.m2/javax/servlet/jsp/jsp-api/2.1/jsp-api-2.1.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-mitreid-connect-OpenID-Connect-Java-Spring-Server-348210758-20180302-133300-firstCommit/openid-connect-server
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.openid.connect.service.impl.MITREidDataServiceSupport line: 35, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `dateFormatter = new org.springframework.format.datetime.DateFormatter() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 295, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String uri : client.getRedirectUris()) { 	org.springframework.web.util.UriComponents [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 291, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getRedirectUris() != null) && (!client.getRedirectUris().isEmpty())) { 	boolean localhos[...] ` -topatch--> `if (true) { 	boolean localhost = false; 	boolean remoteHttps = false; 	boolean customScheme = false;[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 291, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getRedirectUris() != null) && (!client.getRedirectUris().isEmpty())) { 	boolean localhos[...] ` -topatch--> `if (false) { 	boolean localhost = false; 	boolean remoteHttps = false; 	boolean customScheme = false[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 291, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getRedirectUris() != null) && (!client.getRedirectUris().isEmpty())) { 	boolean localhos[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.openid.connect.service.impl.UUIDPairwiseIdentiferService line: 61, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.google.common.base.Strings.isNullOrEmpty(client.getSectorIdentifierUri())) { 	org.springfra[...] ` -topatch--> `if (true) { 	org.springframework.web.util.UriComponents uri = org.springframework.web.util.UriCompon[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.openid.connect.service.impl.UUIDPairwiseIdentiferService line: 61, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.google.common.base.Strings.isNullOrEmpty(client.getSectorIdentifierUri())) { 	org.springfra[...] ` -topatch--> `if (false) { 	org.springframework.web.util.UriComponents uri = org.springframework.web.util.UriCompo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.openid.connect.service.impl.UUIDPairwiseIdentiferService line: 61, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.google.common.base.Strings.isNullOrEmpty(client.getSectorIdentifierUri())) { 	org.springfra[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getJwks() == null) && com.google.common.base.Strings.isNullOrEmpty(client.getJwksUri()))[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("[HEART mode] All clients must have a key [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getJwks() == null) && com.google.common.base.Strings.isNullOrEmpty(client.getJwksUri()))[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("[HEART mode] All clients must have a key[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 286, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getJwks() == null) && com.google.common.base.Strings.isNullOrEmpty(client.getJwksUri()))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.google.common.base.Strings.isNullOrEmpty(client.getClientSecret())) { 	throw new java.lang.[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Client secrets are not allow[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.google.common.base.Strings.isNullOrEmpty(client.getClientSecret())) { 	throw new java.lang.[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Client secrets are not allo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 281, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!com.google.common.base.Strings.isNullOrEmpty(client.getClientSecret())) { 	throw new java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("password")) { 	throw new java.lang.IllegalArgumentException("[H[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Password grant type is forbi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("password")) { 	throw new java.lang.IllegalArgumentException("[H[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Password grant type is forb[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 276, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("password")) { 	throw new java.lang.IllegalArgumentException("[H[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 208, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `client.getScope().add(org.mitre.oauth2.service.SystemScopeService.OFFLINE_ACCESS) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 209, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `client.getAuthorizedGrantTypes().add("refresh_token") ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 236, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getRedirectUris().isEmpty()) { 	throw new java.lang.IllegalArgumentException("[HEART mode[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Authorization code clients m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 236, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getRedirectUris().isEmpty()) { 	throw new java.lang.IllegalArgumentException("[HEART mode[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Authorization code clients [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 236, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getRedirectUris().isEmpty()) { 	throw new java.lang.IllegalArgumentException("[HEART mode[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("client_credentials")) {  	if ((client.getGrantTypes().contains([...] ` -topatch--> `if (true) {  	if ((client.getGrantTypes().contains("authorization_code") || client.getGrantTypes().c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("client_credentials")) {  	if ((client.getGrantTypes().contains([...] ` -topatch--> `if (false) {  	if ((client.getGrantTypes().contains("authorization_code") || client.getGrantTypes().[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 258, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("client_credentials")) {  	if ((client.getGrantTypes().contains([...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getTokenEndpointAuthMethod() == null) || (!client.getTokenEndpointAuthMethod().equals(or[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Authorization code clients m[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getTokenEndpointAuthMethod() == null) || (!client.getTokenEndpointAuthMethod().equals(or[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Authorization code clients [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 231, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getTokenEndpointAuthMethod() == null) || (!client.getTokenEndpointAuthMethod().equals(or[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultDeviceCodeService line: 138, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `repository.remove(item) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultDeviceCodeService line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `new org.mitre.data.AbstractPageOperationTemplate<org.mitre.oauth2.model.DeviceCode>("clearExpiredDev[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 241, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("implicit")) {  	if ((client.getGrantTypes().contains("authoriza[...] ` -topatch--> `if (true) {  	if ((client.getGrantTypes().contains("authorization_code") || client.getGrantTypes().c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 241, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("implicit")) {  	if ((client.getGrantTypes().contains("authoriza[...] ` -topatch--> `if (false) {  	if ((client.getGrantTypes().contains("authorization_code") || client.getGrantTypes().[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 241, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("implicit")) {  	if ((client.getGrantTypes().contains("authoriza[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("implicit") || client.getGrantTypes().contains("client_credentia[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Incompatible grant types"); [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("implicit") || client.getGrantTypes().contains("client_credentia[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("[HEART mode] Incompatible grant types");[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 226, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("implicit") || client.getGrantTypes().contains("client_credentia[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 116, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String uri : client.getRegisteredRedirectUri()) { 	if (blacklistedSiteService.isBlack[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (blacklistedSiteService.isBlacklisted(uri)) { 	throw new java.lang.IllegalArgumentException("Clie[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Client URI is blacklisted: " + uri); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (blacklistedSiteService.isBlacklisted(uri)) { 	throw new java.lang.IllegalArgumentException("Clie[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Client URI is blacklisted: " + uri); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (blacklistedSiteService.isBlacklisted(uri)) { 	throw new java.lang.IllegalArgumentException("Clie[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("authorization_code")) {  	if (client.getGrantTypes().contains("[...] ` -topatch--> `if (true) {  	if (client.getGrantTypes().contains("implicit") || client.getGrantTypes().contains("cl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("authorization_code")) {  	if (client.getGrantTypes().contains("[...] ` -topatch--> `if (false) {  	if (client.getGrantTypes().contains("implicit") || client.getGrantTypes().contains("c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 224, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getGrantTypes().contains("authorization_code")) {  	if (client.getGrantTypes().contains("[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 444, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `client.setClientId(java.util.UUID.randomUUID().toString()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 126, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `client = generateClientId(client) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.google.common.base.Strings.isNullOrEmpty(client.getClientId())) { 	client = generateClientId[...] ` -topatch--> `if (true) { 	client = generateClientId(client); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.google.common.base.Strings.isNullOrEmpty(client.getClientId())) { 	client = generateClientId[...] ` -topatch--> `if (false) { 	client = generateClientId(client); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (com.google.common.base.Strings.isNullOrEmpty(client.getClientId())) { 	client = generateClientId[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 133, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ensureKeyConsistency(client) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 130, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `ensureRefreshTokenConsistency(client) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getRegisteredRedirectUri() != null) { 	for (java.lang.String uri : client.getRegisteredRe[...] ` -topatch--> `if (true) { 	for (java.lang.String uri : client.getRegisteredRedirectUri()) { 		if (this.blacklisted[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getRegisteredRedirectUri() != null) { 	for (java.lang.String uri : client.getRegisteredRe[...] ` -topatch--> `if (false) { 	for (java.lang.String uri : client.getRegisteredRedirectUri()) { 		if (this.blackliste[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 115, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getRegisteredRedirectUri() != null) { 	for (java.lang.String uri : client.getRegisteredRe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getId() != null) { 	throw new java.lang.IllegalArgumentException("Tried to save a new cli[...] ` -topatch--> `if (true) { 	throw new java.lang.IllegalArgumentException("Tried to save a new client with an existi[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getId() != null) { 	throw new java.lang.IllegalArgumentException("Tried to save a new cli[...] ` -topatch--> `if (false) { 	throw new java.lang.IllegalArgumentException("Tried to save a new client with an exist[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 111, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getId() != null) { 	throw new java.lang.IllegalArgumentException("Tried to save a new cli[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config.isHeartMode()) { 	if (client.getGrantTypes().contains("authorization_code")) {  		if (cli[...] ` -topatch--> `if (true) { 	if (client.getGrantTypes().contains("authorization_code")) {  		if (client.getGrantType[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (config.isHeartMode()) { 	if (client.getGrantTypes().contains("authorization_code")) {  		if (cli[...] ` -topatch--> `if (false) { 	if (client.getGrantTypes().contains("authorization_code")) {  		if (client.getGrantTyp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 223, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (config.isHeartMode()) { 	if (client.getGrantTypes().contains("authorization_code")) {  		if (cli[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getAuthorizedGrantTypes().contains("refresh_token") ||  client.getScope().contains(org.mi[...] ` -topatch--> `if (true)  { 	client.getScope().add(org.mitre.oauth2.service.SystemScopeService.OFFLINE_ACCESS); 	cl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getAuthorizedGrantTypes().contains("refresh_token") ||  client.getScope().contains(org.mi[...] ` -topatch--> `if (false)  { 	client.getScope().add(org.mitre.oauth2.service.SystemScopeService.OFFLINE_ACCESS); 	c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 206, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (client.getAuthorizedGrantTypes().contains("refresh_token") ||  client.getScope().contains(org.mi[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 160, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getJwksUri() != null) && (client.getJwks() != null)) {  	throw new java.lang.IllegalArgu[...] ` -topatch--> `if (true) {  	throw new java.lang.IllegalArgumentException("A client cannot have both JWKS URI and J[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 160, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getJwksUri() != null) && (client.getJwks() != null)) {  	throw new java.lang.IllegalArgu[...] ` -topatch--> `if (false) {  	throw new java.lang.IllegalArgumentException("A client cannot have both JWKS URI and [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 160, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((client.getJwksUri() != null) && (client.getJwks() != null)) {  	throw new java.lang.IllegalArgu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 474, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.httpFactory = new org.springframework.http.client.HttpComponentsClientHttpRequestFactory(httpCl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.mitre.oauth2.service.impl.DefaultOAuth2ClientDetailsEntityService line: 475, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.restTemplate = new org.springframework.web.client.RestTemplate(httpFactory) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 308.92
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:255) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:265) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 337.346
