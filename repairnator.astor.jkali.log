[INFO ] fr.inria.main.evolution.AstorMain.setupLogging(AstorMain.java:272) - Log file at: /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:982) - Source folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker/src/main/java]
[INFO ] fr.inria.main.AbstractMain.determineSourceFolders(AbstractMain.java:1001) - Source Test folders: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker/src/test/java]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:911) - Test retrieved from classes: 34
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-api/1.12.1-SNAPSHOT/arquillian-cube-api-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-spi/1.12.1-SNAPSHOT/arquillian-cube-spi-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-requirement-spi/1.12.1-SNAPSHOT/arquillian-cube-requirement-spi-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-core/1.12.1-SNAPSHOT/arquillian-cube-core-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-io/commons-io/2.3/commons-io-2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/tukaani/xz/1.2/xz-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-spi/1.2.0.Final/arquillian-core-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-api/1.2.0.Final/arquillian-core-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-spi/1.2.0.Final/arquillian-test-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-api/1.2.0.Final/arquillian-test-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/spacelift/arquillian-spacelift/1.0.2/arquillian-spacelift-1.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/spacelift/arquillian-spacelift-api/1.0.2/arquillian-spacelift-api-1.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-core-reporter-api/0.0.3/arquillian-core-reporter-api-0.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-reporter-api/0.0.3/arquillian-reporter-api-0.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-reporter-impl/0.0.3/arquillian-reporter-impl-0.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-spi/1.2.0.Final/arquillian-container-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-api/1.2.6/shrinkwrap-api-1.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-impl-base/1.2.0.Final/arquillian-core-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.2.0.Final/arquillian-container-test-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-api/1.2.0.Final/arquillian-container-test-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-spi/1.2.0.Final/arquillian-container-test-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/eclipse/jgit/org.eclipse.jgit/4.9.2.201712150930-r/org.eclipse.jgit-4.9.2.201712150930-r.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/googlecode/javaewah/JavaEWAH/1.1.6/JavaEWAH-1.1.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/junit/arquillian-junit-container/1.2.0.Final/arquillian-junit-container-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/junit/arquillian-junit-core/1.2.0.Final/arquillian-junit-core-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-impl-base/1.2.0.Final/arquillian-test-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-impl-base/1.2.0.Final/arquillian-container-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-impl-base/1.2.6/shrinkwrap-impl-base-1.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-spi/1.2.6/shrinkwrap-spi-1.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-impl-base/1.2.0.Final/arquillian-container-impl-base-1.2.0.Final-tests.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/config/arquillian-config-api/1.2.0.Final/arquillian-config-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/config/arquillian-config-impl-base/1.2.0.Final/arquillian-config-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-spi/2.0.0/shrinkwrap-descriptors-spi-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-impl-base/1.2.0.Final/arquillian-core-impl-base-1.2.0.Final-tests.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/objenesis/objenesis/2.1/objenesis-2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.17.0/system-rules-1.17.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-docker/1.0.0-alpha-2/shrinkwrap-descriptors-api-docker-1.0.0-alpha-2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-base/2.0.0/shrinkwrap-descriptors-api-base-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-impl-docker/1.0.0-alpha-2/shrinkwrap-descriptors-impl-docker-1.0.0-alpha-2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-impl-base/2.0.0/shrinkwrap-descriptors-impl-base-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/github/docker-java/docker-java/3.0.14/docker-java-3.0.14.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/jaxrs/jackson-jaxrs-json-provider/2.6.3/jackson-jaxrs-json-provider-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/jaxrs/jackson-jaxrs-base/2.6.3/jackson-jaxrs-base-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.6.3/jackson-core-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.6.3/jackson-databind-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.6.0/jackson-annotations-2.6.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.6.3/jackson-module-jaxb-annotations-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/connectors/jersey-apache-connector/2.23.1/jersey-apache-connector-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/core/jersey-common/2.23.1/jersey-common-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.23.1/jersey-guava-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5/httpclient-4.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/core/jersey-client/2.23.1/jersey-client-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-api/2.4.0-b34/hk2-api-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-utils/2.4.0-b34/hk2-utils-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/external/aopalliance-repackaged/2.4.0-b34/aopalliance-repackaged-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/external/javax.inject/2.4.0-b34/javax.inject-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-locator/2.4.0-b34/hk2-locator-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/kohlschutter/junixsocket/junixsocket-common/2.0.4/junixsocket-common-2.0.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/kohlschutter/junixsocket/junixsocket-native-common/2.0.4/junixsocket-native-common-2.0.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/scijava/native-lib-loader/2.0.2/native-lib-loader-2.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.21/jcl-over-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/google/guava/guava/18.0/guava-18.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/bouncycastle/bcpkix-jdk15on/1.54/bcpkix-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.54/bcprov-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec-http/4.1.11.Final/netty-codec-http-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec/4.1.11.Final/netty-codec-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-handler/4.1.11.Final/netty-handler-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-buffer/4.1.11.Final/netty-buffer-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport/4.1.11.Final/netty-transport-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-resolver/4.1.11.Final/netty-resolver-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-handler-proxy/4.1.11.Final/netty-handler-proxy-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec-socks/4.1.11.Final/netty-codec-socks-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.1.11.Final/netty-transport-native-epoll-4.1.11.Final-linux-x86_64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-common/4.1.11.Final/netty-common-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-unix-common/4.1.11.Final/netty-transport-native-unix-common-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-kqueue/4.1.11.Final/netty-transport-native-kqueue-4.1.11.Final-osx-x86_64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.calculateSuspicious(AstorCoreEngine.java:925) - Setting up the max to 172690 milliseconds (172 sec)
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:720) - 
---- Creating spoon model
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildSpoonModel(MutationSupporter.java:236) - Creating model,  Code location from working folder: /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker/src/main/java
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:67) - building model: /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker/src/main/java, compliance level: 8
[INFO ] fr.inria.astor.core.manipulation.MutationSupporter.buildModel(MutationSupporter.java:81) - Classpath (Dependencies) for building SpoonModel: [/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-api/1.12.1-SNAPSHOT/arquillian-cube-api-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-spi/1.12.1-SNAPSHOT/arquillian-cube-spi-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-requirement-spi/1.12.1-SNAPSHOT/arquillian-cube-requirement-spi-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-core/1.12.1-SNAPSHOT/arquillian-cube-core-1.12.1-SNAPSHOT.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-io/commons-io/2.3/commons-io-2.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/tukaani/xz/1.2/xz-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-spi/1.2.0.Final/arquillian-core-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-api/1.2.0.Final/arquillian-core-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-spi/1.2.0.Final/arquillian-test-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-api/1.2.0.Final/arquillian-test-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/spacelift/arquillian-spacelift/1.0.2/arquillian-spacelift-1.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/spacelift/arquillian-spacelift-api/1.0.2/arquillian-spacelift-api-1.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-core-reporter-api/0.0.3/arquillian-core-reporter-api-0.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-reporter-api/0.0.3/arquillian-reporter-api-0.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-reporter-impl/0.0.3/arquillian-reporter-impl-0.0.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-spi/1.2.0.Final/arquillian-container-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-api/1.2.6/shrinkwrap-api-1.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-impl-base/1.2.0.Final/arquillian-core-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.2.0.Final/arquillian-container-test-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-api/1.2.0.Final/arquillian-container-test-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-spi/1.2.0.Final/arquillian-container-test-spi-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/eclipse/jgit/org.eclipse.jgit/4.9.2.201712150930-r/org.eclipse.jgit-4.9.2.201712150930-r.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/googlecode/javaewah/JavaEWAH/1.1.6/JavaEWAH-1.1.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/junit/arquillian-junit-container/1.2.0.Final/arquillian-junit-container-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/junit/arquillian-junit-core/1.2.0.Final/arquillian-junit-core-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-impl-base/1.2.0.Final/arquillian-test-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-impl-base/1.2.0.Final/arquillian-container-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-impl-base/1.2.6/shrinkwrap-impl-base-1.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-spi/1.2.6/shrinkwrap-spi-1.2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-impl-base/1.2.0.Final/arquillian-container-impl-base-1.2.0.Final-tests.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/config/arquillian-config-api/1.2.0.Final/arquillian-config-api-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/config/arquillian-config-impl-base/1.2.0.Final/arquillian-config-impl-base-1.2.0.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-spi/2.0.0/shrinkwrap-descriptors-spi-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-impl-base/1.2.0.Final/arquillian-core-impl-base-1.2.0.Final-tests.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/objenesis/objenesis/2.1/objenesis-2.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.17.0/system-rules-1.17.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-docker/1.0.0-alpha-2/shrinkwrap-descriptors-api-docker-1.0.0-alpha-2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-base/2.0.0/shrinkwrap-descriptors-api-base-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-impl-docker/1.0.0-alpha-2/shrinkwrap-descriptors-impl-docker-1.0.0-alpha-2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-impl-base/2.0.0/shrinkwrap-descriptors-impl-base-2.0.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/github/docker-java/docker-java/3.0.14/docker-java-3.0.14.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/jaxrs/jackson-jaxrs-json-provider/2.6.3/jackson-jaxrs-json-provider-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/jaxrs/jackson-jaxrs-base/2.6.3/jackson-jaxrs-base-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.6.3/jackson-core-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.6.3/jackson-databind-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.6.0/jackson-annotations-2.6.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.6.3/jackson-module-jaxb-annotations-2.6.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/connectors/jersey-apache-connector/2.23.1/jersey-apache-connector-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/core/jersey-common/2.23.1/jersey-common-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.23.1/jersey-guava-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5/httpclient-4.5.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/core/jersey-client/2.23.1/jersey-client-2.23.1.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-api/2.4.0-b34/hk2-api-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-utils/2.4.0-b34/hk2-utils-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/external/aopalliance-repackaged/2.4.0-b34/aopalliance-repackaged-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/external/javax.inject/2.4.0-b34/javax.inject-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-locator/2.4.0-b34/hk2-locator-2.4.0-b34.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/kohlschutter/junixsocket/junixsocket-common/2.0.4/junixsocket-common-2.0.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/kohlschutter/junixsocket/junixsocket-native-common/2.0.4/junixsocket-native-common-2.0.4.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/scijava/native-lib-loader/2.0.2/native-lib-loader-2.0.2.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.21/jcl-over-slf4j-1.7.21.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/google/guava/guava/18.0/guava-18.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/bouncycastle/bcpkix-jdk15on/1.54/bcpkix-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.54/bcprov-jdk15on-1.54.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec-http/4.1.11.Final/netty-codec-http-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec/4.1.11.Final/netty-codec-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-handler/4.1.11.Final/netty-handler-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-buffer/4.1.11.Final/netty-buffer-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport/4.1.11.Final/netty-transport-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-resolver/4.1.11.Final/netty-resolver-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-handler-proxy/4.1.11.Final/netty-handler-proxy-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec-socks/4.1.11.Final/netty-codec-socks-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.1.11.Final/netty-transport-native-epoll-4.1.11.Final-linux-x86_64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-common/4.1.11.Final/netty-common-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-unix-common/4.1.11.Final/netty-transport-native-unix-common-4.1.11.Final.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-kqueue/4.1.11.Final/netty-transport-native-kqueue-4.1.11.Final-osx-x86_64.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initModel(AstorCoreEngine.java:790) - Number of CtTypes created: 126
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.initPopulation(AstorCoreEngine.java:724) - 
---- Initial suspicious size: 265
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:134) - Total suspicious from FL: 265,  250
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createProgramInstance(ProgramVariantFactory.java:143) - Total ModPoint created: 250
[INFO ] fr.inria.astor.core.solutionsearch.population.ProgramVariantFactory.createInitialPopulation(ProgramVariantFactory.java:82) - Creating program variant #1, [Variant id: 1, #gens: 250, #ops: 0, parent:-]
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.setFitnessOfPopulation(AstorCoreEngine.java:765) - The original fitness is : 3.0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:66) - ----------------------------
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:67) - ---Configuration properties:---Execution values
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:lastJUnitVersion= ./examples/libs/junit-4.11.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:alternativecompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoredTestCases= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:workingDirectory= /proj/nobackup/snic2020-10-10/astor
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:manipulatesuper= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:validation= process
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4testexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:operatorspace= suppression
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:disablelog= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:binjavafolder= /target/classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:synthesis_depth= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltartestpackagetoexclude= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfitnessinitialpopulation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuiteresultfolder= evosuite
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:flthreshold= 0.1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:regressionforfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:collectonlyusedmethod= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:preservelinenumbers= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax2= 172690
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:tmax1= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probagenmutation= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nomodificationconvergence= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:diff_type= relative
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:targetelementprocessor= statements
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srctestfolder= src/test/java
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forceExecuteRegression= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:clusteringfilename= clustering.csv
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logtestexecution= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_buggy_class= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:numberExecutions= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumbersolutions= 3
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evo_affected_by_op= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:population= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:considerzerovaluesusp= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxCombinationVariableLimit= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:loglevel= INFO
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savesolution= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:javacompliancelevel= 8
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:uniqueoptogen= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:gzoltarpackagetonotinstrument= junit.framework
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectIdentifier= AstorJKali-repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:modificationpointnavigation= weight
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:stopfirst= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:multipointmodification= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:elementsToMutate= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jsonoutputname= astor_output
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoDSE= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bintestfolder= /target/test-classes
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:testbystep= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:version-location= ./math-version/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:reintroduce= PARENTS:ORIGINAL
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:executorjar= ./lib/jtestex7.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxGeneration= 200
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:max_synthesis_step= 10000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:projectinfocommand= com.github.tdurieux:project-config-maven-plugin:info
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxVarCombination= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtime= 100
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitejar= ./lib/evosuite-master-1.0.4-SNAPSHOT.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvmversion= 1.8.0_202
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:commandTrunk= 50000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:faultlocalization= CoCoSpoon
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetmodel= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxsuspcandidates= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mode= jkali
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:learningdir= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:jvm4evosuitetestexecution= /cvmfs/ebsw.hpc2n.umu.se/amd64_ubuntu1604_common/software/Core/Java/1.8.0_202/bin
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:filterfaultlocalization= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:mutationrate= 1 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pathToMVNRepository= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resourcesfolder= /src/main/resources:/src/test/resources:
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:runjava7code= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:timezone= Europe/Paris
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evoRunOnBuggyClass= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:compiler= fr.inria.astor.core.manipulation.bytecode.compiler.SpoonClassCompiler
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:limitbysuspicious= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logsattemps= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:dependenciespath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-api/1.12.1-SNAPSHOT/arquillian-cube-api-1.12.1-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-spi/1.12.1-SNAPSHOT/arquillian-cube-spi-1.12.1-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-requirement-spi/1.12.1-SNAPSHOT/arquillian-cube-requirement-spi-1.12.1-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/cube/arquillian-cube-core/1.12.1-SNAPSHOT/arquillian-cube-core-1.12.1-SNAPSHOT.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-io/commons-io/2.3/commons-io-2.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/commons/commons-compress/1.5/commons-compress-1.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/tukaani/xz/1.2/xz-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/commons/commons-lang3/3.4/commons-lang3-3.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-spi/1.2.0.Final/arquillian-core-spi-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-api/1.2.0.Final/arquillian-core-api-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-spi/1.2.0.Final/arquillian-test-spi-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-api/1.2.0.Final/arquillian-test-api-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/spacelift/arquillian-spacelift/1.0.2/arquillian-spacelift-1.0.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/spacelift/arquillian-spacelift-api/1.0.2/arquillian-spacelift-api-1.0.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-core-reporter-api/0.0.3/arquillian-core-reporter-api-0.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-reporter-api/0.0.3/arquillian-reporter-api-0.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/arquillian/reporter/arquillian-reporter-impl/0.0.3/arquillian-reporter-impl-0.0.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-spi/1.2.0.Final/arquillian-container-spi-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-api/1.2.6/shrinkwrap-api-1.2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-impl-base/1.2.0.Final/arquillian-core-impl-base-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/google/code/gson/gson/2.8.0/gson-2.8.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-impl-base/1.2.0.Final/arquillian-container-test-impl-base-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-api/1.2.0.Final/arquillian-container-test-api-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-test-spi/1.2.0.Final/arquillian-container-test-spi-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/eclipse/jgit/org.eclipse.jgit/4.9.2.201712150930-r/org.eclipse.jgit-4.9.2.201712150930-r.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/jcraft/jsch/0.1.54/jsch-0.1.54.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/googlecode/javaewah/JavaEWAH/1.1.6/JavaEWAH-1.1.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/slf4j/slf4j-api/1.7.5/slf4j-api-1.7.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/junit/arquillian-junit-container/1.2.0.Final/arquillian-junit-container-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/junit/arquillian-junit-core/1.2.0.Final/arquillian-junit-core-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/test/arquillian-test-impl-base/1.2.0.Final/arquillian-test-impl-base-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-impl-base/1.2.0.Final/arquillian-container-impl-base-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-impl-base/1.2.6/shrinkwrap-impl-base-1.2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/shrinkwrap-spi/1.2.6/shrinkwrap-spi-1.2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/container/arquillian-container-impl-base/1.2.0.Final/arquillian-container-impl-base-1.2.0.Final-tests.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/config/arquillian-config-api/1.2.0.Final/arquillian-config-api-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/config/arquillian-config-impl-base/1.2.0.Final/arquillian-config-impl-base-1.2.0.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-spi/2.0.0/shrinkwrap-descriptors-spi-2.0.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/arquillian/core/arquillian-core-impl-base/1.2.0.Final/arquillian-core-impl-base-1.2.0.Final-tests.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/mockito/mockito-core/1.10.19/mockito-core-1.10.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/objenesis/objenesis/2.1/objenesis-2.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/github/stefanbirkner/system-rules/1.17.0/system-rules-1.17.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-docker/1.0.0-alpha-2/shrinkwrap-descriptors-api-docker-1.0.0-alpha-2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-api-base/2.0.0/shrinkwrap-descriptors-api-base-2.0.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-impl-docker/1.0.0-alpha-2/shrinkwrap-descriptors-impl-docker-1.0.0-alpha-2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/jboss/shrinkwrap/descriptors/shrinkwrap-descriptors-impl-base/2.0.0/shrinkwrap-descriptors-impl-base-2.0.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/github/docker-java/docker-java/3.0.14/docker-java-3.0.14.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/jaxrs/jackson-jaxrs-json-provider/2.6.3/jackson-jaxrs-json-provider-2.6.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/jaxrs/jackson-jaxrs-base/2.6.3/jackson-jaxrs-base-2.6.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-core/2.6.3/jackson-core-2.6.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-databind/2.6.3/jackson-databind-2.6.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/core/jackson-annotations/2.6.0/jackson-annotations-2.6.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.6.3/jackson-module-jaxb-annotations-2.6.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/connectors/jersey-apache-connector/2.23.1/jersey-apache-connector-2.23.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/core/jersey-common/2.23.1/jersey-common-2.23.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/javax/annotation/javax.annotation-api/1.2/javax.annotation-api-1.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/bundles/repackaged/jersey-guava/2.23.1/jersey-guava-2.23.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/osgi-resource-locator/1.0.1/osgi-resource-locator-1.0.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/javax/ws/rs/javax.ws.rs-api/2.0.1/javax.ws.rs-api-2.0.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/httpcomponents/httpcore/4.4.5/httpcore-4.4.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/apache/httpcomponents/httpclient/4.5/httpclient-4.5.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/jersey/core/jersey-client/2.23.1/jersey-client-2.23.1.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-api/2.4.0-b34/hk2-api-2.4.0-b34.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-utils/2.4.0-b34/hk2-utils-2.4.0-b34.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/external/aopalliance-repackaged/2.4.0-b34/aopalliance-repackaged-2.4.0-b34.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/external/javax.inject/2.4.0-b34/javax.inject-2.4.0-b34.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/glassfish/hk2/hk2-locator/2.4.0-b34/hk2-locator-2.4.0-b34.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/javassist/javassist/3.18.1-GA/javassist-3.18.1-GA.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/kohlschutter/junixsocket/junixsocket-common/2.0.4/junixsocket-common-2.0.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/log4j/log4j/1.2.17/log4j-1.2.17.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/kohlschutter/junixsocket/junixsocket-native-common/2.0.4/junixsocket-native-common-2.0.4.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/scijava/native-lib-loader/2.0.2/native-lib-loader-2.0.2.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-codec/commons-codec/1.10/commons-codec-1.10.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/slf4j/jcl-over-slf4j/1.7.21/jcl-over-slf4j-1.7.21.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/com/google/guava/guava/18.0/guava-18.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/bouncycastle/bcpkix-jdk15on/1.54/bcpkix-jdk15on-1.54.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/bouncycastle/bcprov-jdk15on/1.54/bcprov-jdk15on-1.54.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec-http/4.1.11.Final/netty-codec-http-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec/4.1.11.Final/netty-codec-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-handler/4.1.11.Final/netty-handler-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-buffer/4.1.11.Final/netty-buffer-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport/4.1.11.Final/netty-transport-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-resolver/4.1.11.Final/netty-resolver-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-handler-proxy/4.1.11.Final/netty-handler-proxy-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-codec-socks/4.1.11.Final/netty-codec-socks-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-epoll/4.1.11.Final/netty-transport-native-epoll-4.1.11.Final-linux-x86_64.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-common/4.1.11.Final/netty-common-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-unix-common/4.1.11.Final/netty-transport-native-unix-common-4.1.11.Final.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/io/netty/netty-transport-native-kqueue/4.1.11.Final/netty-transport-native-kqueue-4.1.11.Final-osx-x86_64.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/yaml/snakeyaml/1.19/snakeyaml-1.19.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/assertj/assertj-core/3.8.0/assertj-core-3.8.0.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/commons-lang/commons-lang/2.6/commons-lang-2.6.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/junit/junit/4.12/junit-4.12.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/.m2/org/hamcrest/hamcrest-library/1.3/hamcrest-library-1.3.jar
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logpatternlayout= [%-5p] %l - %m%n
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:packageToInstrument= 
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:skipfaultlocalization= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:scope= package
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:transformingredient= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:fitnessfunction= fr.inria.astor.core.solutionsearch.population.TestCaseFitnessFunction
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxnumvariablesperingredient= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:logfilepath= /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/repairnator.astor.jkali.log
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:parsesourcefromoriginal= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:pvariantfoldername= variant-
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savespoonmodelondisk= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:srcjavafolder= src/main/java/
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:populationcontroller= fr.inria.astor.core.solutionsearch.population.TestCaseBasedFitnessPopulationController
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:ignoreflakyinfl= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:cleantemplates= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:applyCrossover= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxmodificationpoints= 1000
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:duplicateingredientsinspace= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:metid= 0
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:continuewhenmodelfail= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:saveall= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:seed= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:savecompletepatched= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:resetoperations= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:processoutputinfile= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:location= /scratch/dginelli/workspace/repairnator-repairnator-experiments-arquillian-arquillian-cube-327622800-20180111-115129-firstCommit/docker/docker
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:probabilistictransformation= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:overridemaxtime= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:outputjsonresult= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:allpoints= false
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:bugId= 280
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:evosuitetimeout= 120
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:maxtimefactor= 10
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:nrPlaceholders= 1
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:69) - p:forcesubprocesskilling= true
[INFO ] fr.inria.astor.core.setup.ConfigurationProperties.print(ConfigurationProperties.java:71) - ----------------------------
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.arquillian.cube.docker.impl.requirement.DockerRequirement.isDockerRunning(serverUrl)) { 	th[...] ` -topatch--> `if (true) { 	throw new org.arquillian.cube.spi.requirement.UnsatisfiedRequirementException(("No serv[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.arquillian.cube.docker.impl.requirement.DockerRequirement.isDockerRunning(serverUrl)) { 	th[...] ` -topatch--> `if (false) { 	throw new org.arquillian.cube.spi.requirement.UnsatisfiedRequirementException(("No ser[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 73, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (!org.arquillian.cube.docker.impl.requirement.DockerRequirement.isDockerRunning(serverUrl)) { 	th[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 60, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return client.versionCmd().exec() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 70, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (uri.isAbsolute()) { 	content = org.arquillian.cube.impl.util.IOUtil.asStringPreservingNewLines(u[...] ` -topatch--> `if (true) { 	content = org.arquillian.cube.impl.util.IOUtil.asStringPreservingNewLines(uri.toURL().o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 70, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (uri.isAbsolute()) { 	content = org.arquillian.cube.impl.util.IOUtil.asStringPreservingNewLines(u[...] ` -topatch--> `if (false) { 	content = org.arquillian.cube.impl.util.IOUtil.asStringPreservingNewLines(uri.toURL().[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 70, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (uri.isAbsolute()) { 	content = org.arquillian.cube.impl.util.IOUtil.asStringPreservingNewLines(u[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 106, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 105, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `defaultUri = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.getDefaultFileLo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 113, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `state = org.arquillian.cube.spi.Cube.State.CREATED ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 114, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lifecycle.fire(new org.arquillian.cube.spi.event.lifecycle.AfterCreate(id)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.google.common.base.Strings.isNullOrEmpty(serverUrl)) { 	throw new org.arquillian.cube.spi.re[...] ` -topatch--> `if (true) { 	throw new org.arquillian.cube.spi.requirement.UnsatisfiedRequirementException("Could no[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (com.google.common.base.Strings.isNullOrEmpty(serverUrl)) { 	throw new org.arquillian.cube.spi.re[...] ` -topatch--> `if (false) { 	throw new org.arquillian.cube.spi.requirement.UnsatisfiedRequirementException("Could n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 71, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (com.google.common.base.Strings.isNullOrEmpty(serverUrl)) { 	throw new org.arquillian.cube.spi.re[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 162, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException(e) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (state != org.arquillian.cube.spi.Cube.State.DESTROYED) { 	return; } ` -topatch--> `if (true) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (state != org.arquillian.cube.spi.Cube.State.DESTROYED) { 	return; } ` -topatch--> `if (false) { 	return; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (state != org.arquillian.cube.spi.Cube.State.DESTROYED) { 	return; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 105, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `lifecycle.fire(new org.arquillian.cube.spi.event.lifecycle.BeforeCreate(id)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 107, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.arquillian.cube.docker.impl.model.DockerCube.log.fine(java.lang.String.format("Creating containe[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 109, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `executor.createContainer(id, configuration) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 110, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.startingTimeInMillis = java.lang.System.currentTimeMillis() - currentTime ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 111, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.arquillian.cube.docker.impl.model.DockerCube.log.fine(java.lang.String.format("Created container[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.cube.CubeConverter line: 29, pointed element: CtThrowImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtThrowImpl) `throw new java.lang.IllegalArgumentException(e) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 38, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.resolver = resolver ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.requirement.DockerRequirement line: 37, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.commandLineExecutor = commandLineExecutor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 155, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resolveUri.add(java.net.URI.create(environmentUri)) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.System.getProperty(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CUBE[...] ` -topatch--> `if (true) { 	final java.lang.String resolveFilename = org.arquillian.cube.docker.impl.client.CubeDoc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.System.getProperty(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CUBE[...] ` -topatch--> `if (false) { 	final java.lang.String resolveFilename = org.arquillian.cube.docker.impl.client.CubeDo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 151, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.lang.System.getProperty(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CUBE[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 149, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `resolveUri.add(uri) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastSeparatorChar > (-1)) { 	return fullPath.substring(lastSeparatorChar + 1, fullPath.lastIndex[...] ` -topatch--> `if (true) { 	return fullPath.substring(lastSeparatorChar + 1, fullPath.lastIndexOf('.')); } else { 	[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (lastSeparatorChar > (-1)) { 	return fullPath.substring(lastSeparatorChar + 1, fullPath.lastIndex[...] ` -topatch--> `if (false) { 	return fullPath.substring(lastSeparatorChar + 1, fullPath.lastIndexOf('.')); } else { [...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 237, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (lastSeparatorChar > (-1)) { 	return fullPath.substring(lastSeparatorChar + 1, fullPath.lastIndex[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 238, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return fullPath.substring(lastSeparatorChar + 1, fullPath.lastIndexOf('.')) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((uri.getScheme() == null) || "file".equals(uri.getScheme())) {  	final java.lang.String fullPath[...] ` -topatch--> `if (true) {  	final java.lang.String fullPath = uri.toString(); 	final int lastSeparatorChar = fullP[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((uri.getScheme() == null) || "file".equals(uri.getScheme())) {  	final java.lang.String fullPath[...] ` -topatch--> `if (false) {  	final java.lang.String fullPath = uri.toString(); 	final int lastSeparatorChar = full[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 233, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((uri.getScheme() == null) || "file".equals(uri.getScheme())) {  	final java.lang.String fullPath[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 190, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mainDefinitionPath != null) { 	return mainDefinitionPath.toUri(); } ` -topatch--> `if (true) { 	return mainDefinitionPath.toUri(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 190, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (mainDefinitionPath != null) { 	return mainDefinitionPath.toUri(); } ` -topatch--> `if (false) { 	return mainDefinitionPath.toUri(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 190, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (mainDefinitionPath != null) { 	return mainDefinitionPath.toUri(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (testDefinitionPath != null) { 	return testDefinitionPath.toUri(); } else { 	final java.nio.file.[...] ` -topatch--> `if (true) { 	return testDefinitionPath.toUri(); } else { 	final java.nio.file.Path mainPath = java.n[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (testDefinitionPath != null) { 	return testDefinitionPath.toUri(); } else { 	final java.nio.file.[...] ` -topatch--> `if (false) { 	return testDefinitionPath.toUri(); } else { 	final java.nio.file.Path mainPath = java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 185, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (testDefinitionPath != null) { 	return testDefinitionPath.toUri(); } else { 	final java.nio.file.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.nio.file.Files.exists(yamlPath)) { 	return yamlPath; } ` -topatch--> `if (true) { 	return yamlPath; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.nio.file.Files.exists(yamlPath)) { 	return yamlPath; } ` -topatch--> `if (false) { 	return yamlPath; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 212, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.nio.file.Files.exists(yamlPath)) { 	return yamlPath; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.nio.file.Files.exists(ymlPath)) { 	return ymlPath; } else { 	final java.nio.file.Path yamlP[...] ` -topatch--> `if (true) { 	return ymlPath; } else { 	final java.nio.file.Path yamlPath = fullpath.resolveSibling(f[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (java.nio.file.Files.exists(ymlPath)) { 	return ymlPath; } else { 	final java.nio.file.Path yamlP[...] ` -topatch--> `if (false) { 	return ymlPath; } else { 	final java.nio.file.Path yamlPath = fullpath.resolveSibling([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (java.nio.file.Files.exists(ymlPath)) { 	return ymlPath; } else { 	final java.nio.file.Path yamlP[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 36, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return cubeConverter.convert() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.cube.CubeConverter line: 17, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dockerCubeDefinitionMap = org.arquillian.cube.docker.impl.util.ConfigUtil.load(inputStream) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.cube.CubeConverter line: 18, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `inputStream.close() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.cube.CubeConverter line: 27, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.arquillian.cube.docker.impl.docker.cube.CubeConverter(location) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 31, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dockerComposeRootDirectory = location.getParent() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 30, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dockerComposeDefinitionMap = loadConfig(content) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 82, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cubeConfiguration.dockerServerVersion = map.get(org.arquillian.cube.docker.impl.client.CubeDockerCon[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 53, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter(location) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 29, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (definitionFormat) { 	case COMPOSE : 		{ 			org.arquillian.cube.docker.impl.docker.compose.Do[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 58, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.convert(definitionFile[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 49, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `finalDefinition.merge(convertedDocument) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 47, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.net.URI uri : uris) { 	org.arquillian.cube.docker.impl.client.config.DockerCompositions co[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 97, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addAll.put(otherContainer.getKey(), otherContainer.getValue()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 100, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `containers.putAll(addAll) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (get(otherContainer.getKey()) == null) { 	addAll.put(otherContainer.getKey(), otherContainer.getV[...] ` -topatch--> `if (true) { 	addAll.put(otherContainer.getKey(), otherContainer.getValue()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (get(otherContainer.getKey()) == null) { 	addAll.put(otherContainer.getKey(), otherContainer.getV[...] ` -topatch--> `if (false) { 	addAll.put(otherContainer.getKey(), otherContainer.getValue()); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 96, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (get(otherContainer.getKey()) == null) { 	addAll.put(otherContainer.getKey(), otherContainer.getV[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 95, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, org.arquillian.cube.docker.impl.client.config.CubeContain[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 86, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `networks.putAll(addAllNetworks) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 72, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.lang.String name : names) { 	org.arquillian.cube.docker.impl.client.config.CubeContainer c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 18, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.networks = new java.util.LinkedHashMap<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 17, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.containers = new java.util.LinkedHashMap<>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeEnvironmentVarResolver line: 28, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `content = org.arquillian.cube.docker.impl.docker.compose.DockerComposeEnvironmentVarResolver.resolve[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 86, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cubeConfiguration.dockerServerUri = map.get(org.arquillian.cube.docker.impl.client.CubeDockerConfigu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isV2) { 	dockerCompositions = convertCompose(dockerComposeDefinitionMap); } else { 	for (java.la[...] ` -topatch--> `if (true) { 	dockerCompositions = convertCompose(this.dockerComposeDefinitionMap); } else { 	for (ja[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (isV2) { 	dockerCompositions = convertCompose(dockerComposeDefinitionMap); } else { 	for (java.la[...] ` -topatch--> `if (false) { 	dockerCompositions = convertCompose(this.dockerComposeDefinitionMap); } else { 	for (j[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.DockerComposeConverter line: 69, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (isV2) { 	dockerCompositions = convertCompose(dockerComposeDefinitionMap); } else { 	for (java.la[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 108, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.configuration = configuration ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 107, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dockerComposeRootLocation = dockerComposeRootLocation ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 103, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this(dockerComposeRootLocation, new org.arquillian.cube.docker.impl.client.config.CubeContainer()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dockerComposeContainerDefinition.containsKey(org.arquillian.cube.docker.impl.docker.compose.Cont[...] ` -topatch--> `if (true) { 	this.addImage(org.arquillian.cube.docker.impl.util.YamlUtil.asString(dockerComposeConta[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dockerComposeContainerDefinition.containsKey(org.arquillian.cube.docker.impl.docker.compose.Cont[...] ` -topatch--> `if (false) { 	this.addImage(org.arquillian.cube.docker.impl.util.YamlUtil.asString(dockerComposeCont[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (dockerComposeContainerDefinition.containsKey(org.arquillian.cube.docker.impl.docker.compose.Cont[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dockerComposeContainerDefinition.containsKey(org.arquillian.cube.docker.impl.docker.compose.Cont[...] ` -topatch--> `if (true) { 	java.util.Map<java.lang.String, java.lang.Object> extendsDefinition = org.arquillian.cu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (dockerComposeContainerDefinition.containsKey(org.arquillian.cube.docker.impl.docker.compose.Cont[...] ` -topatch--> `if (false) { 	java.util.Map<java.lang.String, java.lang.Object> extendsDefinition = org.arquillian.c[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.docker.compose.ContainerBuilder line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (dockerComposeContainerDefinition.containsKey(org.arquillian.cube.docker.impl.docker.compose.Cont[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.CubeContainer line: 292, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.removeVolumes = deleteVolumes ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 13, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.String name = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 14, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.String tag = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 135, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cubeConfiguration.definitionFormat = org.arquillian.cube.docker.impl.client.DefinitionFormat.valueOf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Await line: 55, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.ip = ip ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 99, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (definitionFormat) { 	case COMPOSE : 		{ 			defaultUri = org.arquillian.cube.docker.impl.clie[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPa[...] ` -topatch--> `if (true) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.check[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPa[...] ` -topatch--> `if (false) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.chec[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPar[...] ` -topatch--> `if (true) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.checkS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPar[...] ` -topatch--> `if (false) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.check[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 134, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPar[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 132, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.checkDistributionDir[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPar[...] ` -topatch--> `if (true) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.checkD[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPar[...] ` -topatch--> `if (false) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.check[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 130, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {  	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPar[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 128, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.checkRoot(filename) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 115, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return new org.arquillian.cube.docker.impl.client.config.DockerCompositions() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 113, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.logger.fine( "No Docker conta[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultUri == null) { 	org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.lo[...] ` -topatch--> `if (true) { 	org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.logger.fine( 	"N[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultUri == null) { 	org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.lo[...] ` -topatch--> `if (false) { 	org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.logger.fine( 	"[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 112, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (defaultUri == null) { 	org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.lo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (finalPath != null) { 	return finalPath.toUri(); } ` -topatch--> `if (true) { 	return finalPath.toUri(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (finalPath != null) { 	return finalPath.toUri(); } ` -topatch--> `if (false) { 	return finalPath.toUri(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 154, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (finalPath != null) { 	return finalPath.toUri(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (finalPath != null) { 	return finalPath.toUri(); } ` -topatch--> `if (true) { 	return finalPath.toUri(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (finalPath != null) { 	return finalPath.toUri(); } ` -topatch--> `if (false) { 	return finalPath.toUri(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 165, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (finalPath != null) { 	return finalPath.toUri(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 141, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.checkSrcTestAndMainR[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPa[...] ` -topatch--> `if (true) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.check[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPa[...] ` -topatch--> `if (false) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.chec[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (docker == null) {   	docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionPa[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser line: 136, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `docker = org.arquillian.cube.docker.impl.client.DockerContainerDefinitionParser.checkSrcTestAndMainR[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Await line: 63, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.ports = ports ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 182, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cubeConfiguration.dockerContainersContent =  org.arquillian.cube.docker.impl.client.DockerContainerD[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.IGNORE_CONTAINERS[...] ` -topatch--> `if (true) { 	cubeConfiguration.ignoreContainersDefinition = java.lang.Boolean.parseBoolean(map.get(o[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.IGNORE_CONTAINERS[...] ` -topatch--> `if (false) { 	cubeConfiguration.ignoreContainersDefinition = java.lang.Boolean.parseBoolean(map.get([...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 129, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.IGNORE_CONTAINERS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_REGISTRY))[...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerRegistry = map.get(org.arquillian.cube.docker.impl.client.CubeD[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_REGISTRY))[...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerRegistry = map.get(org.arquillian.cube.docker.impl.client.Cube[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 125, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_REGISTRY))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.TLS_VERIFY)) { 	c[...] ` -topatch--> `if (true) { 	cubeConfiguration.tlsVerify = java.lang.Boolean.parseBoolean(map.get(org.arquillian.cub[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.TLS_VERIFY)) { 	c[...] ` -topatch--> `if (false) { 	cubeConfiguration.tlsVerify = java.lang.Boolean.parseBoolean(map.get(org.arquillian.cu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 121, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.TLS_VERIFY)) { 	c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CERT_PATH)) { 	cu[...] ` -topatch--> `if (true) { 	cubeConfiguration.certPath = map.get(org.arquillian.cube.docker.impl.client.CubeDockerC[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CERT_PATH)) { 	cu[...] ` -topatch--> `if (false) { 	cubeConfiguration.certPath = map.get(org.arquillian.cube.docker.impl.client.CubeDocker[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 117, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CERT_PATH)) { 	cu[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `if (true) { 	final java.lang.String location = map.get(org.arquillian.cube.docker.impl.client.CubeDo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `if (false) { 	final java.lang.String location = map.get(org.arquillian.cube.docker.impl.client.CubeD[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 144, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `if (true) { 	java.lang.String content = map.get(org.arquillian.cube.docker.impl.client.CubeDockerCon[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `if (false) { 	java.lang.String content = map.get(org.arquillian.cube.docker.impl.client.CubeDockerCo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 138, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DEFINITION_FORMAT[...] ` -topatch--> `if (true) { 	java.lang.String definitionContent = map.get(org.arquillian.cube.docker.impl.client.Cub[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DEFINITION_FORMAT[...] ` -topatch--> `if (false) { 	java.lang.String definitionContent = map.get(org.arquillian.cube.docker.impl.client.Cu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 133, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DEFINITION_FORMAT[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_MACHINE_PA[...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerMachinePath = map.get(org.arquillian.cube.docker.impl.client.Cu[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_MACHINE_PA[...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerMachinePath = map.get(org.arquillian.cube.docker.impl.client.C[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 97, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_MACHINE_PA[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.BOOT2DOCKER_PATH)[...] ` -topatch--> `if (true) { 	cubeConfiguration.boot2DockerPath = map.get(org.arquillian.cube.docker.impl.client.Cube[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.BOOT2DOCKER_PATH)[...] ` -topatch--> `if (false) { 	cubeConfiguration.boot2DockerPath = map.get(org.arquillian.cube.docker.impl.client.Cub[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 93, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.BOOT2DOCKER_PATH)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DIND_RESOLUTION))[...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerInsideDockerResolution = java.lang.Boolean.parseBoolean(map.get[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DIND_RESOLUTION))[...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerInsideDockerResolution = java.lang.Boolean.parseBoolean(map.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 89, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DIND_RESOLUTION))[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_URI)) { 	c[...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerServerUri = map.get(org.arquillian.cube.docker.impl.client.Cube[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_URI)) { 	c[...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerServerUri = map.get(org.arquillian.cube.docker.impl.client.Cub[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_URI)) { 	c[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.EMAIL)) { 	cubeCo[...] ` -topatch--> `if (true) { 	cubeConfiguration.email = map.get(org.arquillian.cube.docker.impl.client.CubeDockerConf[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.EMAIL)) { 	cubeCo[...] ` -topatch--> `if (false) { 	cubeConfiguration.email = map.get(org.arquillian.cube.docker.impl.client.CubeDockerCon[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 113, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.EMAIL)) { 	cubeCo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.PASSWORD)) { 	cub[...] ` -topatch--> `if (true) { 	cubeConfiguration.password = map.get(org.arquillian.cube.docker.impl.client.CubeDockerC[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.PASSWORD)) { 	cub[...] ` -topatch--> `if (false) { 	cubeConfiguration.password = map.get(org.arquillian.cube.docker.impl.client.CubeDocker[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 109, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.PASSWORD)) { 	cub[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.USERNAME)) { 	cub[...] ` -topatch--> `if (true) { 	cubeConfiguration.username = map.get(org.arquillian.cube.docker.impl.client.CubeDockerC[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.USERNAME)) { 	cub[...] ` -topatch--> `if (false) { 	cubeConfiguration.username = map.get(org.arquillian.cube.docker.impl.client.CubeDocker[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 105, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.USERNAME)) { 	cub[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_MACHINE_NA[...] ` -topatch--> `if (true) { 	cubeConfiguration.machineName = map.get(org.arquillian.cube.docker.impl.client.CubeDock[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_MACHINE_NA[...] ` -topatch--> `if (false) { 	cubeConfiguration.machineName = map.get(org.arquillian.cube.docker.impl.client.CubeDoc[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 101, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_MACHINE_NA[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_VERSION)) [...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerServerVersion = map.get(org.arquillian.cube.docker.impl.client.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_VERSION)) [...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerServerVersion = map.get(org.arquillian.cube.docker.impl.client[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_VERSION)) [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_SERVER_IP)[...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerServerIp = map.get(org.arquillian.cube.docker.impl.client.CubeD[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_SERVER_IP)[...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerServerIp = map.get(org.arquillian.cube.docker.impl.client.Cube[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 77, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_SERVER_IP)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.CubeContainer line: 100, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.exposedPorts = exposedPorts ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 157, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.arquillian.cube.docker.impl.client.config.ExposedPort.valueOf(value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.BindingUtil line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cubeConfiguration.getPortBindings() != null) { 	for (org.arquillian.cube.docker.impl.client.conf[...] ` -topatch--> `if (true) { 	for (org.arquillian.cube.docker.impl.client.config.PortBinding cubePortBinding : cubeCo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.BindingUtil line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (cubeConfiguration.getPortBindings() != null) { 	for (org.arquillian.cube.docker.impl.client.conf[...] ` -topatch--> `if (false) { 	for (org.arquillian.cube.docker.impl.client.config.PortBinding cubePortBinding : cubeC[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.BindingUtil line: 62, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (cubeConfiguration.getPortBindings() != null) { 	for (org.arquillian.cube.docker.impl.client.conf[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 274, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.mappedPorts = new java.util.HashMap<java.lang.Integer, org.arquillian.cube.spi.metadata.HasPort[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 275, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.containerPorts = new java.util.LinkedHashSet<java.lang.Integer>() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 277, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `containerIP = configuredBindings.getIP() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 286, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.boundPorts = new java.util.LinkedHashSet<java.lang.Integer>(containerPorts.size()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.CopyToContainer line: 14, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.executor = executor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.CopyToContainer line: 13, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cubeId = cubeId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.ChangesOnFilesystem line: 15, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.executor = executor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.ChangesOnFilesystem line: 14, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cubeId = cubeId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.CopyFromContainer line: 20, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cubeId = cubeId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.CopyFromContainer line: 21, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.executor = executor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (configuration.getBuildImage() != null) { 	java.lang.String path = configuration.getBuildImage().[...] ` -topatch--> `if (true) { 	java.lang.String path = this.configuration.getBuildImage().getDockerfileLocation(); 	if[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (configuration.getBuildImage() != null) { 	java.lang.String path = configuration.getBuildImage().[...] ` -topatch--> `if (false) { 	java.lang.String path = this.configuration.getBuildImage().getDockerfileLocation(); 	i[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 81, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (configuration.getBuildImage() != null) { 	java.lang.String path = configuration.getBuildImage().[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 65, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.id = id ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 66, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.configuration = configuration ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 67, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.executor = executor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 68, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.portBindings = new org.arquillian.cube.docker.impl.model.DockerCube.PortBindings() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 69, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addDefaultMetadata() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 73, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.CanCopyToContainer.class, new org.arquillian.cube.docke[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 74, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.CanExecuteProcessInContainer.class, new org.arquillian.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 75, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.CanCopyFromContainer.class, new org.arquillian.cube.doc[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 76, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.CanSeeChangesOnFilesystem.class, new org.arquillian.cub[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 77, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.CanSeeTop.class, new org.arquillian.cube.docker.impl.cl[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 78, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.HasPortBindings.class, portBindings) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.model.DockerCube line: 79, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `addMetadata(org.arquillian.cube.spi.metadata.CanReportMetrics.class, new org.arquillian.cube.docker.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.ExecuteProcessInContainer line: 13, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.executor = executor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.ExecuteProcessInContainer line: 12, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cubeId = cubeId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.GetTop line: 14, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.executor = executor ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.GetTop line: 13, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.cubeId = cubeId ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.metadata.ReportMetrics line: 36, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.dockerCube = dockerCube ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Await line: 47, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.strategy = strategy ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.CubeContainer line: 412, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.await = await ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 24, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `type = parts[1].trim() ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 14, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.type = type ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 160, pointed element: CtReturnImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtReturnImpl) `return org.arquillian.cube.docker.impl.client.config.Image.valueOf(value) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.Link.class) { 	java.lang.String [...] ` -topatch--> `if (true) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.Link.class) { 	java.lang.String [...] ` -topatch--> `if (false) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 161, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.Link.class) { 	java.lang.String [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 78, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, java.lang.Object> rawLoadEntry : rawLoad.entrySet()) { 	i[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.util.ConfigUtil.NETWORKS.equals(rawLoadEntry.getKey())) { 	java.[...] ` -topatch--> `if (true) { 	java.util.Map<java.lang.String, java.lang.Object> rawNetworks = ((java.util.Map<java.la[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.util.ConfigUtil.NETWORKS.equals(rawLoadEntry.getKey())) { 	java.[...] ` -topatch--> `if (false) { 	java.util.Map<java.lang.String, java.lang.Object> rawNetworks = ((java.util.Map<java.l[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 79, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.util.ConfigUtil.NETWORKS.equals(rawLoadEntry.getKey())) { 	java.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.util.ConfigUtil.CONTAINERS.equals(rawLoadEntry.getKey())) { 	jav[...] ` -topatch--> `if (true) { 	java.util.Map<java.lang.String, java.lang.Object> rawContainers = ((java.util.Map<java.[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.util.ConfigUtil.CONTAINERS.equals(rawLoadEntry.getKey())) { 	jav[...] ` -topatch--> `if (false) { 	java.util.Map<java.lang.String, java.lang.Object> rawContainers = ((java.util.Map<java[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 85, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.util.ConfigUtil.CONTAINERS.equals(rawLoadEntry.getKey())) { 	jav[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.ExposedPort.class) { 	java.lang.[...] ` -topatch--> `if (true) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.ExposedPort.class) { 	java.lang.[...] ` -topatch--> `if (false) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 155, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.ExposedPort.class) { 	java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 158, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.Image.class) { 	java.lang.String[...] ` -topatch--> `if (true) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 158, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.Image.class) { 	java.lang.String[...] ` -topatch--> `if (false) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 158, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.Image.class) { 	java.lang.String[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 94, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `containers.add(rawLoadEntry.getKey(), container) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 102, pointed element: CtForEachImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtForEachImpl) `for (java.util.Map.Entry<java.lang.String, org.arquillian.cube.docker.impl.client.config.CubeContain[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (container.getExtends() != null) { 	java.lang.String extendsContainer = container.getExtends(); 	[...] ` -topatch--> `if (true) { 	java.lang.String extendsContainer = container.getExtends(); 	if (dockerCompositions.get[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (container.getExtends() != null) { 	java.lang.String extendsContainer = container.getExtends(); 	[...] ` -topatch--> `if (false) { 	java.lang.String extendsContainer = container.getExtends(); 	if (dockerCompositions.ge[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 104, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (container.getExtends() != null) { 	java.lang.String extendsContainer = container.getExtends(); 	[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 34, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `name = parts[0] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 145, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.yamlClassConstructors.put(org.yaml.snakeyaml.nodes.NodeId.scalar, new org.arquillian.cube.docke[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 35, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `tag = parts[1] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.PortBinding.class) { 	java.lang.[...] ` -topatch--> `if (true) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node))[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.PortBinding.class) { 	java.lang.[...] ` -topatch--> `if (false) { 	java.lang.String value = constructScalar(((org.yaml.snakeyaml.nodes.ScalarNode) (node)[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.util.ConfigUtil line: 152, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (node.getType() == org.arquillian.cube.docker.impl.client.config.PortBinding.class) { 	java.lang.[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 19, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `int exposed ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 20, pointed element: CtLocalVariableImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtLocalVariableImpl) `java.lang.String type = null ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 22, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `exposed = java.lang.Integer.parseInt(parts[0].trim()) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 23, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parts.length > 1) { 	type = parts[1].trim(); } ` -topatch--> `if (true) { 	type = parts[1].trim(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 23, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (parts.length > 1) { 	type = parts[1].trim(); } ` -topatch--> `if (false) { 	type = parts[1].trim(); }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 23, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (parts.length > 1) { 	type = parts[1].trim(); } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 12, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.exposed = exposed ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 13, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type != null) { 	this.type = type; } ` -topatch--> `if (true) { 	this.type = type; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 13, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (type != null) { 	this.type = type; } ` -topatch--> `if (false) { 	this.type = type; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.ExposedPort line: 13, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (type != null) { 	this.type = type; } ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 31, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.client.config.Image.isPort(parts[1])) { 	name = (parts[0] + ":")[...] ` -topatch--> `if (true) { 	name = (parts[0] + ":") + parts[1]; } else { 	name = parts[0]; 	tag = parts[1]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 31, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.client.config.Image.isPort(parts[1])) { 	name = (parts[0] + ":")[...] ` -topatch--> `if (false) { 	name = (parts[0] + ":") + parts[1]; } else { 	name = parts[0]; 	tag = parts[1]; }` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 31, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (org.arquillian.cube.docker.impl.client.config.Image.isPort(parts[1])) { 	name = (parts[0] + ":")[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 37, pointed element: CtBreakImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtBreakImpl) `break ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((((!map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAI[...] ` -topatch--> `if (true)  { 	try { 		cubeConfiguration.dockerContainersContent =  		org.arquillian.cube.docker.impl[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if ((((!map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAI[...] ` -topatch--> `if (false)  { 	try { 		cubeConfiguration.dockerContainersContent =  		org.arquillian.cube.docker.imp[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 179, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if ((((!map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAI[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `if (true) {  	java.lang.String locations = map.get(org.arquillian.cube.docker.impl.client.CubeDocker[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `if (false) {  	java.lang.String locations = map.get(org.arquillian.cube.docker.impl.client.CubeDocke[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 166, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.DOCKER_CONTAINERS[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 219, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CLEAN_BUILD_IMAGE[...] ` -topatch--> `if (true) { 	cubeConfiguration.cleanBuildImage = java.lang.Boolean.parseBoolean(map.get(org.arquilli[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 219, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CLEAN_BUILD_IMAGE[...] ` -topatch--> `if (false) { 	cubeConfiguration.cleanBuildImage = java.lang.Boolean.parseBoolean(map.get(org.arquill[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 219, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CLEAN_BUILD_IMAGE[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.REMOVE_VOLUMES)) [...] ` -topatch--> `if (true) { 	cubeConfiguration.removeVolumes = java.lang.Boolean.parseBoolean(map.get(org.arquillian[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.REMOVE_VOLUMES)) [...] ` -topatch--> `if (false) { 	cubeConfiguration.removeVolumes = java.lang.Boolean.parseBoolean(map.get(org.arquillia[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 215, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.REMOVE_VOLUMES)) [...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 196, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.AUTO_START_CONTAI[...] ` -topatch--> `if (true) { 	java.lang.String expression = map.get(org.arquillian.cube.docker.impl.client.CubeDocker[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 196, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.AUTO_START_CONTAI[...] ` -topatch--> `if (false) { 	java.lang.String expression = map.get(org.arquillian.cube.docker.impl.client.CubeDocke[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 196, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.AUTO_START_CONTAI[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CUBE_SPECIFIC_PRO[...] ` -topatch--> `if (true) { 	java.lang.String content = map.get(org.arquillian.cube.docker.impl.client.CubeDockerCon[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CUBE_SPECIFIC_PRO[...] ` -topatch--> `if (false) { 	java.lang.String content = map.get(org.arquillian.cube.docker.impl.client.CubeDockerCo[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 189, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CUBE_SPECIFIC_PRO[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 212, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `cubeConfiguration.dockerAutoStartOrder = org.arquillian.cube.docker.impl.client.AutoStartOrderFactor[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.AUTO_START_ORDER)[...] ` -topatch--> `if (true) { 	cubeConfiguration.dockerAutoStartOrder =  	org.arquillian.cube.docker.impl.client.AutoS[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.AUTO_START_ORDER)[...] ` -topatch--> `if (false) { 	cubeConfiguration.dockerAutoStartOrder =  	org.arquillian.cube.docker.impl.client.Auto[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 208, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.AUTO_START_ORDER)[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CLEAN)) { 	cubeCo[...] ` -topatch--> `if (true) { 	cubeConfiguration.clean = java.lang.Boolean.parseBoolean(map.get(org.arquillian.cube.do[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
ReplaceIfBooleanOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CLEAN)) { 	cubeCo[...] ` -topatch--> `if (false) { 	cubeConfiguration.clean = java.lang.Boolean.parseBoolean(map.get(org.arquillian.cube.d[...]` (spoon.support.reflect.code.CtIfImpl) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.CubeDockerConfiguration line: 204, pointed element: CtIfImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtIfImpl) `if (map.containsKey(org.arquillian.cube.docker.impl.client.CubeDockerConfiguration.CLEAN)) { 	cubeCo[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.DockerCompositions line: 65, pointed element: CtInvocationImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtInvocationImpl) `this.containers.put(id, container) ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.CubeContainer line: 76, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.image = image ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 18, pointed element: CtSwitchImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtSwitchImpl) `switch (parts.length) { 	case 1 : 		{    			name = image; 			break; 		} 	case 2 : 		{     			if (org[...] ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 9, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.tag = tag ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:59) - mod_point MP=org.arquillian.cube.docker.impl.client.config.Image line: 8, pointed element: CtAssignmentImpl
[INFO ] fr.inria.astor.core.solutionsearch.ExhaustiveSearchEngine.startEvolution(ExhaustiveSearchEngine.java:60) - -->op: OP_INSTANCE:
RemoveOp:(spoon.support.reflect.code.CtAssignmentImpl) `this.name = name ` -topatch--> `-` (null) 
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:171) - Time Repair Loop (s): 1560.584
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.atEnd(AstorCoreEngine.java:173) - generationsexecuted: 1
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:255) - 
----SUMMARY_EXECUTION---
[INFO ] fr.inria.astor.core.solutionsearch.AstorCoreEngine.printFinalStatus(AstorCoreEngine.java:265) - End Repair Search: NOT Found solution
[INFO ] fr.inria.main.evolution.AstorMain.run(AstorMain.java:190) - Time Total(s): 1592.976
