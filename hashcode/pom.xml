<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>io.mincongh</groupId>
    <artifactId>java-examples-parent</artifactId>
    <version>0.0.1-SNAPSHOT</version>
  </parent>

  <artifactId>java-examples-hashcode</artifactId>
  <name>Java Examples - Hash Code</name>

  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <!--
              Stack Overflow - HashMap get/put complexity
              http://stackoverflow.com/questions/4553624/hashmap-get-put-complexity

              In JDK 8, HashMap has been tweaked so that if keys can
              be compared for ordering, then any densely-populated
              bucket is implemented as a tree, so that even if there
              are lots of entries with the same hash code, the
              complexity is O(log n). That can cause issues if you
              have a key type where equality and ordering are
              different, of course.

              For the test in io.mincongh.hashcode.googleinterview,

                  Java 7 : 503015ns
                  Java 8 : 411901ns

          -->
          <source>1.8</source>
          <target>1.8</target>
        </configuration>
      </plugin>
    </plugins>
  </build>

</project>
