INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive(int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, false, 'java.lang.StackOverflowError');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.core.Calculation.isPositive(int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', false, false, '');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.core.Calculation.mult(int)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.VoidReturnValueGenerator', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.core.Calculation.parse(java.lang.String)', 'de.tum.in.niedermr.ta.extensions.analysis.mutation.returnvalues.CommonInstancesReturnValueGenerator', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.system.Mathematics.faculty(de.tum.in.ma.simpleproject.core.Calculation)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.VoidReturnValueGenerator', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty2()', 'de.tum.in.ma.simpleproject.system.Mathematics.faculty(de.tum.in.ma.simpleproject.core.Calculation)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.VoidReturnValueGenerator', true, true, 'java.lang.AssertionError');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.core.Calculation.trimString(java.lang.String)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith0', true, false, 'java.lang.NumberFormatException');
INSERT INTO Test_Result_Import (execution, testcase, method, retValGen, killed, assertErr, exception) VALUES ('TEST', 'de.tum.in.ma.simpleproject.system.MathematicsTests.testFaculty1()', 'de.tum.in.ma.simpleproject.core.Calculation.trimString(java.lang.String)', 'de.tum.in.niedermr.ta.core.analysis.mutation.returnvalues.SimpleReturnValueGeneratorWith1', true, false, 'java.lang.NumberFormatException');
