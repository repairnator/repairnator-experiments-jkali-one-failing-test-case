/*
 * This file is generated by jOOQ.
*/
package net.thomas.portfolio.usage_data.schema;


import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import net.thomas.portfolio.usage_data.schema.tables.AccessType;
import net.thomas.portfolio.usage_data.schema.tables.User;
import net.thomas.portfolio.usage_data.schema.tables.UserAccessedDocument;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class UsageData extends SchemaImpl {

    private static final long serialVersionUID = -627680675;

    /**
     * The reference instance of <code>usage_data</code>
     */
    public static final UsageData USAGE_DATA = new UsageData();

    /**
     * The table <code>usage_data.access_type</code>.
     */
    public final AccessType ACCESS_TYPE = net.thomas.portfolio.usage_data.schema.tables.AccessType.ACCESS_TYPE;

    /**
     * The table <code>usage_data.user</code>.
     */
    public final User USER = net.thomas.portfolio.usage_data.schema.tables.User.USER;

    /**
     * The table <code>usage_data.user_accessed_document</code>.
     */
    public final UserAccessedDocument USER_ACCESSED_DOCUMENT = net.thomas.portfolio.usage_data.schema.tables.UserAccessedDocument.USER_ACCESSED_DOCUMENT;

    /**
     * No further instances allowed
     */
    private UsageData() {
        super("usage_data", null);
    }


    /**
     * {@inheritDoc}
     */
    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        List result = new ArrayList();
        result.addAll(getTables0());
        return result;
    }

    private final List<Table<?>> getTables0() {
        return Arrays.<Table<?>>asList(
            AccessType.ACCESS_TYPE,
            User.USER,
            UserAccessedDocument.USER_ACCESSED_DOCUMENT);
    }
}
