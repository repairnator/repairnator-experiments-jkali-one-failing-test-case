/*
 * This file is generated by jOOQ.
*/
package net.thomas.portfolio.usage_data.schema;


import javax.annotation.Generated;

import net.thomas.portfolio.usage_data.schema.tables.AccessType;
import net.thomas.portfolio.usage_data.schema.tables.User;
import net.thomas.portfolio.usage_data.schema.tables.UserAccessedDocument;

import org.jooq.Index;
import org.jooq.OrderField;
import org.jooq.impl.Internal;


/**
 * A class modelling indexes of tables of the <code>usage_data</code> schema.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Indexes {

    // -------------------------------------------------------------------------
    // INDEX definitions
    // -------------------------------------------------------------------------

    public static final Index ACCESS_TYPE_ACCESS_TYPE_NAME = Indexes0.ACCESS_TYPE_ACCESS_TYPE_NAME;
    public static final Index ACCESS_TYPE_NAME_UNIQUE = Indexes0.ACCESS_TYPE_NAME_UNIQUE;
    public static final Index ACCESS_TYPE_PRIMARY = Indexes0.ACCESS_TYPE_PRIMARY;
    public static final Index USER_NAME_UNIQUE = Indexes0.USER_NAME_UNIQUE;
    public static final Index USER_PRIMARY = Indexes0.USER_PRIMARY;
    public static final Index USER_USERNAME_INDEX = Indexes0.USER_USERNAME_INDEX;
    public static final Index USER_ACCESSED_DOCUMENT_ACCESS_TYPE_FOREIGN_KEY_IDX = Indexes0.USER_ACCESSED_DOCUMENT_ACCESS_TYPE_FOREIGN_KEY_IDX;
    public static final Index USER_ACCESSED_DOCUMENT_DOCUMENT_INDEX = Indexes0.USER_ACCESSED_DOCUMENT_DOCUMENT_INDEX;
    public static final Index USER_ACCESSED_DOCUMENT_PRIMARY = Indexes0.USER_ACCESSED_DOCUMENT_PRIMARY;
    public static final Index USER_ACCESSED_DOCUMENT_ROW_UNIQUE = Indexes0.USER_ACCESSED_DOCUMENT_ROW_UNIQUE;
    public static final Index USER_ACCESSED_DOCUMENT_USER_FOREIGN_KEY = Indexes0.USER_ACCESSED_DOCUMENT_USER_FOREIGN_KEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Indexes0 {
        public static Index ACCESS_TYPE_ACCESS_TYPE_NAME = Internal.createIndex("access_type_name", AccessType.ACCESS_TYPE, new OrderField[] { AccessType.ACCESS_TYPE.NAME }, false);
        public static Index ACCESS_TYPE_NAME_UNIQUE = Internal.createIndex("name_UNIQUE", AccessType.ACCESS_TYPE, new OrderField[] { AccessType.ACCESS_TYPE.NAME }, true);
        public static Index ACCESS_TYPE_PRIMARY = Internal.createIndex("PRIMARY", AccessType.ACCESS_TYPE, new OrderField[] { AccessType.ACCESS_TYPE.ID }, true);
        public static Index USER_NAME_UNIQUE = Internal.createIndex("name_UNIQUE", User.USER, new OrderField[] { User.USER.NAME }, true);
        public static Index USER_PRIMARY = Internal.createIndex("PRIMARY", User.USER, new OrderField[] { User.USER.ID }, true);
        public static Index USER_USERNAME_INDEX = Internal.createIndex("username_index", User.USER, new OrderField[] { User.USER.NAME }, false);
        public static Index USER_ACCESSED_DOCUMENT_ACCESS_TYPE_FOREIGN_KEY_IDX = Internal.createIndex("access_type_foreign_key_idx", UserAccessedDocument.USER_ACCESSED_DOCUMENT, new OrderField[] { UserAccessedDocument.USER_ACCESSED_DOCUMENT.ACCESS_TYPE_ID }, false);
        public static Index USER_ACCESSED_DOCUMENT_DOCUMENT_INDEX = Internal.createIndex("document_index", UserAccessedDocument.USER_ACCESSED_DOCUMENT, new OrderField[] { UserAccessedDocument.USER_ACCESSED_DOCUMENT.DOCUMENT_TYPE, UserAccessedDocument.USER_ACCESSED_DOCUMENT.DOCUMENT_UID }, false);
        public static Index USER_ACCESSED_DOCUMENT_PRIMARY = Internal.createIndex("PRIMARY", UserAccessedDocument.USER_ACCESSED_DOCUMENT, new OrderField[] { UserAccessedDocument.USER_ACCESSED_DOCUMENT.ROW }, true);
        public static Index USER_ACCESSED_DOCUMENT_ROW_UNIQUE = Internal.createIndex("row_UNIQUE", UserAccessedDocument.USER_ACCESSED_DOCUMENT, new OrderField[] { UserAccessedDocument.USER_ACCESSED_DOCUMENT.ROW }, true);
        public static Index USER_ACCESSED_DOCUMENT_USER_FOREIGN_KEY = Internal.createIndex("user_foreign_key", UserAccessedDocument.USER_ACCESSED_DOCUMENT, new OrderField[] { UserAccessedDocument.USER_ACCESSED_DOCUMENT.USER_ID }, false);
    }
}
