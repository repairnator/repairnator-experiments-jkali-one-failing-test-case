-- Created with: de.tum.in.niedermr.ta.extensions.analysis.workflows.coverage.parser.JaCoCoLineLevelParser

-- BEGIN VARIABLES
SET @projectKey = '###';
SET @commitHash = '###';
SET @sessionNumber = '###';
-- END VARIABLES

INSERT IGNORE INTO Commit_Info (projectKey, commitHash) VALUES (@projectKey, @commitHash);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', '<init>', '()V', 7);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', 'setResult', '(I)V', 14);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', 'getResult', '()I', 19);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', 'getResultAsString', '()Ljava/lang/String;', 24);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', 'isEven', '()Z', 29);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', 'add', '(I)V', 34);
INSERT INTO Method_Location_Import (projectKey, commitHash, className, methodShortName, methodDesc, startLine) VALUES (@projectKey, @commitHash, 'de/tum/in/ma/simpleproject/lite/CalculationLite', 'increment', '()V', 39);
INSERT INTO Line_Coverage_Import (projectKey, commitHash, sessionNumber, packageName, sourceFileName, lineNumber, coverageState) VALUES (@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 7, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 9, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 10, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 14, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 15, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 19, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 24, 'PARTIALLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 29, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 34, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 35, 'FULLY_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 39, 'NOT_COVERED'),
(@projectKey, @commitHash, @sessionNumber, 'de/tum/in/ma/simpleproject/lite', 'CalculationLite', 40, 'FULLY_COVERED');